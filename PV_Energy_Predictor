{"cells":[{"cell_type":"markdown","metadata":{"id":"XvtJaIfcF0Sw"},"source":["# Import Libraries"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3rac2qt8F1Zy"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"markdown","metadata":{"id":"QnQKXzJWF1wX"},"source":["# Import Dataset"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28163,"status":"ok","timestamp":1722266715620,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"x26IoEVmw6gJ","outputId":"503f2434-1928-4d7c-9572-f7a641c03189"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f59RJ77wF5d4"},"outputs":[],"source":["df_weather = pd.read_excel(\"/content/drive/MyDrive/CODED/Capstone Project/Not Garbage/Copy of Annex 2.5 Shagaya P50 SolarGIS TMY - hourly (4).xlsx\",sheet_name=\"SolarGIS_TMY_hourly_Kuwait_P50\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ycrjrbz7ITEz"},"outputs":[],"source":["df_energy = pd.read_excel(\"/content/drive/MyDrive/CODED/Capstone Project/Not Garbage/PRODUCTION_IRRADIANCE_KISR_PV_Ali A. Almulla.xlsx\",sheet_name=\"Hoja2\")"]},{"cell_type":"markdown","metadata":{"id":"uTVtp3WvGG8I"},"source":["# Read Weather Data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1722266723212,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"7tqp1-W5GIpu","outputId":"1b5d20be-a0c3-4944-bb36-eb07fe0b60d0"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8760 entries, 0 to 8759\n","Data columns (total 13 columns):\n"," #   Column                           Non-Null Count  Dtype  \n","---  ------                           --------------  -----  \n"," 0   Day                              8760 non-null   int64  \n"," 1   Time                             8760 non-null   object \n"," 2   Global Horizon irradiation       8760 non-null   int64  \n"," 3   direct normal irradiation        8760 non-null   int64  \n"," 4   diffuse horizonal irradiation    8760 non-null   int64  \n"," 5   sun azimuth angle                8760 non-null   float64\n"," 6   sun elevation angle              8760 non-null   float64\n"," 7   air temp                         8760 non-null   float64\n"," 8   Relative Humidty                 8760 non-null   float64\n"," 9   Wind Speed                       8760 non-null   float64\n"," 10  Wind Direction                   8760 non-null   int64  \n"," 11  Atmospheric Pressure             8760 non-null   float64\n"," 12  Wet Bulb Temperature             8760 non-null   float64\n","dtypes: float64(7), int64(5), object(1)\n","memory usage: 889.8+ KB\n"]}],"source":["df_weather.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1722266723212,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"OyMvgGgzGK6s","outputId":"9263cd0d-d9f8-473c-fc35-d1e0b419846e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Day                                0\n","Time                               0\n","Global Horizon irradiation         0\n","direct normal irradiation          0\n","diffuse horizonal irradiation      0\n","sun azimuth angle                  0\n","sun elevation angle                0\n","air temp                           0\n","Relative Humidty                   0\n","Wind Speed                         0\n","Wind Direction                     0\n","Atmospheric Pressure               0\n","Wet Bulb Temperature               0\n","dtype: int64"]},"metadata":{},"execution_count":6}],"source":["df_weather.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1722266723212,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"L7EEPrbjGMG6","outputId":"120662a9-e12f-4e26-c90b-5365a472d747"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Day  Global Horizon irradiation  direct normal irradiation   \\\n","count  8760.000000                 8760.000000                 8760.000000   \n","mean    183.000000                  238.053311                  212.001712   \n","std     105.372043                  319.370489                  275.231914   \n","min       1.000000                    0.000000                    0.000000   \n","25%      92.000000                    0.000000                    0.000000   \n","50%     183.000000                   10.000000                    5.000000   \n","75%     274.000000                  479.000000                  461.000000   \n","max     365.000000                 1037.000000                  953.000000   \n","\n","       diffuse horizonal irradiation    sun azimuth angle  \\\n","count                      8760.000000        8760.000000   \n","mean                         97.747489           0.419943   \n","std                         121.229947          95.112868   \n","min                           0.000000        -167.900000   \n","25%                           0.000000         -89.525000   \n","50%                           9.000000          -1.800000   \n","75%                         203.000000          88.825000   \n","max                         474.000000         163.800000   \n","\n","       sun elevation angle     air temp  Relative Humidty   Wind Speed  \\\n","count          8760.000000  8760.000000       8760.000000  8760.000000   \n","mean              0.311655    25.840765         21.489098     3.956336   \n","std              41.126024    10.980324         16.154036     1.836954   \n","min             -81.900000     0.000000          2.400000     0.100000   \n","25%             -34.100000    17.000000          9.200000     2.600000   \n","50%               0.950000    26.400000         16.200000     3.700000   \n","75%              34.825000    33.700000         29.400000     5.100000   \n","max              81.500000    50.100000         91.100000    11.900000   \n","\n","       Wind Direction  Atmospheric Pressure  Wet Bulb Temperature  \n","count     8760.000000           8760.000000           8760.000000  \n","mean       168.105365            984.440217             14.746062  \n","std         86.982807              7.378646              6.654681  \n","min          0.000000            970.600000             -4.500000  \n","25%        113.000000            977.900000              9.900000  \n","50%        136.000000            985.300000             14.900000  \n","75%        238.000000            990.500000             19.800000  \n","max        359.000000           1000.600000             30.300000  "],"text/html":["\n","  <div id=\"df-4060f934-c238-4940-87a4-5e72dbf8eb76\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Day</th>\n","      <th>Global Horizon irradiation</th>\n","      <th>direct normal irradiation</th>\n","      <th>diffuse horizonal irradiation</th>\n","      <th>sun azimuth angle</th>\n","      <th>sun elevation angle</th>\n","      <th>air temp</th>\n","      <th>Relative Humidty</th>\n","      <th>Wind Speed</th>\n","      <th>Wind Direction</th>\n","      <th>Atmospheric Pressure</th>\n","      <th>Wet Bulb Temperature</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>183.000000</td>\n","      <td>238.053311</td>\n","      <td>212.001712</td>\n","      <td>97.747489</td>\n","      <td>0.419943</td>\n","      <td>0.311655</td>\n","      <td>25.840765</td>\n","      <td>21.489098</td>\n","      <td>3.956336</td>\n","      <td>168.105365</td>\n","      <td>984.440217</td>\n","      <td>14.746062</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>105.372043</td>\n","      <td>319.370489</td>\n","      <td>275.231914</td>\n","      <td>121.229947</td>\n","      <td>95.112868</td>\n","      <td>41.126024</td>\n","      <td>10.980324</td>\n","      <td>16.154036</td>\n","      <td>1.836954</td>\n","      <td>86.982807</td>\n","      <td>7.378646</td>\n","      <td>6.654681</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-167.900000</td>\n","      <td>-81.900000</td>\n","      <td>0.000000</td>\n","      <td>2.400000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","      <td>970.600000</td>\n","      <td>-4.500000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>92.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-89.525000</td>\n","      <td>-34.100000</td>\n","      <td>17.000000</td>\n","      <td>9.200000</td>\n","      <td>2.600000</td>\n","      <td>113.000000</td>\n","      <td>977.900000</td>\n","      <td>9.900000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>183.000000</td>\n","      <td>10.000000</td>\n","      <td>5.000000</td>\n","      <td>9.000000</td>\n","      <td>-1.800000</td>\n","      <td>0.950000</td>\n","      <td>26.400000</td>\n","      <td>16.200000</td>\n","      <td>3.700000</td>\n","      <td>136.000000</td>\n","      <td>985.300000</td>\n","      <td>14.900000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>274.000000</td>\n","      <td>479.000000</td>\n","      <td>461.000000</td>\n","      <td>203.000000</td>\n","      <td>88.825000</td>\n","      <td>34.825000</td>\n","      <td>33.700000</td>\n","      <td>29.400000</td>\n","      <td>5.100000</td>\n","      <td>238.000000</td>\n","      <td>990.500000</td>\n","      <td>19.800000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>365.000000</td>\n","      <td>1037.000000</td>\n","      <td>953.000000</td>\n","      <td>474.000000</td>\n","      <td>163.800000</td>\n","      <td>81.500000</td>\n","      <td>50.100000</td>\n","      <td>91.100000</td>\n","      <td>11.900000</td>\n","      <td>359.000000</td>\n","      <td>1000.600000</td>\n","      <td>30.300000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4060f934-c238-4940-87a4-5e72dbf8eb76')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4060f934-c238-4940-87a4-5e72dbf8eb76 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4060f934-c238-4940-87a4-5e72dbf8eb76');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bed9bffb-c273-4a63-9b8c-057b4b212b70\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bed9bffb-c273-4a63-9b8c-057b4b212b70')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bed9bffb-c273-4a63-9b8c-057b4b212b70 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_weather\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3038.417103373248,\n        \"min\": 1.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          183.0,\n          274.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Global Horizon irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3011.968908151479,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          238.0533105022831,\n          479.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct normal irradiation \",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3017.9932988096944,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          212.00171232876713,\n          461.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse horizonal irradiation  \",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3055.471524707212,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          97.74748858447488,\n          203.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun azimuth angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3094.4564222387207,\n        \"min\": -167.9,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.4199429223744296,\n          -1.8,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun elevation angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3095.3663292692972,\n        \"min\": -81.9,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.3116552511415534,\n          0.95,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3088.8798460596713,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25.84076484018265,\n          26.4,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Relative Humidty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3087.85875474289,\n        \"min\": 2.4,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          21.48909817351598,\n          16.2,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind Speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3095.6551873275125,\n        \"min\": 0.1,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.956335616438356,\n          3.7,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind Direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3043.378830245205,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          168.10536529680365,\n          136.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Atmospheric Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2819.1304860469027,\n        \"min\": 7.378646269963496,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          984.4402168949771,\n          985.3,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wet Bulb Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3092.5074219161497,\n        \"min\": -4.5,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.746061643835617,\n          14.9,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}],"source":["df_weather.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1722266723212,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"H5X3jKtOGNcy","outputId":"ed8775c8-504c-474e-96ca-b8901a97c7e7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Day      Time  Global Horizon irradiation  direct normal irradiation   \\\n","118    5  22:30:00                           0                           0   \n","\n","     diffuse horizonal irradiation    sun azimuth angle  sun elevation angle  \\\n","118                                0              104.7                -69.4   \n","\n","     air temp  Relative Humidty  Wind Speed  Wind Direction  \\\n","118      13.2              55.5         4.7             311   \n","\n","     Atmospheric Pressure  Wet Bulb Temperature  \n","118                 985.1                  10.3  "],"text/html":["\n","  <div id=\"df-5f34367e-5115-4b10-a0ba-9d8916ef7923\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Day</th>\n","      <th>Time</th>\n","      <th>Global Horizon irradiation</th>\n","      <th>direct normal irradiation</th>\n","      <th>diffuse horizonal irradiation</th>\n","      <th>sun azimuth angle</th>\n","      <th>sun elevation angle</th>\n","      <th>air temp</th>\n","      <th>Relative Humidty</th>\n","      <th>Wind Speed</th>\n","      <th>Wind Direction</th>\n","      <th>Atmospheric Pressure</th>\n","      <th>Wet Bulb Temperature</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>118</th>\n","      <td>5</td>\n","      <td>22:30:00</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>104.7</td>\n","      <td>-69.4</td>\n","      <td>13.2</td>\n","      <td>55.5</td>\n","      <td>4.7</td>\n","      <td>311</td>\n","      <td>985.1</td>\n","      <td>10.3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f34367e-5115-4b10-a0ba-9d8916ef7923')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f34367e-5115-4b10-a0ba-9d8916ef7923 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f34367e-5115-4b10-a0ba-9d8916ef7923');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_weather\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 5,\n        \"max\": 5,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Time\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"22:30:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Global Horizon irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct normal irradiation \",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse horizonal irradiation  \",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun azimuth angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 104.7,\n        \"max\": 104.7,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          104.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun elevation angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": -69.4,\n        \"max\": -69.4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          -69.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 13.2,\n        \"max\": 13.2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          13.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Relative Humidty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 55.5,\n        \"max\": 55.5,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          55.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind Speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 4.7,\n        \"max\": 4.7,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wind Direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 311,\n        \"max\": 311,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Atmospheric Pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 985.1,\n        \"max\": 985.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          985.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wet Bulb Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 10.3,\n        \"max\": 10.3,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          10.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}],"source":["df_weather.sample()"]},{"cell_type":"markdown","metadata":{"id":"mPbPYL9FuBhw"},"source":["# Data Cleaning for Weather Data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cOa0PWWvuFgQ"},"outputs":[],"source":["df_weather.columns = [\"day_no\",\"time\",\"global_horizon_irradiation\",\"direct_normal_irradiation\",\"diffuse_horizonal_irradiation\",\"sun_azimuth_angle\",\"sun_elevation_angle\",\"air_temp\",\"relative_humidity\",\"wind_speed\",\"wind_direction\",\"atmospheric_pressure\",\"wet_bulb_temperature\"]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tyCf8GXGuNZR"},"outputs":[],"source":["df_weather[\"date\"] = pd.to_datetime('2013-01-01') + pd.to_timedelta(df_weather[\"day_no\"] - 1, unit='d')\n","\n","col = df_weather.pop(\"date\")\n","df_weather.insert(0, \"date\", col)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DdDTZaKnuQUv"},"outputs":[],"source":["df_weather[\"date\"] = pd.to_datetime(df_weather[\"date\"])\n","\n","df_weather[\"day\"] = df_weather[\"date\"].dt.day\n","\n","df_weather[\"month\"] = df_weather[\"date\"].dt.month"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p1vLT2AUuSwT"},"outputs":[],"source":["col = df_weather.pop(\"day\")\n","df_weather.insert(0, \"day\", col)\n","\n","col = df_weather.pop(\"month\")\n","df_weather.insert(1, \"month\", col)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1722266723212,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"QCIyM6cpuzSN","outputId":"0944ef94-67f8-4aa3-935c-a81b3ab290e9"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8760 entries, 0 to 8759\n","Data columns (total 16 columns):\n"," #   Column                         Non-Null Count  Dtype         \n","---  ------                         --------------  -----         \n"," 0   day                            8760 non-null   int32         \n"," 1   month                          8760 non-null   int32         \n"," 2   date                           8760 non-null   datetime64[ns]\n"," 3   day_no                         8760 non-null   int64         \n"," 4   time                           8760 non-null   object        \n"," 5   global_horizon_irradiation     8760 non-null   int64         \n"," 6   direct_normal_irradiation      8760 non-null   int64         \n"," 7   diffuse_horizonal_irradiation  8760 non-null   int64         \n"," 8   sun_azimuth_angle              8760 non-null   float64       \n"," 9   sun_elevation_angle            8760 non-null   float64       \n"," 10  air_temp                       8760 non-null   float64       \n"," 11  relative_humidity              8760 non-null   float64       \n"," 12  wind_speed                     8760 non-null   float64       \n"," 13  wind_direction                 8760 non-null   int64         \n"," 14  atmospheric_pressure           8760 non-null   float64       \n"," 15  wet_bulb_temperature           8760 non-null   float64       \n","dtypes: datetime64[ns](1), float64(7), int32(2), int64(5), object(1)\n","memory usage: 1.0+ MB\n"]}],"source":["df_weather.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D3MthYqpuV4P"},"outputs":[],"source":["from datetime import datetime\n","\n","def convert_to_datetime(time_obj):\n","    return datetime.combine(datetime.today(), time_obj)\n","\n","df_weather[\"time\"] = df_weather[\"time\"].apply(convert_to_datetime)\n","df_weather[\"hour\"] = df_weather[\"time\"].dt.hour\n","df_weather[\"minute\"] = df_weather[\"time\"].dt.minute\n","\n","df_weather.insert(2, \"hour\", df_weather.pop(\"hour\"))\n","\n","df_weather.insert(3, \"minute\", df_weather.pop(\"minute\"))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S4OhYTGyv87K"},"outputs":[],"source":["df_weather.drop([\"date\",\"day_no\",\"time\"], axis = 1, inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1722266723655,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"IWy8LyP_vItW","outputId":"39affcd5-a7ed-4cbf-9a33-7d43c5038b8e"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8760 entries, 0 to 8759\n","Data columns (total 15 columns):\n"," #   Column                         Non-Null Count  Dtype  \n","---  ------                         --------------  -----  \n"," 0   day                            8760 non-null   int32  \n"," 1   month                          8760 non-null   int32  \n"," 2   hour                           8760 non-null   int32  \n"," 3   minute                         8760 non-null   int32  \n"," 4   global_horizon_irradiation     8760 non-null   int64  \n"," 5   direct_normal_irradiation      8760 non-null   int64  \n"," 6   diffuse_horizonal_irradiation  8760 non-null   int64  \n"," 7   sun_azimuth_angle              8760 non-null   float64\n"," 8   sun_elevation_angle            8760 non-null   float64\n"," 9   air_temp                       8760 non-null   float64\n"," 10  relative_humidity              8760 non-null   float64\n"," 11  wind_speed                     8760 non-null   float64\n"," 12  wind_direction                 8760 non-null   int64  \n"," 13  atmospheric_pressure           8760 non-null   float64\n"," 14  wet_bulb_temperature           8760 non-null   float64\n","dtypes: float64(7), int32(4), int64(4)\n","memory usage: 889.8 KB\n"]}],"source":["df_weather.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1722266723655,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"8bUe8P5NOMs0","outputId":"2ce85d44-9271-42b3-d1c7-24f2f95dd4df"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      day  month  hour  minute  global_horizon_irradiation  \\\n","0       1      1     0      30                           0   \n","1       1      1     1      30                           0   \n","2       1      1     2      30                           0   \n","3       1      1     3      30                           0   \n","4       1      1     4      30                           0   \n","...   ...    ...   ...     ...                         ...   \n","8755   31     12    19      30                           0   \n","8756   31     12    20      30                           0   \n","8757   31     12    21      30                           0   \n","8758   31     12    22      30                           0   \n","8759   31     12    23      30                           0   \n","\n","      direct_normal_irradiation  diffuse_horizonal_irradiation  \\\n","0                             0                              0   \n","1                             0                              0   \n","2                             0                              0   \n","3                             0                              0   \n","4                             0                              0   \n","...                         ...                            ...   \n","8755                          0                              0   \n","8756                          0                              0   \n","8757                          0                              0   \n","8758                          0                              0   \n","8759                          0                              0   \n","\n","      sun_azimuth_angle  sun_elevation_angle  air_temp  relative_humidity  \\\n","0                 -97.1                -79.5       9.1               86.4   \n","1                -101.1                -67.8       8.8               87.0   \n","2                 -90.9                -54.8       8.7               87.6   \n","3                 -84.3                -41.8       7.9               20.9   \n","4                 -78.3                -28.9       7.4               20.2   \n","...                 ...                  ...       ...                ...   \n","8755               79.1                -31.1      11.1               74.8   \n","8756               85.2                -44.1      10.3               80.2   \n","8757               92.3                -57.1       9.8               84.0   \n","8758              103.9                -70.1       9.5               84.9   \n","8759              133.3                -81.0       9.3               85.7   \n","\n","      wind_speed  wind_direction  atmospheric_pressure  wet_bulb_temperature  \n","0            3.3             141                 992.2                   8.4  \n","1            3.0             137                 992.1                   8.2  \n","2            2.4             124                 992.0                   8.0  \n","3            2.6             135                 995.5                   0.9  \n","4            2.7             144                 995.6                   0.3  \n","...          ...             ...                   ...                   ...  \n","8755         4.8             132                 991.7                   9.7  \n","8756         3.9             139                 992.1                   9.2  \n","8757         3.9             139                 992.3                   8.9  \n","8758         3.7             139                 992.3                   8.7  \n","8759         3.3             141                 992.2                   8.5  \n","\n","[8760 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-468e91af-8b5a-4717-93f4-ee5c82b972d5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>global_horizon_irradiation</th>\n","      <th>direct_normal_irradiation</th>\n","      <th>diffuse_horizonal_irradiation</th>\n","      <th>sun_azimuth_angle</th>\n","      <th>sun_elevation_angle</th>\n","      <th>air_temp</th>\n","      <th>relative_humidity</th>\n","      <th>wind_speed</th>\n","      <th>wind_direction</th>\n","      <th>atmospheric_pressure</th>\n","      <th>wet_bulb_temperature</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-97.1</td>\n","      <td>-79.5</td>\n","      <td>9.1</td>\n","      <td>86.4</td>\n","      <td>3.3</td>\n","      <td>141</td>\n","      <td>992.2</td>\n","      <td>8.4</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-101.1</td>\n","      <td>-67.8</td>\n","      <td>8.8</td>\n","      <td>87.0</td>\n","      <td>3.0</td>\n","      <td>137</td>\n","      <td>992.1</td>\n","      <td>8.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-90.9</td>\n","      <td>-54.8</td>\n","      <td>8.7</td>\n","      <td>87.6</td>\n","      <td>2.4</td>\n","      <td>124</td>\n","      <td>992.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-84.3</td>\n","      <td>-41.8</td>\n","      <td>7.9</td>\n","      <td>20.9</td>\n","      <td>2.6</td>\n","      <td>135</td>\n","      <td>995.5</td>\n","      <td>0.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-78.3</td>\n","      <td>-28.9</td>\n","      <td>7.4</td>\n","      <td>20.2</td>\n","      <td>2.7</td>\n","      <td>144</td>\n","      <td>995.6</td>\n","      <td>0.3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8755</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>79.1</td>\n","      <td>-31.1</td>\n","      <td>11.1</td>\n","      <td>74.8</td>\n","      <td>4.8</td>\n","      <td>132</td>\n","      <td>991.7</td>\n","      <td>9.7</td>\n","    </tr>\n","    <tr>\n","      <th>8756</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>85.2</td>\n","      <td>-44.1</td>\n","      <td>10.3</td>\n","      <td>80.2</td>\n","      <td>3.9</td>\n","      <td>139</td>\n","      <td>992.1</td>\n","      <td>9.2</td>\n","    </tr>\n","    <tr>\n","      <th>8757</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>21</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>92.3</td>\n","      <td>-57.1</td>\n","      <td>9.8</td>\n","      <td>84.0</td>\n","      <td>3.9</td>\n","      <td>139</td>\n","      <td>992.3</td>\n","      <td>8.9</td>\n","    </tr>\n","    <tr>\n","      <th>8758</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>22</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>103.9</td>\n","      <td>-70.1</td>\n","      <td>9.5</td>\n","      <td>84.9</td>\n","      <td>3.7</td>\n","      <td>139</td>\n","      <td>992.3</td>\n","      <td>8.7</td>\n","    </tr>\n","    <tr>\n","      <th>8759</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>23</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>133.3</td>\n","      <td>-81.0</td>\n","      <td>9.3</td>\n","      <td>85.7</td>\n","      <td>3.3</td>\n","      <td>141</td>\n","      <td>992.2</td>\n","      <td>8.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8760 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-468e91af-8b5a-4717-93f4-ee5c82b972d5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-468e91af-8b5a-4717-93f4-ee5c82b972d5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-468e91af-8b5a-4717-93f4-ee5c82b972d5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e310e7bf-be5a-4967-8fb9-6da490be7ab8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e310e7bf-be5a-4967-8fb9-6da490be7ab8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e310e7bf-be5a-4967-8fb9-6da490be7ab8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_51e4c2fc-0de0-4b8e-ba34-15162d0041e4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_weather')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_51e4c2fc-0de0-4b8e-ba34-15162d0041e4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_weather');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_weather","summary":"{\n  \"name\": \"df_weather\",\n  \"rows\": 8760,\n  \"fields\": [\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          28,\n          16,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          8,\n          16,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 319,\n        \"min\": 0,\n        \"max\": 1037,\n        \"num_unique_values\": 1006,\n        \"samples\": [\n          900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct_normal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 275,\n        \"min\": 0,\n        \"max\": 953,\n        \"num_unique_values\": 865,\n        \"samples\": [\n          371\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse_horizonal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 121,\n        \"min\": 0,\n        \"max\": 474,\n        \"num_unique_values\": 437,\n        \"samples\": [\n          324\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_azimuth_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 95.11286789747031,\n        \"min\": -167.9,\n        \"max\": 163.8,\n        \"num_unique_values\": 2915,\n        \"samples\": [\n          113.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_elevation_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41.12602367162463,\n        \"min\": -81.9,\n        \"max\": 81.5,\n        \"num_unique_values\": 1608,\n        \"samples\": [\n          33.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.980323832187587,\n        \"min\": 0.0,\n        \"max\": 50.1,\n        \"num_unique_values\": 490,\n        \"samples\": [\n          43.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relative_humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.15403579127063,\n        \"min\": 2.4,\n        \"max\": 91.1,\n        \"num_unique_values\": 754,\n        \"samples\": [\n          14.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.8369539623921876,\n        \"min\": 0.1,\n        \"max\": 11.9,\n        \"num_unique_values\": 109,\n        \"samples\": [\n          7.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 86,\n        \"min\": 0,\n        \"max\": 359,\n        \"num_unique_values\": 357,\n        \"samples\": [\n          89\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atmospheric_pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.378646269963496,\n        \"min\": 970.6,\n        \"max\": 1000.6,\n        \"num_unique_values\": 297,\n        \"samples\": [\n          982.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wet_bulb_temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.654681197388475,\n        \"min\": -4.5,\n        \"max\": 30.3,\n        \"num_unique_values\": 339,\n        \"samples\": [\n          25.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":17}],"source":["df_weather"]},{"cell_type":"markdown","metadata":{"id":"QOsbYU6m_Am9"},"source":["# Read Energy Data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1722266723655,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"oBnXNDrx_Dhv","outputId":"f2bd6761-fa32-45ba-9c71-828a31aaae74"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8761 entries, 0 to 8760\n","Data columns (total 5 columns):\n"," #   Column                                                                        Non-Null Count  Dtype  \n","---  ------                                                                        --------------  -----  \n"," 0   Date                                                                          8761 non-null   object \n"," 1   Time                                                                          8761 non-null   object \n"," 2   Shagaya - Relay 7BBA01-K01 (Thin Film) - ENERGY EXPORTED (kWh)                8713 non-null   float64\n"," 3   Shagaya - Relay 7BBA02-K01 (Polycrystalline Silicon) - ENERGY EXPORTED (kWh)  8713 non-null   float64\n"," 4   Shagaya - Weather Station CT2 - GLOBAL RADIATION 2 (TILTED) (W/m2)            7945 non-null   float64\n","dtypes: float64(3), object(2)\n","memory usage: 342.4+ KB\n"]}],"source":["df_energy.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1722266723655,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"tG9MHI7FE4zv","outputId":"d533fabb-95c5-4de3-e861-ff96f7571ce1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date                                                                              0\n","Time                                                                              0\n","Shagaya - Relay 7BBA01-K01 (Thin Film) - ENERGY EXPORTED (kWh)                   48\n","Shagaya - Relay 7BBA02-K01 (Polycrystalline Silicon) - ENERGY EXPORTED (kWh)     48\n","Shagaya - Weather Station CT2 - GLOBAL RADIATION 2 (TILTED) (W/m2)              816\n","dtype: int64"]},"metadata":{},"execution_count":19}],"source":["df_energy.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1722266723655,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"PJQXmNkv_O0H","outputId":"881949e9-a093-47cc-9dfa-3708e1e09c5f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Shagaya - Relay 7BBA01-K01 (Thin Film) - ENERGY EXPORTED (kWh)  \\\n","count                                        8713.000000                \n","mean                                         1057.931367                \n","std                                          1784.897597                \n","min                                             0.000000                \n","25%                                             0.000000                \n","50%                                             0.000000                \n","75%                                          2092.000000                \n","max                                         29984.000000                \n","\n","       Shagaya - Relay 7BBA02-K01 (Polycrystalline Silicon) - ENERGY EXPORTED (kWh)  \\\n","count                                        8713.000000                              \n","mean                                         1111.775967                              \n","std                                          1933.863497                              \n","min                                             0.000000                              \n","25%                                             0.000000                              \n","50%                                             4.000000                              \n","75%                                          2176.000000                              \n","max                                         33104.000000                              \n","\n","       Shagaya - Weather Station CT2 - GLOBAL RADIATION 2 (TILTED) (W/m2)  \n","count                                        7945.000000                   \n","mean                                          268.354428                   \n","std                                           360.544905                   \n","min                                             0.000000                   \n","25%                                             0.000000                   \n","50%                                            11.336583                   \n","75%                                           565.593667                   \n","max                                          1167.946583                   "],"text/html":["\n","  <div id=\"df-6fe46d83-ca5a-4bac-8ece-870d9380f56e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Shagaya - Relay 7BBA01-K01 (Thin Film) - ENERGY EXPORTED (kWh)</th>\n","      <th>Shagaya - Relay 7BBA02-K01 (Polycrystalline Silicon) - ENERGY EXPORTED (kWh)</th>\n","      <th>Shagaya - Weather Station CT2 - GLOBAL RADIATION 2 (TILTED) (W/m2)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>8713.000000</td>\n","      <td>8713.000000</td>\n","      <td>7945.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1057.931367</td>\n","      <td>1111.775967</td>\n","      <td>268.354428</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1784.897597</td>\n","      <td>1933.863497</td>\n","      <td>360.544905</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","      <td>11.336583</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2092.000000</td>\n","      <td>2176.000000</td>\n","      <td>565.593667</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>29984.000000</td>\n","      <td>33104.000000</td>\n","      <td>1167.946583</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6fe46d83-ca5a-4bac-8ece-870d9380f56e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6fe46d83-ca5a-4bac-8ece-870d9380f56e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6fe46d83-ca5a-4bac-8ece-870d9380f56e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-75dff60c-96bd-4f2f-9ebe-f31877a10a72\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75dff60c-96bd-4f2f-9ebe-f31877a10a72')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-75dff60c-96bd-4f2f-9ebe-f31877a10a72 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_energy\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Shagaya - Relay 7BBA01-K01 (Thin Film) - ENERGY EXPORTED (kWh)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10321.067946336276,\n        \"min\": 0.0,\n        \"max\": 29984.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8713.0,\n          1057.9313669229887,\n          29984.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Shagaya - Relay 7BBA02-K01 (Polycrystalline Silicon) - ENERGY EXPORTED (kWh)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11369.607417914383,\n        \"min\": 0.0,\n        \"max\": 33104.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8713.0,\n          1111.7759669459429,\n          2176.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Shagaya - Weather Station CT2 - GLOBAL RADIATION 2 (TILTED) (W/m2)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2717.6542659869156,\n        \"min\": 0.0,\n        \"max\": 7945.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          7945.0,\n          268.3544279985733,\n          565.593666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}],"source":["df_energy.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1722266723655,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"jReO5MnnqiK5","outputId":"be751077-36a2-4f05-961a-45c1e588ba6d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date   Time  \\\n","1062  14/02/2022  07:00   \n","\n","      Shagaya - Relay 7BBA01-K01 (Thin Film) - ENERGY EXPORTED (kWh)  \\\n","1062                                               36.0                \n","\n","      Shagaya - Relay 7BBA02-K01 (Polycrystalline Silicon) - ENERGY EXPORTED (kWh)  \\\n","1062                                               44.0                              \n","\n","      Shagaya - Weather Station CT2 - GLOBAL RADIATION 2 (TILTED) (W/m2)  \n","1062                                           17.17425                   "],"text/html":["\n","  <div id=\"df-67f114f1-808a-4d88-95d9-679a91d61dbd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Shagaya - Relay 7BBA01-K01 (Thin Film) - ENERGY EXPORTED (kWh)</th>\n","      <th>Shagaya - Relay 7BBA02-K01 (Polycrystalline Silicon) - ENERGY EXPORTED (kWh)</th>\n","      <th>Shagaya - Weather Station CT2 - GLOBAL RADIATION 2 (TILTED) (W/m2)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1062</th>\n","      <td>14/02/2022</td>\n","      <td>07:00</td>\n","      <td>36.0</td>\n","      <td>44.0</td>\n","      <td>17.17425</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67f114f1-808a-4d88-95d9-679a91d61dbd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-67f114f1-808a-4d88-95d9-679a91d61dbd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-67f114f1-808a-4d88-95d9-679a91d61dbd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":21}],"source":["df_energy.sample()"]},{"cell_type":"markdown","metadata":{"id":"ncM8IU16wSpL"},"source":["# Data Cleaning for Energy Data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JMTUCTCfwYFI"},"outputs":[],"source":["df_energy.columns = [\"date\",\"time\",\"thin_film_energy\",\"polycrystalline_energy\",\"global_radiation\"]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1UXaFULYwldp"},"outputs":[],"source":["df_energy.drop([\"global_radiation\"], axis = 1, inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NsrxlG1OwpxX"},"outputs":[],"source":["df_energy[\"date\"] = pd.to_datetime(df_energy[\"date\"], format='%d/%m/%Y')\n","\n","df_energy[\"day\"] = df_energy[\"date\"].dt.day\n","\n","df_energy[\"month\"] = df_energy[\"date\"].dt.month"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AllUoCQmwzjz"},"outputs":[],"source":["col = df_energy.pop(\"day\")\n","df_energy.insert(0, \"day\", col)\n","\n","col = df_energy.pop(\"month\")\n","df_energy.insert(1, \"month\", col)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7mhfcFZ1w3dq"},"outputs":[],"source":["df_energy.drop([\"date\"], axis = 1, inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1722266723656,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"mOK_3uZuxGTn","colab":{"base_uri":"https://localhost:8080/"},"outputId":"057e6f76-fd2e-4349-baa0-ce0f654c0e5f"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-27-0205af822a9b>:1: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n","  df_energy[\"time\"] = pd.to_datetime(df_energy[\"time\"])\n"]}],"source":["df_energy[\"time\"] = pd.to_datetime(df_energy[\"time\"])\n","df_energy[\"hour\"] = df_energy[\"time\"].dt.hour\n","df_energy[\"minute\"] = df_energy['time'].dt.minute\n","\n","col = df_energy.pop(\"hour\")\n","df_energy.insert(2, \"hour\", col)\n","\n","col = df_energy.pop(\"minute\")\n","df_energy.insert(3, \"minute\", col)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"tQA4iNJRxHY3"},"outputs":[],"source":["df_energy.drop([\"time\"], axis = 1, inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1722266723656,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"8mgsUlEFw4wf","outputId":"9b19b43c-d97a-43c8-8251-01b4d7c60472"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8761 entries, 0 to 8760\n","Data columns (total 6 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   day                     8761 non-null   int32  \n"," 1   month                   8761 non-null   int32  \n"," 2   hour                    8761 non-null   int32  \n"," 3   minute                  8761 non-null   int32  \n"," 4   thin_film_energy        8713 non-null   float64\n"," 5   polycrystalline_energy  8713 non-null   float64\n","dtypes: float64(2), int32(4)\n","memory usage: 273.9 KB\n"]}],"source":["df_energy.info()"]},{"cell_type":"markdown","metadata":{"id":"iAqLZqX3HFEf"},"source":["# Missing Values for Energy Data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4lmxxUSzHJPh"},"outputs":[],"source":["df_energy[\"minute\"] = 30"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HnNyUVbDHLnk"},"outputs":[],"source":["new_row = {\"day\": 1, \"month\": 1,\"hour\": 0,\"minute\":30,\"thin_film_energy\":0.0,\"polycrystalline_energy\":0.0}\n","\n","df_energy.loc[-1] = new_row\n","df_energy.index = df_energy.index + 1\n","df_energy = df_energy.sort_index()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_Wa2lKlIHMNp"},"outputs":[],"source":["df_energy = df_energy.drop(index=[8760,8761])\n","df_energy = df_energy.sort_index()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1722266725341,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"gmBTd2ZQHIHj","outputId":"7dfa797f-a582-4331-b10b-4e0aef4337a9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   day  month  hour  minute  thin_film_energy  polycrystalline_energy\n","0    1      1     0      30               0.0                     0.0\n","1    1      1     1      30               0.0                     0.0\n","2    1      1     2      30               0.0                     0.0\n","3    1      1     3      30               0.0                     0.0\n","4    1      1     4      30               0.0                     0.0"],"text/html":["\n","  <div id=\"df-ee9a5fb7-15f9-4084-b90e-1a8ea2c83452\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee9a5fb7-15f9-4084-b90e-1a8ea2c83452')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ee9a5fb7-15f9-4084-b90e-1a8ea2c83452 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ee9a5fb7-15f9-4084-b90e-1a8ea2c83452');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-63bedc13-95a7-49a4-a14a-ae76a96aa247\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63bedc13-95a7-49a4-a14a-ae76a96aa247')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-63bedc13-95a7-49a4-a14a-ae76a96aa247 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_energy","summary":"{\n  \"name\": \"df_energy\",\n  \"rows\": 8760,\n  \"fields\": [\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          28,\n          16,\n          24\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 0,\n        \"max\": 23,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          8,\n          16,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 30,\n        \"max\": 30,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1784.897596528028,\n        \"min\": 0.0,\n        \"max\": 29984.0,\n        \"num_unique_values\": 1098,\n        \"samples\": [\n          4072.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1933.8634965439835,\n        \"min\": 0.0,\n        \"max\": 33104.0,\n        \"num_unique_values\": 1184,\n        \"samples\": [\n          1252.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}],"source":["df_energy.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1722266725341,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"w6eLYo23TDnC","outputId":"730433bc-3ae0-4fe3-801c-da7b4d504dbc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      day  month  hour  minute  thin_film_energy  polycrystalline_energy\n","8755   31     12    19      30               0.0                     0.0\n","8756   31     12    20      30               0.0                     0.0\n","8757   31     12    21      30               0.0                     0.0\n","8758   31     12    22      30               0.0                     0.0\n","8759   31     12    23      30               0.0                     0.0"],"text/html":["\n","  <div id=\"df-cb97e39e-6911-4ae2-80d2-37aa0d939669\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8755</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8756</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8757</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>21</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8758</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>22</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8759</th>\n","      <td>31</td>\n","      <td>12</td>\n","      <td>23</td>\n","      <td>30</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb97e39e-6911-4ae2-80d2-37aa0d939669')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cb97e39e-6911-4ae2-80d2-37aa0d939669 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cb97e39e-6911-4ae2-80d2-37aa0d939669');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b6330bb4-00d1-49bc-b960-7debd8fd99ff\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6330bb4-00d1-49bc-b960-7debd8fd99ff')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b6330bb4-00d1-49bc-b960-7debd8fd99ff button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_energy\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 31,\n        \"max\": 31,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 12,\n        \"max\": 12,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 19,\n        \"max\": 23,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 30,\n        \"max\": 30,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}],"source":["df_energy.tail()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1722266725341,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"AhkY2PIGHOjh","outputId":"5f7876c6-7e0e-45e1-bb8d-a26b9900b931"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["day                        0\n","month                      0\n","hour                       0\n","minute                     0\n","thin_film_energy          47\n","polycrystalline_energy    47\n","dtype: int64"]},"metadata":{},"execution_count":35}],"source":["df_energy.isnull().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1722266725341,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"IgjUkrfoJICl","outputId":"2fef1ffc-6346-49ab-8efa-84c03fe17113"},"outputs":[{"output_type":"stream","name":"stdout","text":["Missing value at index (2996, 'thin_film_energy')\n","Missing value at index (2996, 'polycrystalline_energy')\n","Missing value at index (3164, 'thin_film_energy')\n","Missing value at index (3164, 'polycrystalline_energy')\n","Missing value at index (3165, 'thin_film_energy')\n","Missing value at index (3165, 'polycrystalline_energy')\n","Missing value at index (3166, 'thin_film_energy')\n","Missing value at index (3166, 'polycrystalline_energy')\n","Missing value at index (3476, 'thin_film_energy')\n","Missing value at index (3476, 'polycrystalline_energy')\n","Missing value at index (4135, 'thin_film_energy')\n","Missing value at index (4135, 'polycrystalline_energy')\n","Missing value at index (4136, 'thin_film_energy')\n","Missing value at index (4136, 'polycrystalline_energy')\n","Missing value at index (4137, 'thin_film_energy')\n","Missing value at index (4137, 'polycrystalline_energy')\n","Missing value at index (4138, 'thin_film_energy')\n","Missing value at index (4138, 'polycrystalline_energy')\n","Missing value at index (4139, 'thin_film_energy')\n","Missing value at index (4139, 'polycrystalline_energy')\n","Missing value at index (4140, 'thin_film_energy')\n","Missing value at index (4140, 'polycrystalline_energy')\n","Missing value at index (4141, 'thin_film_energy')\n","Missing value at index (4141, 'polycrystalline_energy')\n","Missing value at index (4142, 'thin_film_energy')\n","Missing value at index (4142, 'polycrystalline_energy')\n","Missing value at index (4143, 'thin_film_energy')\n","Missing value at index (4143, 'polycrystalline_energy')\n","Missing value at index (4544, 'thin_film_energy')\n","Missing value at index (4544, 'polycrystalline_energy')\n","Missing value at index (4545, 'thin_film_energy')\n","Missing value at index (4545, 'polycrystalline_energy')\n","Missing value at index (4546, 'thin_film_energy')\n","Missing value at index (4546, 'polycrystalline_energy')\n","Missing value at index (4547, 'thin_film_energy')\n","Missing value at index (4547, 'polycrystalline_energy')\n","Missing value at index (4548, 'thin_film_energy')\n","Missing value at index (4548, 'polycrystalline_energy')\n","Missing value at index (4549, 'thin_film_energy')\n","Missing value at index (4549, 'polycrystalline_energy')\n","Missing value at index (4550, 'thin_film_energy')\n","Missing value at index (4550, 'polycrystalline_energy')\n","Missing value at index (4551, 'thin_film_energy')\n","Missing value at index (4551, 'polycrystalline_energy')\n","Missing value at index (4552, 'thin_film_energy')\n","Missing value at index (4552, 'polycrystalline_energy')\n","Missing value at index (4553, 'thin_film_energy')\n","Missing value at index (4553, 'polycrystalline_energy')\n","Missing value at index (4554, 'thin_film_energy')\n","Missing value at index (4554, 'polycrystalline_energy')\n","Missing value at index (4555, 'thin_film_energy')\n","Missing value at index (4555, 'polycrystalline_energy')\n","Missing value at index (4556, 'thin_film_energy')\n","Missing value at index (4556, 'polycrystalline_energy')\n","Missing value at index (4557, 'thin_film_energy')\n","Missing value at index (4557, 'polycrystalline_energy')\n","Missing value at index (4558, 'thin_film_energy')\n","Missing value at index (4558, 'polycrystalline_energy')\n","Missing value at index (4559, 'thin_film_energy')\n","Missing value at index (4559, 'polycrystalline_energy')\n","Missing value at index (4560, 'thin_film_energy')\n","Missing value at index (4560, 'polycrystalline_energy')\n","Missing value at index (4561, 'thin_film_energy')\n","Missing value at index (4561, 'polycrystalline_energy')\n","Missing value at index (4562, 'thin_film_energy')\n","Missing value at index (4562, 'polycrystalline_energy')\n","Missing value at index (4563, 'thin_film_energy')\n","Missing value at index (4563, 'polycrystalline_energy')\n","Missing value at index (4564, 'thin_film_energy')\n","Missing value at index (4564, 'polycrystalline_energy')\n","Missing value at index (4565, 'thin_film_energy')\n","Missing value at index (4565, 'polycrystalline_energy')\n","Missing value at index (5311, 'thin_film_energy')\n","Missing value at index (5311, 'polycrystalline_energy')\n","Missing value at index (5312, 'thin_film_energy')\n","Missing value at index (5312, 'polycrystalline_energy')\n","Missing value at index (5313, 'thin_film_energy')\n","Missing value at index (5313, 'polycrystalline_energy')\n","Missing value at index (6968, 'thin_film_energy')\n","Missing value at index (6968, 'polycrystalline_energy')\n","Missing value at index (7087, 'thin_film_energy')\n","Missing value at index (7087, 'polycrystalline_energy')\n","Missing value at index (7088, 'thin_film_energy')\n","Missing value at index (7088, 'polycrystalline_energy')\n","Missing value at index (7089, 'thin_film_energy')\n","Missing value at index (7089, 'polycrystalline_energy')\n","Missing value at index (7090, 'thin_film_energy')\n","Missing value at index (7090, 'polycrystalline_energy')\n","Missing value at index (8096, 'thin_film_energy')\n","Missing value at index (8096, 'polycrystalline_energy')\n","Missing value at index (8097, 'thin_film_energy')\n","Missing value at index (8097, 'polycrystalline_energy')\n","Missing value at index (8098, 'thin_film_energy')\n","Missing value at index (8098, 'polycrystalline_energy')\n"]}],"source":["def list_missing_values(df_energy):\n","    missing_values = df_energy.isnull().stack()\n","    missing_indices = missing_values[missing_values].index.tolist()\n","    return missing_indices\n","\n","missing_indices = list_missing_values(df_energy)\n","\n","for index in missing_indices:\n","    print(f\"Missing value at index {index}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1722266725341,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"a6r8ZAJWJOLe","outputId":"42b7a3ba-c998-4f53-944e-e9aa4d4ea083"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 8760 entries, 0 to 8759\n","Data columns (total 6 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   day                     8760 non-null   int64  \n"," 1   month                   8760 non-null   int64  \n"," 2   hour                    8760 non-null   int64  \n"," 3   minute                  8760 non-null   int64  \n"," 4   thin_film_energy        8713 non-null   float64\n"," 5   polycrystalline_energy  8713 non-null   float64\n","dtypes: float64(2), int64(4)\n","memory usage: 479.1 KB\n"]}],"source":["df_energy.info()"]},{"cell_type":"markdown","metadata":{"id":"LdKtYxCATNhQ"},"source":["# Merge Dataset"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EszlRft7TUfY"},"outputs":[],"source":["df = pd.merge(df_weather, df_energy, on=[\"day\", \"month\", \"hour\", \"minute\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1722266726476,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"A6XTX63MT2QE","outputId":"51f39544-33b8-4071-b6e3-2f8e157f0db0"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8760 entries, 0 to 8759\n","Data columns (total 17 columns):\n"," #   Column                         Non-Null Count  Dtype  \n","---  ------                         --------------  -----  \n"," 0   day                            8760 non-null   int32  \n"," 1   month                          8760 non-null   int32  \n"," 2   hour                           8760 non-null   int32  \n"," 3   minute                         8760 non-null   int32  \n"," 4   global_horizon_irradiation     8760 non-null   int64  \n"," 5   direct_normal_irradiation      8760 non-null   int64  \n"," 6   diffuse_horizonal_irradiation  8760 non-null   int64  \n"," 7   sun_azimuth_angle              8760 non-null   float64\n"," 8   sun_elevation_angle            8760 non-null   float64\n"," 9   air_temp                       8760 non-null   float64\n"," 10  relative_humidity              8760 non-null   float64\n"," 11  wind_speed                     8760 non-null   float64\n"," 12  wind_direction                 8760 non-null   int64  \n"," 13  atmospheric_pressure           8760 non-null   float64\n"," 14  wet_bulb_temperature           8760 non-null   float64\n"," 15  thin_film_energy               8713 non-null   float64\n"," 16  polycrystalline_energy         8713 non-null   float64\n","dtypes: float64(9), int32(4), int64(4)\n","memory usage: 1.0 MB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1722266726476,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"6EF5zfACT4m_","outputId":"84a81fe8-763e-4958-b7c1-74b4a7f706f2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["               day        month         hour  minute  \\\n","count  8760.000000  8760.000000  8760.000000  8760.0   \n","mean     15.720548     6.526027    11.500000    30.0   \n","std       8.796749     3.448048     6.922582     0.0   \n","min       1.000000     1.000000     0.000000    30.0   \n","25%       8.000000     4.000000     5.750000    30.0   \n","50%      16.000000     7.000000    11.500000    30.0   \n","75%      23.000000    10.000000    17.250000    30.0   \n","max      31.000000    12.000000    23.000000    30.0   \n","\n","       global_horizon_irradiation  direct_normal_irradiation  \\\n","count                 8760.000000                8760.000000   \n","mean                   238.053311                 212.001712   \n","std                    319.370489                 275.231914   \n","min                      0.000000                   0.000000   \n","25%                      0.000000                   0.000000   \n","50%                     10.000000                   5.000000   \n","75%                    479.000000                 461.000000   \n","max                   1037.000000                 953.000000   \n","\n","       diffuse_horizonal_irradiation  sun_azimuth_angle  sun_elevation_angle  \\\n","count                    8760.000000        8760.000000          8760.000000   \n","mean                       97.747489           0.419943             0.311655   \n","std                       121.229947          95.112868            41.126024   \n","min                         0.000000        -167.900000           -81.900000   \n","25%                         0.000000         -89.525000           -34.100000   \n","50%                         9.000000          -1.800000             0.950000   \n","75%                       203.000000          88.825000            34.825000   \n","max                       474.000000         163.800000            81.500000   \n","\n","          air_temp  relative_humidity   wind_speed  wind_direction  \\\n","count  8760.000000        8760.000000  8760.000000     8760.000000   \n","mean     25.840765          21.489098     3.956336      168.105365   \n","std      10.980324          16.154036     1.836954       86.982807   \n","min       0.000000           2.400000     0.100000        0.000000   \n","25%      17.000000           9.200000     2.600000      113.000000   \n","50%      26.400000          16.200000     3.700000      136.000000   \n","75%      33.700000          29.400000     5.100000      238.000000   \n","max      50.100000          91.100000    11.900000      359.000000   \n","\n","       atmospheric_pressure  wet_bulb_temperature  thin_film_energy  \\\n","count           8760.000000           8760.000000       8713.000000   \n","mean             984.440217             14.746062       1057.931367   \n","std                7.378646              6.654681       1784.897597   \n","min              970.600000             -4.500000          0.000000   \n","25%              977.900000              9.900000          0.000000   \n","50%              985.300000             14.900000          0.000000   \n","75%              990.500000             19.800000       2092.000000   \n","max             1000.600000             30.300000      29984.000000   \n","\n","       polycrystalline_energy  \n","count             8713.000000  \n","mean              1111.775967  \n","std               1933.863497  \n","min                  0.000000  \n","25%                  0.000000  \n","50%                  4.000000  \n","75%               2176.000000  \n","max              33104.000000  "],"text/html":["\n","  <div id=\"df-f6e71a8b-58cb-4297-b5cd-cec70791ef7e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>global_horizon_irradiation</th>\n","      <th>direct_normal_irradiation</th>\n","      <th>diffuse_horizonal_irradiation</th>\n","      <th>sun_azimuth_angle</th>\n","      <th>sun_elevation_angle</th>\n","      <th>air_temp</th>\n","      <th>relative_humidity</th>\n","      <th>wind_speed</th>\n","      <th>wind_direction</th>\n","      <th>atmospheric_pressure</th>\n","      <th>wet_bulb_temperature</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.0</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8713.000000</td>\n","      <td>8713.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>15.720548</td>\n","      <td>6.526027</td>\n","      <td>11.500000</td>\n","      <td>30.0</td>\n","      <td>238.053311</td>\n","      <td>212.001712</td>\n","      <td>97.747489</td>\n","      <td>0.419943</td>\n","      <td>0.311655</td>\n","      <td>25.840765</td>\n","      <td>21.489098</td>\n","      <td>3.956336</td>\n","      <td>168.105365</td>\n","      <td>984.440217</td>\n","      <td>14.746062</td>\n","      <td>1057.931367</td>\n","      <td>1111.775967</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8.796749</td>\n","      <td>3.448048</td>\n","      <td>6.922582</td>\n","      <td>0.0</td>\n","      <td>319.370489</td>\n","      <td>275.231914</td>\n","      <td>121.229947</td>\n","      <td>95.112868</td>\n","      <td>41.126024</td>\n","      <td>10.980324</td>\n","      <td>16.154036</td>\n","      <td>1.836954</td>\n","      <td>86.982807</td>\n","      <td>7.378646</td>\n","      <td>6.654681</td>\n","      <td>1784.897597</td>\n","      <td>1933.863497</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>30.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-167.900000</td>\n","      <td>-81.900000</td>\n","      <td>0.000000</td>\n","      <td>2.400000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","      <td>970.600000</td>\n","      <td>-4.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>8.000000</td>\n","      <td>4.000000</td>\n","      <td>5.750000</td>\n","      <td>30.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-89.525000</td>\n","      <td>-34.100000</td>\n","      <td>17.000000</td>\n","      <td>9.200000</td>\n","      <td>2.600000</td>\n","      <td>113.000000</td>\n","      <td>977.900000</td>\n","      <td>9.900000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>16.000000</td>\n","      <td>7.000000</td>\n","      <td>11.500000</td>\n","      <td>30.0</td>\n","      <td>10.000000</td>\n","      <td>5.000000</td>\n","      <td>9.000000</td>\n","      <td>-1.800000</td>\n","      <td>0.950000</td>\n","      <td>26.400000</td>\n","      <td>16.200000</td>\n","      <td>3.700000</td>\n","      <td>136.000000</td>\n","      <td>985.300000</td>\n","      <td>14.900000</td>\n","      <td>0.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>23.000000</td>\n","      <td>10.000000</td>\n","      <td>17.250000</td>\n","      <td>30.0</td>\n","      <td>479.000000</td>\n","      <td>461.000000</td>\n","      <td>203.000000</td>\n","      <td>88.825000</td>\n","      <td>34.825000</td>\n","      <td>33.700000</td>\n","      <td>29.400000</td>\n","      <td>5.100000</td>\n","      <td>238.000000</td>\n","      <td>990.500000</td>\n","      <td>19.800000</td>\n","      <td>2092.000000</td>\n","      <td>2176.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>31.000000</td>\n","      <td>12.000000</td>\n","      <td>23.000000</td>\n","      <td>30.0</td>\n","      <td>1037.000000</td>\n","      <td>953.000000</td>\n","      <td>474.000000</td>\n","      <td>163.800000</td>\n","      <td>81.500000</td>\n","      <td>50.100000</td>\n","      <td>91.100000</td>\n","      <td>11.900000</td>\n","      <td>359.000000</td>\n","      <td>1000.600000</td>\n","      <td>30.300000</td>\n","      <td>29984.000000</td>\n","      <td>33104.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6e71a8b-58cb-4297-b5cd-cec70791ef7e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f6e71a8b-58cb-4297-b5cd-cec70791ef7e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f6e71a8b-58cb-4297-b5cd-cec70791ef7e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b4de14a-6f5d-479e-9950-6eb20024aac8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b4de14a-6f5d-479e-9950-6eb20024aac8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b4de14a-6f5d-479e-9950-6eb20024aac8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3091.913257862275,\n        \"min\": 1.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.72054794520548,\n          16.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3094.9087117333543,\n        \"min\": 1.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.526027397260274,\n          7.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3093.3010814486274,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          11.5,\n          17.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3088.054172359768,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8760.0,\n          30.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3011.968908151479,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          238.0533105022831,\n          479.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct_normal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3017.9932988096944,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          212.00171232876713,\n          461.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse_horizonal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3055.471524707212,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          97.74748858447488,\n          203.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_azimuth_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3094.4564222387207,\n        \"min\": -167.9,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.4199429223744296,\n          -1.8,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_elevation_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3095.3663292692972,\n        \"min\": -81.9,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.3116552511415534,\n          0.95,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3088.8798460596713,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25.84076484018265,\n          26.4,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relative_humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3087.85875474289,\n        \"min\": 2.4,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          21.48909817351598,\n          16.2,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3095.6551873275125,\n        \"min\": 0.1,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.956335616438356,\n          3.7,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3043.378830245205,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          168.10536529680365,\n          136.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atmospheric_pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2819.1304860469027,\n        \"min\": 7.378646269963496,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          984.4402168949771,\n          985.3,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wet_bulb_temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3092.5074219161497,\n        \"min\": -4.5,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.746061643835617,\n          14.9,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10321.067946336276,\n        \"min\": 0.0,\n        \"max\": 29984.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8713.0,\n          1057.9313669229887,\n          29984.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11369.607417914383,\n        \"min\": 0.0,\n        \"max\": 33104.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8713.0,\n          1111.7759669459429,\n          2176.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":40}],"source":["df.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":415,"status":"ok","timestamp":1722266726888,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"ELQspplwUE6P","outputId":"91f854df-9856-4187-f136-58dbc4e99f06"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     day  month  hour  minute  global_horizon_irradiation  \\\n","639   27      1    15      30                         345   \n","\n","     direct_normal_irradiation  diffuse_horizonal_irradiation  \\\n","639                        711                             86   \n","\n","     sun_azimuth_angle  sun_elevation_angle  air_temp  relative_humidity  \\\n","639               52.6                 21.2      15.1               24.7   \n","\n","     wind_speed  wind_direction  atmospheric_pressure  wet_bulb_temperature  \\\n","639         2.7             129                 992.6                   8.4   \n","\n","     thin_film_energy  polycrystalline_energy  \n","639            3152.0                  3484.0  "],"text/html":["\n","  <div id=\"df-b72cc002-2405-45af-bf92-8116ccd0683c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>global_horizon_irradiation</th>\n","      <th>direct_normal_irradiation</th>\n","      <th>diffuse_horizonal_irradiation</th>\n","      <th>sun_azimuth_angle</th>\n","      <th>sun_elevation_angle</th>\n","      <th>air_temp</th>\n","      <th>relative_humidity</th>\n","      <th>wind_speed</th>\n","      <th>wind_direction</th>\n","      <th>atmospheric_pressure</th>\n","      <th>wet_bulb_temperature</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>639</th>\n","      <td>27</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>30</td>\n","      <td>345</td>\n","      <td>711</td>\n","      <td>86</td>\n","      <td>52.6</td>\n","      <td>21.2</td>\n","      <td>15.1</td>\n","      <td>24.7</td>\n","      <td>2.7</td>\n","      <td>129</td>\n","      <td>992.6</td>\n","      <td>8.4</td>\n","      <td>3152.0</td>\n","      <td>3484.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b72cc002-2405-45af-bf92-8116ccd0683c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b72cc002-2405-45af-bf92-8116ccd0683c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b72cc002-2405-45af-bf92-8116ccd0683c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          27\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 345,\n        \"max\": 345,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          345\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct_normal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 711,\n        \"max\": 711,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          711\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse_horizonal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 86,\n        \"max\": 86,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          86\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_azimuth_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 52.6,\n        \"max\": 52.6,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          52.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_elevation_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 21.2,\n        \"max\": 21.2,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          21.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 15.1,\n        \"max\": 15.1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          15.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relative_humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 24.7,\n        \"max\": 24.7,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          24.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2.7,\n        \"max\": 2.7,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 129,\n        \"max\": 129,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          129\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atmospheric_pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 992.6,\n        \"max\": 992.6,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          992.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wet_bulb_temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 8.4,\n        \"max\": 8.4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          8.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 3152.0,\n        \"max\": 3152.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3152.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 3484.0,\n        \"max\": 3484.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3484.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}],"source":["df.sample()"]},{"cell_type":"markdown","metadata":{"id":"r4Yt7Tn_UI9x"},"source":["# Handling Missing Values"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BfwNXfDGUKr8"},"outputs":[],"source":["# Set values to 0 for rows where sun_elevation_angle is below 0\n","df.loc[df[\"sun_elevation_angle\"] < 0, [\"thin_film_energy\", \"polycrystalline_energy\"]] = 0"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8r-z5AtQVMkz"},"outputs":[],"source":["# Calculate week number based on the row index\n","num_weeks = 52\n","rows_per_week = len(df) // num_weeks\n","\n","# Assign week numbers\n","df[\"week_number\"] = (df.index // rows_per_week) + 1\n","\n","# Handle the last few rows to ensure the week number doesn't exceed 52\n","df.loc[df[\"week_number\"] > num_weeks, \"week_number\"] = num_weeks\n","\n","# Place it in \"0\"\n","col = df.pop(\"week_number\")\n","df.insert(0, \"week_number\", col)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"imhrH0EWYa6Q"},"outputs":[],"source":["# Assign day of the year from 1 to 365\n","days_in_year = 365\n","rows_per_day = len(df) // days_in_year\n","\n","df[\"day_of_year\"] = (df.index // rows_per_day) + 1\n","\n","# Handle the last few rows to ensure the day of the year doesn't exceed 365\n","df.loc[df[\"day_of_year\"] > days_in_year, \"day_of_year\"] = days_in_year\n","\n","# Place it in column \"1\"\n","col = df.pop(\"day_of_year\")\n","df.insert(1, \"day_of_year\", col)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nDyBs3ILWP5N"},"outputs":[],"source":["# Function to identify outliers using IQR\n","def identify_outliers(df, column):\n","    Q1 = df[column].quantile(0.25)\n","    Q3 = df[column].quantile(0.75)\n","    IQR = Q3 - Q1\n","    lower_bound = Q1 - 1.5 * IQR\n","    upper_bound = Q3 + 1.5 * IQR\n","    return (df[column] < lower_bound) | (df[column] > upper_bound)\n","\n","# Identify outliers\n","df[\"polycrystalline_outlier\"] = identify_outliers(df, \"polycrystalline_energy\")\n","df[\"thin_film_outlier\"] = identify_outliers(df, \"thin_film_energy\")\n","\n","# Calculate the average energy by previous and next week number and hour excluding outliers\n","def calculate_weekly_average(df, energy_column, outlier_column):\n","    prev_week_avg = df[~df[outlier_column]].groupby(['hour', df['week_number'] - 1])[energy_column].mean().reset_index()\n","    next_week_avg = df[~df[outlier_column]].groupby(['hour', df['week_number'] + 1])[energy_column].mean().reset_index()\n","\n","    prev_week_avg.rename(columns={energy_column: f\"{energy_column}_avg_prev\"}, inplace=True)\n","    next_week_avg.rename(columns={energy_column: f\"{energy_column}_avg_next\"}, inplace=True)\n","\n","    df = df.merge(prev_week_avg, left_on=['hour', 'week_number'], right_on=['hour', 'week_number'], how='left')\n","    df = df.merge(next_week_avg, left_on=['hour', 'week_number'], right_on=['hour', 'week_number'], how='left')\n","\n","    df[f\"{energy_column}_avg\"] = df[[f\"{energy_column}_avg_prev\", f\"{energy_column}_avg_next\"]].mean(axis=1)\n","\n","    return df\n","\n","df = calculate_weekly_average(df, \"polycrystalline_energy\", \"polycrystalline_outlier\")\n","df = calculate_weekly_average(df, \"thin_film_energy\", \"thin_film_outlier\")\n","\n","# Replace outliers with the average values\n","df.loc[df[\"polycrystalline_outlier\"], \"polycrystalline_energy\"] = df[\"polycrystalline_energy_avg\"]\n","df.loc[df[\"thin_film_outlier\"], \"thin_film_energy\"] = df[\"thin_film_energy_avg\"]\n","\n","# Drop the temporary columns\n","df.drop(columns=[\"polycrystalline_outlier\", \"thin_film_outlier\", \"polycrystalline_energy_avg_prev\", \"polycrystalline_energy_avg_next\", \"polycrystalline_energy_avg\", \"thin_film_energy_avg_prev\", \"thin_film_energy_avg_next\", \"thin_film_energy_avg\"], inplace=True)\n","\n","# Reset the index\n","df.reset_index(drop=True, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":617,"status":"ok","timestamp":1722266728434,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"qCCmemlrVn9k","outputId":"dadace03-b1d8-43f8-baee-d559ebd6cf49"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       week_number  day_of_year          day        month         hour  \\\n","count  8760.000000  8760.000000  8760.000000  8760.000000  8760.000000   \n","mean     26.569863   183.000000    15.720548     6.526027    11.500000   \n","std      15.047769   105.372043     8.796749     3.448048     6.922582   \n","min       1.000000     1.000000     1.000000     1.000000     0.000000   \n","25%      14.000000    92.000000     8.000000     4.000000     5.750000   \n","50%      27.000000   183.000000    16.000000     7.000000    11.500000   \n","75%      40.000000   274.000000    23.000000    10.000000    17.250000   \n","max      52.000000   365.000000    31.000000    12.000000    23.000000   \n","\n","       minute  global_horizon_irradiation  direct_normal_irradiation  \\\n","count  8760.0                 8760.000000                8760.000000   \n","mean     30.0                  238.053311                 212.001712   \n","std       0.0                  319.370489                 275.231914   \n","min      30.0                    0.000000                   0.000000   \n","25%      30.0                    0.000000                   0.000000   \n","50%      30.0                   10.000000                   5.000000   \n","75%      30.0                  479.000000                 461.000000   \n","max      30.0                 1037.000000                 953.000000   \n","\n","       diffuse_horizonal_irradiation  sun_azimuth_angle  sun_elevation_angle  \\\n","count                    8760.000000        8760.000000          8760.000000   \n","mean                       97.747489           0.419943             0.311655   \n","std                       121.229947          95.112868            41.126024   \n","min                         0.000000        -167.900000           -81.900000   \n","25%                         0.000000         -89.525000           -34.100000   \n","50%                         9.000000          -1.800000             0.950000   \n","75%                       203.000000          88.825000            34.825000   \n","max                       474.000000         163.800000            81.500000   \n","\n","          air_temp  relative_humidity   wind_speed  wind_direction  \\\n","count  8760.000000        8760.000000  8760.000000     8760.000000   \n","mean     25.840765          21.489098     3.956336      168.105365   \n","std      10.980324          16.154036     1.836954       86.982807   \n","min       0.000000           2.400000     0.100000        0.000000   \n","25%      17.000000           9.200000     2.600000      113.000000   \n","50%      26.400000          16.200000     3.700000      136.000000   \n","75%      33.700000          29.400000     5.100000      238.000000   \n","max      50.100000          91.100000    11.900000      359.000000   \n","\n","       atmospheric_pressure  wet_bulb_temperature  thin_film_energy  \\\n","count           8760.000000           8760.000000       8728.000000   \n","mean             984.440217             14.746062        984.310893   \n","std                7.378646              6.654681       1403.371852   \n","min              970.600000             -4.500000          0.000000   \n","25%              977.900000              9.900000          0.000000   \n","50%              985.300000             14.900000          0.000000   \n","75%              990.500000             19.800000       2056.000000   \n","max             1000.600000             30.300000       5012.000000   \n","\n","       polycrystalline_energy  \n","count             8728.000000  \n","mean              1030.328527  \n","std               1479.468831  \n","min                  0.000000  \n","25%                  0.000000  \n","50%                  0.000000  \n","75%               2133.000000  \n","max               5088.000000  "],"text/html":["\n","  <div id=\"df-359ff502-a5a8-4dd9-b5f4-949c9f7106e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>week_number</th>\n","      <th>day_of_year</th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>global_horizon_irradiation</th>\n","      <th>direct_normal_irradiation</th>\n","      <th>diffuse_horizonal_irradiation</th>\n","      <th>sun_azimuth_angle</th>\n","      <th>sun_elevation_angle</th>\n","      <th>air_temp</th>\n","      <th>relative_humidity</th>\n","      <th>wind_speed</th>\n","      <th>wind_direction</th>\n","      <th>atmospheric_pressure</th>\n","      <th>wet_bulb_temperature</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.0</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8760.000000</td>\n","      <td>8728.000000</td>\n","      <td>8728.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>26.569863</td>\n","      <td>183.000000</td>\n","      <td>15.720548</td>\n","      <td>6.526027</td>\n","      <td>11.500000</td>\n","      <td>30.0</td>\n","      <td>238.053311</td>\n","      <td>212.001712</td>\n","      <td>97.747489</td>\n","      <td>0.419943</td>\n","      <td>0.311655</td>\n","      <td>25.840765</td>\n","      <td>21.489098</td>\n","      <td>3.956336</td>\n","      <td>168.105365</td>\n","      <td>984.440217</td>\n","      <td>14.746062</td>\n","      <td>984.310893</td>\n","      <td>1030.328527</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>15.047769</td>\n","      <td>105.372043</td>\n","      <td>8.796749</td>\n","      <td>3.448048</td>\n","      <td>6.922582</td>\n","      <td>0.0</td>\n","      <td>319.370489</td>\n","      <td>275.231914</td>\n","      <td>121.229947</td>\n","      <td>95.112868</td>\n","      <td>41.126024</td>\n","      <td>10.980324</td>\n","      <td>16.154036</td>\n","      <td>1.836954</td>\n","      <td>86.982807</td>\n","      <td>7.378646</td>\n","      <td>6.654681</td>\n","      <td>1403.371852</td>\n","      <td>1479.468831</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>30.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-167.900000</td>\n","      <td>-81.900000</td>\n","      <td>0.000000</td>\n","      <td>2.400000</td>\n","      <td>0.100000</td>\n","      <td>0.000000</td>\n","      <td>970.600000</td>\n","      <td>-4.500000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>14.000000</td>\n","      <td>92.000000</td>\n","      <td>8.000000</td>\n","      <td>4.000000</td>\n","      <td>5.750000</td>\n","      <td>30.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-89.525000</td>\n","      <td>-34.100000</td>\n","      <td>17.000000</td>\n","      <td>9.200000</td>\n","      <td>2.600000</td>\n","      <td>113.000000</td>\n","      <td>977.900000</td>\n","      <td>9.900000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>27.000000</td>\n","      <td>183.000000</td>\n","      <td>16.000000</td>\n","      <td>7.000000</td>\n","      <td>11.500000</td>\n","      <td>30.0</td>\n","      <td>10.000000</td>\n","      <td>5.000000</td>\n","      <td>9.000000</td>\n","      <td>-1.800000</td>\n","      <td>0.950000</td>\n","      <td>26.400000</td>\n","      <td>16.200000</td>\n","      <td>3.700000</td>\n","      <td>136.000000</td>\n","      <td>985.300000</td>\n","      <td>14.900000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>40.000000</td>\n","      <td>274.000000</td>\n","      <td>23.000000</td>\n","      <td>10.000000</td>\n","      <td>17.250000</td>\n","      <td>30.0</td>\n","      <td>479.000000</td>\n","      <td>461.000000</td>\n","      <td>203.000000</td>\n","      <td>88.825000</td>\n","      <td>34.825000</td>\n","      <td>33.700000</td>\n","      <td>29.400000</td>\n","      <td>5.100000</td>\n","      <td>238.000000</td>\n","      <td>990.500000</td>\n","      <td>19.800000</td>\n","      <td>2056.000000</td>\n","      <td>2133.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>52.000000</td>\n","      <td>365.000000</td>\n","      <td>31.000000</td>\n","      <td>12.000000</td>\n","      <td>23.000000</td>\n","      <td>30.0</td>\n","      <td>1037.000000</td>\n","      <td>953.000000</td>\n","      <td>474.000000</td>\n","      <td>163.800000</td>\n","      <td>81.500000</td>\n","      <td>50.100000</td>\n","      <td>91.100000</td>\n","      <td>11.900000</td>\n","      <td>359.000000</td>\n","      <td>1000.600000</td>\n","      <td>30.300000</td>\n","      <td>5012.000000</td>\n","      <td>5088.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-359ff502-a5a8-4dd9-b5f4-949c9f7106e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-359ff502-a5a8-4dd9-b5f4-949c9f7106e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-359ff502-a5a8-4dd9-b5f4-949c9f7106e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a9bcd6d1-5b5b-4b91-8f81-88708669e1a0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9bcd6d1-5b5b-4b91-8f81-88708669e1a0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a9bcd6d1-5b5b-4b91-8f81-88708669e1a0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"week_number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3088.298296676977,\n        \"min\": 1.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          26.56986301369863,\n          27.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_of_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3038.417103373248,\n        \"min\": 1.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          183.0,\n          274.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3091.913257862275,\n        \"min\": 1.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.72054794520548,\n          16.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3094.9087117333543,\n        \"min\": 1.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.526027397260274,\n          7.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3093.3010814486274,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          11.5,\n          17.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3088.054172359768,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8760.0,\n          30.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3011.968908151479,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          238.0533105022831,\n          479.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct_normal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3017.9932988096944,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          212.00171232876713,\n          461.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse_horizonal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3055.471524707212,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          8760.0,\n          97.74748858447488,\n          203.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_azimuth_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3094.4564222387207,\n        \"min\": -167.9,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.4199429223744296,\n          -1.8,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_elevation_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3095.3663292692972,\n        \"min\": -81.9,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.3116552511415534,\n          0.95,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3088.8798460596713,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          25.84076484018265,\n          26.4,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relative_humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3087.85875474289,\n        \"min\": 2.4,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          21.48909817351598,\n          16.2,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3095.6551873275125,\n        \"min\": 0.1,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.956335616438356,\n          3.7,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3043.378830245205,\n        \"min\": 0.0,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          168.10536529680365,\n          136.0,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atmospheric_pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2819.1304860469027,\n        \"min\": 7.378646269963496,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          984.4402168949771,\n          985.3,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wet_bulb_temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3092.5074219161497,\n        \"min\": -4.5,\n        \"max\": 8760.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.746061643835617,\n          14.9,\n          8760.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3096.836974275309,\n        \"min\": 0.0,\n        \"max\": 8728.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8728.0,\n          984.3108932390554,\n          5012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3100.113405962651,\n        \"min\": 0.0,\n        \"max\": 8728.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8728.0,\n          1030.328526690236,\n          5088.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":46}],"source":["df.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1722266728434,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"sTJul25eYhbL","outputId":"39d3d546-cab7-40a0-b7d9-b0f3826d7847"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      week_number  day_of_year  day  month  hour  minute  \\\n","3021           18          126    6      5    21      30   \n","2917           18          122    2      5    13      30   \n","6999           42          292   19     10    15      30   \n","4819           29          201   20      7    19      30   \n","7084           43          296   23     10     4      30   \n","\n","      global_horizon_irradiation  direct_normal_irradiation  \\\n","3021                           0                          0   \n","2917                         493                        160   \n","6999                         258                        244   \n","4819                           0                          0   \n","7084                           0                          0   \n","\n","      diffuse_horizonal_irradiation  sun_azimuth_angle  sun_elevation_angle  \\\n","3021                              0              139.5                -33.3   \n","2917                            350               63.8                 62.8   \n","6999                            168               64.1                 21.3   \n","4819                              0              119.6                 -8.3   \n","7084                              0              -87.6                -19.9   \n","\n","      air_temp  relative_humidity  wind_speed  wind_direction  \\\n","3021      27.1               12.8         0.9              84   \n","2917      33.2                7.4         5.2             120   \n","6999      34.7               13.6         3.8             106   \n","4819      34.9                8.3         3.9             132   \n","7084      24.1               53.1         5.3             291   \n","\n","      atmospheric_pressure  wet_bulb_temperature  thin_film_energy  \\\n","3021                 981.6                  14.2               0.0   \n","2917                 986.6                  16.7            3336.0   \n","6999                 988.9                  21.4            1928.0   \n","4819                 976.7                  18.8               0.0   \n","7084                 985.9                  19.9               0.0   \n","\n","      polycrystalline_energy  \n","3021                     0.0  \n","2917                  2392.0  \n","6999                  2132.0  \n","4819                     0.0  \n","7084                     0.0  "],"text/html":["\n","  <div id=\"df-42d1f69c-a29e-4d52-bd8b-c1e42f9cd21d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>week_number</th>\n","      <th>day_of_year</th>\n","      <th>day</th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>global_horizon_irradiation</th>\n","      <th>direct_normal_irradiation</th>\n","      <th>diffuse_horizonal_irradiation</th>\n","      <th>sun_azimuth_angle</th>\n","      <th>sun_elevation_angle</th>\n","      <th>air_temp</th>\n","      <th>relative_humidity</th>\n","      <th>wind_speed</th>\n","      <th>wind_direction</th>\n","      <th>atmospheric_pressure</th>\n","      <th>wet_bulb_temperature</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3021</th>\n","      <td>18</td>\n","      <td>126</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>21</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>139.5</td>\n","      <td>-33.3</td>\n","      <td>27.1</td>\n","      <td>12.8</td>\n","      <td>0.9</td>\n","      <td>84</td>\n","      <td>981.6</td>\n","      <td>14.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2917</th>\n","      <td>18</td>\n","      <td>122</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>30</td>\n","      <td>493</td>\n","      <td>160</td>\n","      <td>350</td>\n","      <td>63.8</td>\n","      <td>62.8</td>\n","      <td>33.2</td>\n","      <td>7.4</td>\n","      <td>5.2</td>\n","      <td>120</td>\n","      <td>986.6</td>\n","      <td>16.7</td>\n","      <td>3336.0</td>\n","      <td>2392.0</td>\n","    </tr>\n","    <tr>\n","      <th>6999</th>\n","      <td>42</td>\n","      <td>292</td>\n","      <td>19</td>\n","      <td>10</td>\n","      <td>15</td>\n","      <td>30</td>\n","      <td>258</td>\n","      <td>244</td>\n","      <td>168</td>\n","      <td>64.1</td>\n","      <td>21.3</td>\n","      <td>34.7</td>\n","      <td>13.6</td>\n","      <td>3.8</td>\n","      <td>106</td>\n","      <td>988.9</td>\n","      <td>21.4</td>\n","      <td>1928.0</td>\n","      <td>2132.0</td>\n","    </tr>\n","    <tr>\n","      <th>4819</th>\n","      <td>29</td>\n","      <td>201</td>\n","      <td>20</td>\n","      <td>7</td>\n","      <td>19</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>119.6</td>\n","      <td>-8.3</td>\n","      <td>34.9</td>\n","      <td>8.3</td>\n","      <td>3.9</td>\n","      <td>132</td>\n","      <td>976.7</td>\n","      <td>18.8</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>7084</th>\n","      <td>43</td>\n","      <td>296</td>\n","      <td>23</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>30</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-87.6</td>\n","      <td>-19.9</td>\n","      <td>24.1</td>\n","      <td>53.1</td>\n","      <td>5.3</td>\n","      <td>291</td>\n","      <td>985.9</td>\n","      <td>19.9</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42d1f69c-a29e-4d52-bd8b-c1e42f9cd21d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-42d1f69c-a29e-4d52-bd8b-c1e42f9cd21d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-42d1f69c-a29e-4d52-bd8b-c1e42f9cd21d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d8d2e8bc-bda9-40da-9b54-5edb3b7aac39\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d8d2e8bc-bda9-40da-9b54-5edb3b7aac39')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d8d2e8bc-bda9-40da-9b54-5edb3b7aac39 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"week_number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 18,\n        \"max\": 43,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          42,\n          43,\n          18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_of_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85,\n        \"min\": 122,\n        \"max\": 296,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          122,\n          296,\n          292\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          23,\n          19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5,\n          10,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          13,\n          4,\n          15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 221,\n        \"min\": 0,\n        \"max\": 493,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct_normal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 114,\n        \"min\": 0,\n        \"max\": 244,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse_horizonal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 155,\n        \"min\": 0,\n        \"max\": 350,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_azimuth_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 89.007510919023,\n        \"min\": -87.6,\n        \"max\": 139.5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          63.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_elevation_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38.30524768226933,\n        \"min\": -33.3,\n        \"max\": 62.8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          62.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.90815647672321,\n        \"min\": 24.1,\n        \"max\": 34.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          33.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relative_humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.2318225865361,\n        \"min\": 7.4,\n        \"max\": 53.1,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7767948671695335,\n        \"min\": 0.9,\n        \"max\": 5.3,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 82,\n        \"min\": 84,\n        \"max\": 291,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          120\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atmospheric_pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.832494180027511,\n        \"min\": 976.7,\n        \"max\": 988.9,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          986.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wet_bulb_temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8169132042006546,\n        \"min\": 14.2,\n        \"max\": 21.4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1525.134485873295,\n        \"min\": 0.0,\n        \"max\": 3336.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1242.3538948302935,\n        \"min\": 0.0,\n        \"max\": 2392.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}],"source":["df.sample(5)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1722266728434,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"yAdjGHJdUT5S","outputId":"d54a5223-5883-4eed-8a4e-6a8695997409"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8760 entries, 0 to 8759\n","Data columns (total 19 columns):\n"," #   Column                         Non-Null Count  Dtype  \n","---  ------                         --------------  -----  \n"," 0   week_number                    8760 non-null   int64  \n"," 1   day_of_year                    8760 non-null   int64  \n"," 2   day                            8760 non-null   int32  \n"," 3   month                          8760 non-null   int32  \n"," 4   hour                           8760 non-null   int32  \n"," 5   minute                         8760 non-null   int32  \n"," 6   global_horizon_irradiation     8760 non-null   int64  \n"," 7   direct_normal_irradiation      8760 non-null   int64  \n"," 8   diffuse_horizonal_irradiation  8760 non-null   int64  \n"," 9   sun_azimuth_angle              8760 non-null   float64\n"," 10  sun_elevation_angle            8760 non-null   float64\n"," 11  air_temp                       8760 non-null   float64\n"," 12  relative_humidity              8760 non-null   float64\n"," 13  wind_speed                     8760 non-null   float64\n"," 14  wind_direction                 8760 non-null   int64  \n"," 15  atmospheric_pressure           8760 non-null   float64\n"," 16  wet_bulb_temperature           8760 non-null   float64\n"," 17  thin_film_energy               8728 non-null   float64\n"," 18  polycrystalline_energy         8728 non-null   float64\n","dtypes: float64(9), int32(4), int64(6)\n","memory usage: 1.1 MB\n"]}],"source":["df.info()"]},{"cell_type":"markdown","metadata":{"id":"42lpjF6dxw1y"},"source":["# Visualizations"]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# Assuming your dataframe is named 'df'\n","# Group by 'month' and calculate the mean for 'thin_film_energy' and 'global_horizon_irradiation'\n","monthly_avg = df.groupby('month').sum()\n","\n","# Ensure all months from 1 to 12 are included\n","months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n","monthly_avg.index = [months[i-1] for i in monthly_avg.index]\n","\n","# Adjust the figure size to be suitable for a PowerPoint slide\n","fig, ax1 = plt.subplots(figsize=(14, 7))\n","\n","# Bar plot for 'thin_film_energy' on the left y-axis\n","color = '#FFA500'\n","ax1.set_xlabel('Month', fontsize=12, fontweight='bold')\n","ax1.set_ylabel('Thin Film Energy (kWh)', color='black', fontsize=12, fontweight='bold')\n","bars = ax1.bar(monthly_avg.index, monthly_avg['thin_film_energy'], color=color, alpha=0.6)\n","ax1.tick_params(axis='y', labelcolor='black')\n","\n","# Create a second y-axis for 'global_horizon_irradiation'\n","ax2 = ax1.twinx()\n","ax2.set_ylabel('Solar Irradiation (Wh/m²)', color='black', fontsize=12, fontweight='bold')\n","line, = ax2.plot(monthly_avg.index, monthly_avg['global_horizon_irradiation'], color='blue', marker='o')\n","ax2.tick_params(axis='y', labelcolor='black')\n","\n","# Title and layout adjustments\n","plt.title('Total Thin Film Energy and Solar Irradiation', fontsize=14, fontweight='bold')\n","fig.tight_layout()\n","\n","# Add legend\n","lines = [bars, line]\n","labels = ['Thin Film Energy (kWh)', 'Solar Irradiation (Wh/m²)']\n","legend = ax1.legend(lines, labels, loc='upper right', fontsize=10, title='Legend')\n","plt.setp(legend.get_title(), fontsize='13', fontweight='bold')\n","\n","# Show plot\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":707},"id":"Qq4or5zoZKpN","executionInfo":{"status":"ok","timestamp":1722253463081,"user_tz":-180,"elapsed":1769,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"5570199b-83cf-49a7-a974-0ad5e5638644"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x700 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from scipy.interpolate import make_interp_spline\n","\n","# Mapping month numbers to month names\n","month_map = {\n","    1: 'January', 2: 'February', 3: 'March', 4: 'April',\n","    5: 'May', 6: 'June', 7: 'July', 8: 'August',\n","    9: 'September', 10: 'October', 11: 'November', 12: 'December'\n","}\n","\n","# Prepare data for smooth plotting\n","x = monthly_avg['month'].map(month_map)\n","x_numeric = monthly_avg['month']\n","x_smooth = np.linspace(x_numeric.min(), x_numeric.max(), 300)\n","\n","# Smooth air_temp\n","spl_air_temp = make_interp_spline(x_numeric, monthly_avg['air_temp'], k=3)\n","air_temp_smooth = spl_air_temp(x_smooth)\n","\n","# Smooth relative_humidity\n","spl_relative_humidity = make_interp_spline(x_numeric, monthly_avg['relative_humidity'], k=3)\n","relative_humidity_smooth = spl_relative_humidity(x_smooth)\n","\n","# Plot the data\n","fig, ax1 = plt.subplots(figsize=(12, 6))\n","\n","# Plot air_temp on the primary y-axis\n","ax1.set_xlabel('Month')\n","ax1.set_ylabel('Air Temperature (°C)', color='black')\n","line1, = ax1.plot(x_smooth, air_temp_smooth, color='red', label='Air Temperature', linewidth=2)\n","ax1.scatter(x_numeric, monthly_avg['air_temp'], color='red')\n","ax1.tick_params(axis='y', labelcolor='black')\n","ax1.set_xticks(x_numeric)\n","ax1.set_xticklabels([month_map[month] for month in x_numeric])\n","\n","# Create a second y-axis to plot relative_humidity\n","ax2 = ax1.twinx()\n","ax2.set_ylabel('Relative Humidity (%)', color='black')\n","line2, = ax2.plot(x_smooth, relative_humidity_smooth, color='blue', label='Relative Humidity', linewidth=2)\n","ax2.scatter(x_numeric, monthly_avg['relative_humidity'], color='blue')\n","ax2.tick_params(axis='y', labelcolor='black')\n","\n","# Ensure the y-axes labels are correctly placed\n","ax1.yaxis.set_label_position('left')\n","ax1.yaxis.tick_left()\n","ax2.yaxis.set_label_position('right')\n","ax2.yaxis.tick_right()\n","\n","# Add titles and grid\n","# plt.title('Average Monthly Air Temperature and Relative Humidity')\n","fig.tight_layout()\n","plt.grid(True)\n","\n","# Add a legend\n","lines = [line1, line2]\n","labels = [line.get_label() for line in lines]\n","ax1.legend(lines, labels, loc='upper right')\n","\n","# Show the plot\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"wDE3FgcW_dwb","executionInfo":{"status":"ok","timestamp":1722099136191,"user_tz":-180,"elapsed":979,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"4e292549-4316-494b-8862-4e835b32ce39"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["monthly_ghi = df.groupby('month')[['global_horizon_irradiation']].mean().reset_index()"],"metadata":{"id":"DQCvo5lbAN3v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Mapping month numbers to month names\n","month_map = {\n","    1: 'January', 2: 'February', 3: 'March', 4: 'April',\n","    5: 'May', 6: 'June', 7: 'July', 8: 'August',\n","    9: 'September', 10: 'October', 11: 'November', 12: 'December'\n","}\n","\n","# Apply the mapping to the 'month' column\n","monthly_ghi['month'] = monthly_ghi['month'].map(month_map)"],"metadata":{"id":"xhyTiyOuBEsB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Plot the bar graph\n","plt.figure(figsize=(12, 6))\n","plt.bar(monthly_ghi['month'], monthly_ghi['global_horizon_irradiation'], color='orange')\n","\n","# Add labels and title\n","plt.xlabel('Month')\n","plt.ylabel('GHI')\n","plt.title('Monthly Global Horizontal Irradiance (GHI)')\n","plt.xticks(rotation=45)\n","plt.grid(axis='y')\n","\n","# Show the plot\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"G2B9vT3DA_44","executionInfo":{"status":"ok","timestamp":1721980218531,"user_tz":-180,"elapsed":1501,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"d3b2c9ad-a47c-4857-9b1b-10925a73bb9b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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7XbPv0aNGpYnTx6PZTlz5ozVkxMnTpi/v7+9/PLL7mX9+/c3STZ79uxY9xsdHW1mZpMnT7ZEiRLZTz/95LF+3LhxJsl+/vnnWD97vSeeeMLj9xvjkUcesZIlS8ZaHh4e7vG3fP78efe6mN/rrf4VKVIkVi+u/1uJsXbtWpNkM2bMuGX9AICHE6fvAQAeek2aNNGlS5e0cOFCnTt3TgsXLrzpqXuLFy9W4sSJ1aNHD4/lL7/8ssxM3333ncfy6tWrK2/evO7bxYsXV0BAgP788887ru9e7iNRokRq2bKl5s+fr3PnzrmXT506VY8//rhy5859058NDw+XpFijpMLCwpQxY0aPf5s3b77p/SxevFhBQUFq3ry5e5mfn5969Oih8+fPa9WqVR7bN2jQQFmzZnXfLleunMqXL+9xSfnr5725fPmyTp48qQoVKkiSNm3adNNabufbb7/V8uXLY/27fuROzHO6m99/5cqVVbhw4buqZdKkSRozZow+/PBDPfXUU5Kk3377TSdOnFDXrl095qOqU6eOChYsqEWLFsW6n86dO3vcrlSp0h3vd97q8438/f3Vvn37ONc1atTIY8SgJCVOnNg9eiw6OlqnT59WVFSUypQp41HX4sWLlSRJEnXp0sXjZ1988cU7quv65x8zWqhy5cr6888/FRYW5rFt4cKFValSJfftjBkzqkCBAh69/vbbb1WiRAk9++yzsR4rZtTZrFmzVKhQIRUsWFAnT550/4uZiymuUxSvd+rUKT3yyCOxloeHh8c54rF169Yef8txXbFv9OjRcf5dxIyouxMxNT2s8/MBAG6N0/cAAA+9jBkzqnr16goNDdXFixd19epVNW7cOM5tDxw4oCxZsih16tQeywsVKuRef70cOXLEuo9HHnlEZ86cueP67vU+2rRpow8++EBz5sxRmzZttGvXLm3cuDHWRMg3inlu58+f91ieKlUq99xby5Yt09ChQ295PwcOHNCjjz6qRIk8vwO7Wa8effTRWPeRP39+zZw503379OnTGjRokKZPn64TJ054bHtjWHA3nnzySfepk9e7cULyu/393yr8i8vmzZvVuXNnNW/eXL179/Z4XElxzgVWsGBBrVmzJlbdNwY6d7PfeavPN8qaNetNJy+/We8mTpyojz/+WDt37vQ4jez67Q8cOKDMmTPHCmNuN5dajJ9//lkDBgzQunXrdPHiRY91YWFhSpMmjfv2nfx97tu3T40aNbrlY+7Zs0c7duyI9XuLcePvIS4Wx7xNqVOnjvW3LEmDBw9W9+7dJV2b9yku5cqVU5kyZWItf+SRR+44ZIqpKb5O+QQAPFgIpQAAkNSiRQt17NhRx44dU61atTzm5/k3EidOHOfyuD48xvd9FC5cWKVLl9aUKVPUpk0bTZkyRUmTJlWTJk1u+XMxkyHfOMl4kiRJ3JMoHzp06E7Lj1dNmjTR2rVr9eqrr6pkyZJKlSqVoqOjVbNmzVjzPyUEd3NFszNnzqhRo0bKnz+/vvzyy3/1uDfbZ+6UU32+VX/iWjdlyhS1a9dODRo00KuvvqpMmTIpceLEeu+997Rv3754qWnfvn2qVq2aChYsqE8++UTZs2dX0qRJtXjxYg0bNizW84+Pv3Hp2sivYsWK6ZNPPolzffbs2W/58+nTp48zdCxYsKC2bNmiyMhI+fn5uZffzWinfyOmprhCXwAACKUAAJD07LPP6oUXXtAvv/yiGTNm3HS7nDlzasWKFTp37pzHaJmdO3e6198tb44gaNOmjXr37q2jR48qNDRUderUifMUn+sVKFBAjz76qObOnavhw4crZcqU9/TYOXPm1NatWxUdHe0xWupmvdqzZ0+s+9i9e7d7cvAzZ87o+++/16BBg9S/f/9b/py3eOP3L10LJFq2bKmzZ89qxYoVSpEiRazHlaRdu3a5T+eKsWvXrnjd7xJCn2/mm2++UZ48eTR79myP+m+cuD9nzpz6/vvvdf78eY/RUrt27brtYyxYsEARERGaP3++xyio250+dyt58+aNFfLGtc2WLVtUrVq1e3pNKFiwoL799ttYy+vWratffvlFc+bMuW0g7Q379++X9L/RhAAAXI85pQAA0LVT08aOHauBAweqXr16N92udu3aunr1qkaNGuWxfNiwYXK5XO4r+N2NmNAnrsvV/1vNmzeXy+VSz5499eeff6pVq1Z39HMDBw7UyZMn1bFjxzivtHUno0Bq166tY8eOeYR8UVFRGjlypFKlSqXKlSt7bD937lwdPnzYfXvDhg1av369u6cxI1JufOzhw4ff0XOKD974/UvSoEGDtHTpUk2bNi3O09bKlCmjTJkyady4cYqIiHAv/+6777Rjxw7VqVPnrh8zJvi6cb9LCH2+mbhqW79+vdatW+exXe3atRUVFaWxY8e6l129elUjR468p8cICwvT+PHj77nuRo0aacuWLZozZ06sdTGP06RJEx0+fFhffPFFrG0uXbqkCxcu3PIxgoODdebMmVjzhnXp0kWBgYHq1auXdu/efdPH95aNGzcqTZo07isRAgBwPUZKAQDw/+7kcvH16tXTU089pTfeeEN//fWXSpQooWXLlmnevHl66aWXPCYkv1OlS5eWJL3xxhtq1qyZ/Pz8VK9evXseoXS9jBkzqmbNmpo1a5bSpk17x+FFixYttG3bNr333nvasGGDmjVrpty5c+vChQvatm2bpk2bptSpU99y1FWnTp302WefqV27dtq4caNy5cqlb775Rj///LOGDx8ea16mfPny6YknnlCXLl0UERGh4cOHK3369HrttdckSQEBAXryySf14YcfKjIyUlmzZtWyZcvcIzGc4I3f/++//64hQ4boySef1IkTJzRlyhSP9a1atZKfn58++OADtW/fXpUrV1bz5s11/Phxffrpp8qVK5d69ep114+bPHlyFS5cWDNmzFD+/PmVLl06FS1aVEWLFvV5n2+mbt26mj17tp599lnVqVNH+/fv17hx41S4cGGPeZPq1aunihUr6vXXX9dff/2lwoULa/bs2Xc0H1ZISIiSJk2qevXq6YUXXtD58+f1xRdfKFOmTDp69Og91f3qq6/qm2++0XPPPafnn39epUuX1unTpzV//nyNGzdOJUqUUOvWrTVz5kx17txZP/zwgypWrKirV69q586dmjlzppYuXRrn/E4x6tSpoyRJkmjFihXq1KmTe3m6dOk0Z84c1atXTyVKlFCzZs1UtmxZ+fn56e+//9asWbMkxT03VnxYvny56tWrx5xSAIA4EUoBAHAXEiVKpPnz56t///6aMWOGxo8fr1y5cmno0KF6+eWX7+k+y5YtqyFDhmjcuHFasmSJoqOjtX///ngJpaRrp/AtXLhQTZo0kb+//x3/3LvvvqsaNWpo1KhR+vrrr3Xy5EklT55c+fPn18svv6zOnTsrKCjopj+fPHly/fjjj3r99dc1ceJEhYeHq0CBAho/frzatWsXZ52JEiXS8OHDdeLECZUrV06jRo1S5syZ3duEhobqxRdf1OjRo2VmCgkJ0XfffacsWbLcVU/ulTd+/6dOnZKZadWqVbGuSCjJPbqtXbt2SpEihd5//331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fF1BwtPCfF0BAAAAgBswUgoAAAAAAACOI5QCAAAAAACA4wilAAAAAAAA4DhCKQAAAAAAADiOUAoAAAAAAACO82ko9d5776ls2bJKnTq1MmXKpAYNGmjXrl0e21SpUkUul8vjX+fOnT22OXjwoOrUqaMUKVIoU6ZMevXVVxUVFeXkUwEAAAAAAMBdSOLLB1+1apW6deumsmXLKioqSv369VNISIj++OMPpUyZ0r1dx44dNXjwYPftFClSuP//6tWrqlOnjoKCgrR27VodPXpUbdq0kZ+fn959911Hnw8AAAAAAADujE9DqSVLlnjcnjBhgjJlyqSNGzfqySefdC9PkSKFgoKC4ryPZcuW6Y8//tCKFSsUGBiokiVLasiQIerTp48GDhyopEmTevU5AAAAAAAA4O75NJS6UVhYmCQpXbp0HsunTp2qKVOmKCgoSPXq1dNbb73lHi21bt06FStWTIGBge7ta9SooS5dumj79u0qVapUrMeJiIhQRESE+3Z4eLgkKTIyUpGRkfH+vADAWcl9XUDCEy+v7fTVQ7y9X9JXD+yr3kFfvYO+egefRwA8AO40W3GZmXm5ljsSHR2t+vXr6+zZs1qzZo17+eeff66cOXMqS5Ys2rp1q/r06aNy5cpp9uzZkqROnTrpwIEDWrp0qftnLl68qJQpU2rx4sWqVatWrMcaOHCgBg0aFGt5aGiox6mBAAAAAAAAuDsXL15UixYtFBYWpoCAgJtul2BGSnXr1k3btm3zCKSka6FTjGLFiilz5syqVq2a9u3bp7x5897TY/Xt21e9e/d23w4PD1f27NkVEhJyy2YBwH1hVhpfV5DwPBf27++DvnqKj55K9PVG7KveQV+9g756R3y9vgKAD8WckXY7CSKU6t69uxYuXKjVq1crW7Zst9y2fPnykqS9e/cqb968CgoK0oYNGzy2OX78uCTddB4qf39/+fv7x1ru5+cnPz+/e3kKAJCAXPJ1AQlPvLy201cP8fZ+SV89sK96B331DvrqHXweAfAAuNNsJZGX67glM1P37t01Z84crVy5Urlz577tz2zevFmSlDlzZklScHCwfv/9d504ccK9zfLlyxUQEKDChQt7pW4AAAAAAAD8Oz4dKdWtWzeFhoZq3rx5Sp06tY4dOyZJSpMmjZInT659+/YpNDRUtWvXVvr06bV161b16tVLTz75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VbNmzbRjxw4tWbJEv/76q8qUKSNJGjlypGrXrq2PPvpIWbJkcey5AAAAAAAA4M75NJS6lf379+vYsWOqXr26e1maNGlUvnx5rVu3Ts2aNdO6deuUNm1adyAlSdWrV1eiRIm0fv16Pfvss3Hed0REhCIiIty3w8PDJUmRkZGKjIz00jNySnJfF5DwxMvvlL7GQl+9g756B32Nf/H2fklfPbCvegd99Q766h301Tvoa/zjWMA77vtM4po7zVZcZmZeruWOuFwuzZkzRw0aNJAkrV27VhUrVtSRI0eUOXNm93ZNmjSRy+XSjBkz9O6772rixInatWuXx31lypRJgwYNUpcuXeJ8rIEDB2rQoEGxloeGhipFihTx96QAAAAAAAAeMhcvXlSLFi0UFhamgICAm26XYEdKeVPfvn3Vu3dv9+3w8HBlz55dISEht2zWfWFWGl9XkPA8F/bv74O+xkZfvYO+egd9jX/x0VOJvt6IfdU76Kt30FfvoK/eQV/jH8cC3hFfffWxmDPSbifBhlJBQUGSpOPHj3uMlDp+/LhKlizp3ubEiRMePxcVFaXTp0+7fz4u/v7+8vf3j7Xcz89Pfn5+8VC9L13ydQEJT7z8TulrLPTVO+ird9DX+Bdv75f01QP7qnfQV++gr95BX72DvsY/jgW8477PJK6502zFp1ffu5XcuXMrKChI33//vXtZeHi41q9fr+DgYElScHCwzp49q40bN7q3WblypaKjo1W+fHnHawYAAAAAAMCd8elIqfPnz2vv3r3u2/v379fmzZuVLl065ciRQy+99JLefvttPfroo8qdO7feeustZcmSxT3vVKFChVSzZk117NhR48aNU2RkpLp3765mzZpx5T0AAAAAAIAEzKeh1G+//aannnrKfTtmnqe2bdtqwoQJeu2113ThwgV16tRJZ8+e1RNPPKElS5YoWbJk7p+ZOnWqunfvrmrVqilRokRq1KiRRowY4fhzAQAAAAAAwJ3zaShVpUoV3erify6XS4MHD9bgwYNvuk26dOkUGhrqjfIAAAAAAADgJQl2TikAAAAAAAA8uAilAAAAAAAA4DhCKQAAAAAAADiOUAoAAAAAAACOI5QCAAAAAACA4wilAAAAAAAA4DhCKQAAAAAAADiOUAoAAAAAAACOI5QCAAAAAACA4wilAAAAAAAA4DhCKQAAAAAAADiO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adOmTT6u6OETs+/36dNHPXr0UFRUlI8run+4XC7NmTNHnTt3du/H8J6Y1+Rz5875uJIHC+91d4ZP/kgwSpUqpUqVKmn+/PmSCFC8Iebg6ODBg5J4ofw36N3dadeunapUqaLp06dr7NixBFPxKCYsOX/+vI8ruf9FR0e7XyeHDx+uRo0aqWrVqnrxxRfdYQrunpnp7NmzatmypSZOnCiJkM/btm3bphYtWmj06NHq0qWLBg0apGTJkvm6rIfG9e9tK1as0OLFi9WhQwclSZLEh1XdH2J6t3v3bvXr108hISHKkCGDj6t68LlcLk2fPl3dunXTP//84+tyHhgul0sTJkzQ22+/7etSEjRCKfhEXIFThgwZlD9/fk2ZMkWSGC3lJXPnzlX+/Pl1+vRpPhTcoatXr0qSjh49qn379kniA9WdevXVV7V161alTp1aI0eOVIECBTRt2jSCqXj24Ycfqm/fvr4u474X877Tr18/ffDBB3riiSfUr18/jR49Wi+++KLOnDnj4wrvX2nTptXAgQO1cuVKAj4HFC1aVC1bttS4ceM0ceJErVixQoULF3a/n8G7Yo4R5s2bp2nTpunpp59W+fLlGSl1B1wul3799VfNmTNHjz/+uFq1asVxghfF9PbUqVN66623VLZsWWXMmNHHVd3/Yvr6119/6ZVXXiGQvg0+9cMnYg78//zzT/epEZL03nvv6fDhwxo1apSvSnvglSlTRiVKlNCcOXMkMSLtZr744gutXbtWV69eVeLEifXNN9+oYsWKeuqpp1S+fHn9/PPPioyM9HWZCdqqVasUHh6uwoULS5JSpEihkSNHqmDBggRT8SxDhgyaPn26duzY4etS7nu///675s6dq9DQUL366qtKnTq1kiVLppCQED3yyCPu7dhnb+7G4CPmA/oTTzyhTZs2afv27ZLooTdER0e739eLFi2qxIkTK0eOHFq9erWOHDmixIkT03eHnD17VkOHDtW0adPcX2glSZKE46478Pbbb6tv37769ddfdeXKFfZbL3K5XFq6dKlGjRqlatWq6fnnn/d1SQ8El8ulX375RZMnT1arVq30+uuv+7qkBI1QCo66/o14zJgxatCggRo3bqxNmzbpzJkzypAhg+rXr69ff/1V0dHRvAH9S3H1LygoSLly5dKMGTMkMSItLmamQYMGqUOHDtqyZYu2bt2qV155RS+88II+//xz+fn5qX379lqyZImuXLni63ITrMqVK2vs2LFKkiSJZsyYoTVr1ihVqlQaNWoUwdS/cGOfzEyVKlVS/vz5tW7dOkmxQwHcubCwMCVJkkRPPfWU5s6dq7p162rYsGH6z3/+o7CwMM2bN08SoyXjsnXrVkVFRSlx4sSSpGXLlmnNmjXu9VWrVlXt2rU1YMAAhYeH08N4FnP6aaJEiXTw4EHVqFFD27ZtU5s2bTR//nyNHDlSR48epe9ecmPYlDZtWk2aNEk1a9bUli1bNH78eEnXjrt4v7u1efPmqW3btjp8+LAmTZqkCxcucJzgJdHR0Vq/fr0GDRqk77//ntA0npw9e1affvqpPvjgA+3fv9+9nH34JgzwgaFDh9qQIUNs9OjR1qxZM0ufPr01adLE5syZYytWrLAkSZLYTz/95OsyHxgHDx606Oho9+29e/da+vTpbdKkST6sKmGK6dOVK1esZMmSVrp0aZs0aZL16dPHY7uaNWvao48+avPnz7eIiAhflJqgXblyxf3/e/bssdKlS1vNmjVt/fr1ZmZ27tw5a9u2rZUvX94+/fRTdw+v309xa+fPn/e43b17d8udO7ddunTJRxXdf+La3/bv32/Fixe3gQMHWkBAgI0bN869bu3atVapUiXbsmWLk2XeFwYNGmQul8tWrFhhV65csW3btlmRIkUsXbp01rVrV1uyZImZmf30009WtmxZ92vB1atXfVn2A+P6Pg4aNMjKlCljP/74o3vZwIEDrVSpUvbmm2/a0aNHzcysXbt2tnXrVsdrfRBd3//du3fb3r177dChQ2ZmduDAAatbt6499dRTFhoaGufPPMxiXoePHDlix44ds507d7rXNW7c2IoUKWJTpkxxv7dxnBD/wsLCbOjQoZYoUSIbMWKEr8t5YHz//ffWuHFj8/f3t++//97M2H9vhlAKjrj+jXfWrFmWIUMG++OPP9zL5s2bZ6+//rqlTJnSnnvuOUuSJIm1bt3aLl68yB/vPbi+3yNGjLAyZcpYixYtbN++fRYeHm5mZq1bt7auXbvG2h7/C1SuXLlihQsXNpfLZfXr14+1L9asWdMKFy5ss2bN8ghh8D8DBgywzZs328yZM61mzZpWt25d++WXX8zsWjDVrl07e/zxx+3tt9+mh3fhs88+s8aNG7sDADOzU6dOWenSpW3MmDFmxoHP7Vz/und9sHz27Flr2bKlpUiRwnr16uVefvnyZatbt641bNiQ18ybqFGjhmXLls1WrFhhZmaHDh2ypUuXWrly5ax8+fJWuXJlW716tWXJksW6dOni42ofTK+99poFBgba/Pnzbf/+/R7rBg0aZKVKlbKQkBCrXLmyZcqUySIjI31T6APk+tfaAQMGWNGiRa1gwYIWGBhoo0ePNjOzP//802rXrm1Vq1a1adOm+arUBCemd3PnzrXy5ctboUKFLH/+/NavXz/3Ng0bNrSiRYtaaGioXbx40VelPjBien7s2DHbtWuXnTp1yn0c8dZbb5nL5bKvvvrKlyXel2L6euHCBTtz5ox7+ZYtW6x+/fpWtGhR9xcFHJ/FRigFR82aNcvefvtt+/DDD83MYn0I3b9/v7311ltWsWJFe+SRR+zYsWNmxh/vvfr0009t4MCB9tFHH1lISIhlzpzZ2rZta6tXr7bZs2dbsmTJ7Pfff/d1mQlKzL52+vRpM7u2jwYHB1tgYKCtWbMm1ofR4OBgK1OmjJ07d87xWhOi6/sze/Zsc7lc9uuvv5qZ2bfffmvVq1ePFUzVr1/fOnbsyN/5XRg6dKi1bNnSkiZNai1atLARI0bY1atXrWnTpta8eXNfl5fgXb+vDR061Jo3b27169e3//73v2Zm9ssvv1iFChWsYsWK9vbbb9unn35q1apVs6JFi7rftwim/uf69/Lq1atbYGBgrMB006ZNVr9+fatevbqlS5fOAgIC3K8NiB9r1661fPny2dq1a83sWpB67NgxmzNnjnuUyRdffGE9e/a0Dh06uAOpqKgon9X8IHn77bctY8aMtnz5crt48aI999xzFhAQYNu2bTMzs3379lm9evWsePHitnz5ch9Xm3AsWbLEkidPbmPGjLEdO3bYsGHDzOVy2aJFi9zbNG7c2LJmzWozZ870YaX3v5j3vtmzZ1vJkiUtR44cVrFiRXv++eftn3/+sejoaPeo1/Hjx/u22PtITF8XLFhg1apVs0KFClmNGjVs+vTpFhkZaRs2bLAmTZpY8eLFbdWqVT6uNmEilIIjoqOj7cKFC5YyZUpzuVzWuXNn97qYA/uYg6KrV69aRESElStXzl544QWf1Hu/uv5D0tSpUy1dunS2a9cu97LJkydbly5dzN/f39q2bWuJEiWyrl27WkREBIGA/e9NZenSpda2bVv3gX1kZKQVK1bMihYtahs2bIjVqwMHDjhea0IXGhpqo0aNss8//9xj+ezZs+3pp5/2CKYuXbrk3nfZD2O7VfixatUq69Wrl2XNmtXq1q1rHTp0MJfLZQsWLHCwwvvL9f187733LE2aNNajRw8rUaKEpU+f3qZMmWJm1z7g9+rVy7Jnz241a9b0+BDP6JL/iWv/rFatmmXOnNmWL18e6/TmtWvX2tixYy1FihT23nvvmRl/9/fqxr4tWLDAAgMDLSoqyrZu3Wp9+vSxRx991Pz8/KxcuXJxfnnCvhw/Ll68aLVq1bLJkyebmdmcOXPskUcecY9cjfk7+OOPP+yVV14hCLxO165d3SOj/vrrL8ubN6/7+P/615dWrVrZvn37fFLjg2TFihWWIkUK+/TTT+3MmTM2ZMgQc7lc7ik9Lly4YIMHDzaXy+Xen3F7ixYtshQpUtjgwYNt48aNFhISYlmyZLGff/7ZzMzWrFljzZo1s+zZs9uaNWt8XG3CQygFR8S8qZw6dcoKFy5s+fLli/PDvdn/DrIGDhxojRs3drTOB8XChQttyJAh9umnn5pZ7BFpmzZtsl69elmxYsUsW7Zs7gNVPhhcC01i3lTWrVvnMcdU0aJFrWjRovbrr7/Sq1vYs2eP5ciRw1wul3388cdmdu0b+xizZ8+2GjVqWHBwsPsbZDNGnsTl+p7Mnz/fJk6caJ999pmZec5/durUKevZs6c1bNjQXC5XnAf08PTXX39Zp06dbPXq1e5l7dq1s8DAQJs0aZK7vzGnPMfgQ3zcFi5c6A7yza4FU1myZLHly5fH2bNx48ZZtmzZ7PDhw06W+UCKmQ7hn3/+sQIFCli+fPksQ4YM1rFjRwsNDbVjx45Z4sSJbcaMGT6u9MEUHR1tx48ft6CgIPvjjz/sxx9/tFSpUtnYsWPN7Fpg1a9fv1iBCsHUtfevxx57zMaNG2dhYWGWNWtW69Spk/v1d8yYMbZ06VIfV/lgiI6OtqioKOvWrZv17t3bzMyOHz9u2bNnt27durm3u3LlikVFRdn777/vMdUK4hYdHW3nz5+3OnXq2KBBg8zs2nFDjhw5PPpqZrZ69Wpr164d4WocCKXgFbf6IHTixAnLli2bVaxY0eMD6Y06depkJUqUsAsXLnijxAdSdHS0nTx50lwul7lcLnv11Vfd62J+J9ePTDtz5owVKFAg1iTeD6t9+/ZZvnz53GFejJhvOGMmP8+aNatt2rTJFyUmSDcGdJcuXbK5c+da8eLFrXTp0u7l14+YmDp1qvXs2ZPQ5Bau702fPn0sS5Ys9vjjj1vGjBmtRo0atmnTplj9u3jxon366aeWLFky27Fjh9Ml3zcmT55sLpfLChYsGOsUsvbt21vmzJlt8uTJdvbsWY91hNFx27lzpwUGBlrbtm09+hkTTK1YscJjNLSZ2X//+18rUaKE/fnnnz6p+UExc+ZMK1OmjPu0pl27dtnbb79tCxcutLCwMDO7NvIhODiYD/fx5GavA23atLGQkBBLkSKFff311+7lR44csUqVKtnEiRNv+fMPq8GDB1uLFi0sc+bM1rlzZ/drxKVLl6xdu3Y2ZMgQu3LlCn2LJ61atbLRo0fb4cOHY4WA8+bNs9mzZ/u4wvvP1atX7cknn7RNmzbZ0aNHLXPmzNapUyf3+nnz5rnf65gXLW6EUoh3139I+uyzz6xXr1723HPP2YYNG9zz9Bw/ftyyZs1qlSpVijOYOnDggD377LP222+/OVb3gyDmTWXv3r2WNWtWK1Wq1E3njIr5Pb3yyivWpk0bx2pMSG48wFm/fr3lzp3b9uzZE2ubmA9UERERFhwczLcc/+/GUOT6AG/x4sWWM2dOq1atWqz1t7oPePr4448tS5Ys7tfDadOmmcvlskqVKtmmTZvc++j1+3OlSpXsgw8+8Em9CVFc+9gzzzzjPmXhxtGkMadBfvfdd06VeF+J68PhzJkzrWjRovb88897BFPVq1e37Nmz28KFCz1+D0OHDrXEiRO7rwSHe7N+/XqrVauWPf3007E+TF6+fNmOHj1qdevWtbJlyzIyJx5cvw+fOnXKPfepmdmECRMsR44cVrduXfeysLAwq1WrllWpUuWh7n9UVJTH6NPrTyWdN2+eZcuWzcqWLev+4H7lyhXr16+f5cyZ0/bu3euTmh80V69etejoaOvYsaNVrlzZcufO7TFNyvnz561169Y2ZMgQRgTfhZj9ukKFCtaxY0fLly+fvfDCC+7jipMnT9ozzzzDHF23QSgFr+nTp48FBgZax44drW7dupY1a1YbOXKkHTlyxMyuBVM5c+a0AgUKxPlN6Y2XO0dst/owv3PnTkubNq3VrVv3lm/orVu3tuDgYLt8+fJD9y1UzPNdtWqVrV+/3latWmVZs2b1+EAVs83y5cvd54Ujtg8++MCeffZZq1Chgo0ZM8b++usvMzNbvHix5c+f30JCQtzbcpW9W1u6dKn76kxnz561zp07u+c5+vbbby1t2rT28ccfW968ea1SpUr222+/xfrbLVu2rA0YMMDp0hO8G08xq1GjhgUFBdny5ctjfWB85513HuoPkXciZiROjG+++cYKFSpkzz//vG3cuNG9vGTJkla/fn337YiICJs4caJ7YnncmZu952/atMnq1q1r1apVc4+Yunr1qk2cONEqVapkFSpUcL/usk/fm6lTp3q8d73xxhtWsmRJS5cunTVv3tzmz59vZv+7+l7x4sWtYcOGVr58eStZsuRD2/8bg9K5c+damTJlrHDhwlatWjX3ZOZffvml5cqVyypXrmxNmjSxZ5991tKnT8+o9HsUFRXlfr04fvy4XbhwwU6dOmVmZocPH7Z8+fJZtmzZ3GejXL161fr162c5cuSw3bt3+6zuhO7q1avuvl68eNEd9Jlde//LmDGjxxkCZtdeKwoUKBDraqjwRCgFr/jqq68sZ86cHlcycrlclj17dvv444/d3ywdPXrUGjRo8NC9SceH6w9Ov/76a3vjjTesY8eOtmPHDvc3UH/88YelSZPG6tWrF+fInr1799rTTz/90I1Iu/4D/IoVK9wjIvbu3WuZMmWybt26xQpFX3zxRevevftDGd7F5fr9b8CAAZYuXTr3FZ3SpUtnLVq0cO9XixYtssKFC1upUqV8Ve59Y82aNeZyuaxMmTI2depUMzP7/vvv7dixY/bf//7X8ubN6z69dNKkSeZyuaxw4cIeFzRYv369+fv725YtW3zyHBKquznF7Hq8P/3P2rVr3fvasGHDrHv37rEOtGfOnGkZM2a01q1bewRTNwYqvI7eu2+//TbW1ds2btxo9erVs0qVKrkvdPDzzz/bqFGjmKD/X1q9erW5XC574403zMxsxIgRlilTJhs3bpxNnDjRKleubMHBwfbll1+amdmyZcvstddes549e9rw4cMf2v7v37/fXC6XNWzY0MzMfv31V/P397fXX3/dPv/8c3v66aetUKFCNnz4cDO79qXBwIEDrUGDBjZkyBDbuXOnL8u/L33zzTceYf+3335rJUqUsPz589vjjz/uHq2zbNkyS5s2rZUpU8Zq1KhhDRs2JAS8hV9//dVOnDjhvj1//nxr1KiRPf744zZgwAD3l11vvPGGpU+f3lq3bm1vvPGGtW3b1tKkSUNf7wChFOLdpUuXbNy4cTZq1Cgzu/YtSZo0aWzixInWo0cPS5kypQ0bNswOHjzo8XMc+N+bPn36WKZMmaxVq1b2+OOPW758+ezrr7+2kydPmtm1YCpdunT2+OOPx5pQNioqKtYkvg+TQ4cO2WeffWbvvvuue9ns2bMtceLE9sILL9jKlSvtv//9r/Xu3dvSpk3LhI9xOHDggL3++uv2/fffu5ctXbrUSpcube3atbMLFy7YpUuXbNasWda8eXNO1buNuXPnmsvlsieffNLq1atn06dPd68bMWKEVa1a1X1gNHnyZOvWrZs1a9bM4/XzzJkznBJl8XOKGf5n//79Vr58eatXr54dPXrUvv76a0ufPr317dvXPTIyxsCBAy1t2rT23HPP2fbt293LeZ+/NzH78tWrV23fvn1WsGBBa9CgQaxLi2/evNkCAwPt8ccf93jtMKP3/1ZoaKglTZrUBg0aZO+++6579KrZtTmjXnjhBStXrtxNP3w+jP2Pjo62pUuXWmBgoDVv3twWLFgQawTviy++aAULFvQ4hsC92b59u5UqVcrq1atne/bssT///NNSpUpl77//vg0fPtx69+5tLpfLfcx78OBB6927t3Xp0sXef/99RkjdxPLlyy0gIMA++eQTi4iIsLVr11rSpEntpZdestatW1v16tUtV65c7i8KZsyYYRUrVrSQkBDr2LEjnx3uEKEUvGL79u125MgR279/vxUvXtw++eQTM7v2ATZ16tSWJk0a9+kpfFt67z777DPLkSOH+1uRn376yVwulz366KP22Wefuefw2rp1q4WEhPBh6zoHDhwwl8tlAQEB9v7773usW7p0qeXLl8+yZs1q+fLls6JFi3KaSRzmzZtnLpfLMmXKFOuA8rvvvrOkSZPaDz/8YGae3xCzH95a69atrXLlytawYUOrUqWK+zLNffv2tfz589vRo0ctLCzM6tat6w7/zR7ODz134l5PMUNsn3/+uT311FPWtGlTO3funM2YMcOCgoKsT58+HiOmhg0bZpUrV7a2bdvy9x6PYnq5aNEie+KJJ6xRo0b2448/emxTs2ZNy5Url7388su+KPGBNmXKFPPz8zOXy+Ue3RNzDHvy5EnLmTOnDRw40JclJjjR0dG2bNkyy5QpkyVKlMg9h9H1xwSVK1e2OnXq+KrEB8qUKVOsWrVq9txzz1n//v3tpZde8lj/1Vdfmcvl8ghVcXs9evSwvHnz2ujRo+2VV16xd955x73u999/t65du1qePHlsw4YNHj/HcdmdI5RCvBkxYoR7aHOMVatWWZEiRdynkWzcuNG6detmH3/8MX+o/9LFixftk08+sdGjR5vZtSG6adKksa+++spatGhh6dOnt88//9yOHz/u8XN8QPifcePGWdKkSa19+/bu8+pjDjCPHz9uO3bssM2bN9s///zjyzITjBuv4Hj48GHr1q2buVwumzBhgpl5HmgWKVLEhg4d6nyh96nLly+b2bWDyo4dO9ovv/xiDRs2dJ+Oc/z4ccucObNlzpzZ8uTJY8WKFWN+rjjE5ylmuOb6L4/Gjx9vFStWtKZNm1p4eLhNmzbNMmfObK+99pqtX7/erly5Yg0bNrRZs2Z5jPDB3bu+b9OmTbNatWq5/+a/++47Cw4OtsaNG7uDqQsXLliHDh1s5syZ9DwexPWl6ezZsy1ZsmTWrFkzCwsL89imRYsW1rp1aydLvC9ERUXZ8uXL7dFHH7Xg4GD31cdiPge8//77FhwczPvZv3D93/vUqVOtZs2aliNHDuvQoYOZXduXY/rdpUsXCwkJsfDwcPcyBgjE7frPqj179rRHH33UHn300VhX6d66datVrlzZfcxLX+8eoRTixblz59wTm18/6uTbb7+1jBkz2owZM2zr1q1Wr149a9eunXs9wdSdi+uFbfPmzXb06FHbu3evFSlSxIYNG2Zm1+ZOSZ48uQUGBtrcuXNv+vMwGzt2rLlcLvvggw/o0S1MmzbN2rdvb7t27fKYb+vo0aPWpk0bS548ucdoqbCwMMuTJ4+NGzfOF+XeN1auXOmehyTGkSNHLGvWrPb111/b0aNHrWHDhvbEE0/YwoUL7fTp0zZixAgbM2bMQztPya1wipn33CqYmjVrlhUrVsyCgoIsf/78VqRIEfd+yevqvbn+Q+b3339vHTt2tMSJE9t//vMfj2CqcuXKVr58eWvTpo099dRTVqZMmVhfIODuXd+7Gy/hHhoaakmSJLGXX37Z/cXfpUuXrESJEtarVy9H60yI4vqbjxkxlT59emvYsKGdP3/evV3r1q2tWrVq7i9mcG+uf+8KDQ21kiVLWpYsWWzz5s1m9r/fy+DBg+2xxx7j2OEOXR+W9uvXz1wulz333HMec0yZmTVo0MBq1arldHkPjCQC7kF0dLQSJUrkvp0qVSr16NFDqVKl0qhRoxQdHa2+ffuqYcOGCg0NVefOnZUqVSoFBgbq22+/df9c4sSJfVH+fcnlckmSRo4cqejoaPXs2VMlSpSQJC1ZskSJEydWrVq1JEn//POP2rVrp6CgINWtW9fj5x9GZiaXy6Vt27bpxIkTCg8PV4MGDSRJnTt3VlRUlHr06CGXy6VXXnnloe5VXMLDw/Xmm28qPDxcv/32m8qVK6cnnnjCvY+NHTtWkZGRqlOnjl544QVlyZJFP/30k1KkSKEOHTr4uvwE64cfflC1atUkSbNmzVKDBg30xBNPqGjRovroo48UGhqq5557ToMHD9aAAQM0dOhQderUSS+++KL7Pq5evaokSXgrj5ErVy516NBB06ZN00svvaQvv/xSKVOmVM+ePRUdHa3OnTsrV65ckqQ0adKoRIkSSpEihQoWLOi+D96X4uZyudyvpe3atZMkffnll+rYsaPGjh2rEiVK6LffflN4eLg6dOigJEmS6OrVq/TzHsUcY7388statWqVypQpo9KlS2vhwoU6f/68Jk2apJo1aypt2rRatGiRNmzYoFy5cumzzz5TokSJYh2n4e7E9O6jjz7Sb7/9Jj8/P/Xp00ePPvqomjdvrujoaLVr106rV69WgQIFFB4erujoaH344Yc+rty3Yl4jfvzxR61atUr79u1T06ZNVbRoUT399NMKDQ1VixYtVLlyZRUoUEAZM2bUnDlztGbNGvn7+/u6/PtSTM+jo6Pdr7fNmzdX4sSJNWLECL3xxht69913Vbx4cUnSsWPHlDJlSl2+fFmpUqXyZekJWkxf/fz83MveeecdRUZGaurUqZo4caLatWunDBkySJL8/f31yCOPKDIy0uNncId8Gonhvrd161aP24cPH7bBgwdbtmzZ7O2333YvX7lypf3000/uFJ90/t6cPXvWunTpYpkyZbIvvvjCvXzSpEmWOXNmW7Roke3Zs8fq1atn3bt3d69/mL/5j/lmaPbs2ZYtWzYrVqyYpU2b1kJCQmzr1q3ub0NHjhxp/v7+NmjQIF+WmyBFRUVZ3759bdy4cbZx40YbOnSopU2b1po3b27vvfeeXblyxf755x/r1auXuVwua9y4sc2YMcP9rSd/73Hbs2ePPfnkk1a1alWrUqWKvfjii5Y+fXobPny4ffLJJ1a1alX76aefzOzaPH1VqlSxbt26+bjqhItTzJxxfZ+//vpre+KJJ6xp06b2559/eqx/mN934suyZcssQ4YM7is7Xb161T755BMrWbKktWjRwv0N/o2vsbzmxo9PPvnEHnnkEevdu7flyZPHChUqZKGhoe7T/WfMmGGpUqWyRx991FasWMHo1f/37bffWvLkya1BgwYWHBxsWbJksWbNmrkvLrFs2TIrUqSIuVwuW7VqVZxXh8adiXm9Xbx4sdWvX986duxon332mXv9pEmTLDg42DJmzGhNmjSxF154wdKlS8fV4G4jpq8//PCDvfzyyzZq1CiP+aJ69OhhQUFBVq9ePXvnnXfspZdestSpU8f6XIw7RyiFe7ZkyRLLmDGjffXVVx7LDx06ZC+99JKlSZMm1jm3Zhyo3o24PiTt27fPXnvtNcuSJYvHG0+VKlUsffr0li1bNnvsscce2nPz4+rZ8uXL7ZFHHnGfJrVp0yZzuVxWtWpV27hxo/vN58MPP7R06dLZqVOnHK35frB48WJLnTq1e364S5cu2VtvvWUul8tKly5tH3zwgS1evNh69eplqVKlsp9//tnMjOH4t7Fr1y5r2LCh1atXz5YvX25Lliyxhg0bWq1atczlclmDBg3cr5n79+8nOLkNTjFzxo3B1JNPPmmtWrWyv//+24dVPXimTJliWbJkcV9N18wsPDzc+vfvbylSpLAOHTq43+tjXhvYl+/dja+v/fr1s3nz5rlvP/vss1a0aFGbMmWK+5S+r7/+2ipVqkQY+//++usvK1iwoMep+zNnzrQaNWpYixYt7PDhwxYVFWWLFi2yfPny2ZEjR3xY7YNh9erVlipVKmvXrp2FhIRYrly5PE4jnTFjhpUrV86CgoLso48+skOHDvmw2vvHkiVLzN/f30JCQixTpkxWo0YNmzhxonv9a6+9Zi6XywoXLmz9+/d3z2WJe0MohXu2ZcsW69y5sxUpUsTGjx/vsW7VqlWWMmVKc7lcsdbh7t34Qvfnn3/aK6+8YlmyZLGxY8e6ly9atMiWLVv20I5Iizmg3L9/v/tAMiIiwl566SX3ZYj//PNPy5Mnj7Vr187y5MljFSpUsN9++839szFXLERsXbt2ta5du7pvFy5c2Bo0aGAvv/yy1axZ01wul73//vvWqlUrS5s2rfvKe7i1nTt3Ws2aNS0kJMR27NhhUVFRtn37duvQoUOsuSDMGNFzOzcLpk6fPm27d++20NBQGzdunPv18WH/EHmvru/zV199ZeXLl3d/SUUwcvfi6tnq1autYMGCtmzZMo/lBw8etKxZs1r+/PmtQ4cO7MPx4Pr+L1u2zObMmWPt27d3f8ESo2HDhlasWDGbOnWqe37Fh3m05Y377e7duy1r1qy2fPlyj+UxV+pctWqVmV3rVcyIM/w7s2bNso8//tjMzI4dO2Zjxoyx9OnTW8+ePd3bfPHFF/bcc88RAt6F/v3725gxY8zM7LfffrPmzZtbxYoVPT7Xdu3a1cqVKxfrKr+4e4RSuCM3e6Pdvn27devWzQoUKOAxYur333+31q1b24wZMzhYugfX93vx4sWWOXNmmzNnjsc2e/futQ4dOlj69Olt8uTJse7jYe374cOHLUOGDFaoUCGbOnWqmV07wNy+fbudOXPGypYta//5z3/M7NpppTEjfWI+/OPmvvzyS6tYsaKdPn3aSpUqZRUrVnS/Ef/99982Y8YMi4yMtPPnz9szzzxjWbNmjTVBLOK2e/duCwkJsZCQEFu9erXHuofxg86/xSlmzri+z3Xq1LFnnnnGd8U8IN5//333B/djx47ZY489ZnXr1rXff//dvc2+ffuscePGNmTIECtVqpStWbPGV+U+EK7fj3v37m1p06a1wMBAc7lc1qNHj1jhyXPPPWcZM2a0pUuXOl1qghDznnT96+eWLVvs9OnTtnfvXsuZM6f7mDUiIsK9TbFixax3796O1vogitlfN23aZD/88IO1bNnS3nvvPff6M2fOuIOp6/t99uxZx2u9n8T0dc+ePfb3339b165dbf78+e71mzdvdgdT14+YOnr0qOO1PogIpXBb179Zjxgxwrp3727/+c9/3Fcd2LVrl3Xr1s1y585tgwcPtg0bNljt2rWtffv2HPjfg+v7vXTpUpsxY4a1bdvWihUr5jGM3Mxs4cKF5ufnZy6Xy2bPnu10qQnSDz/8YIkSJbKyZcta/fr1bdq0ae51s2fPtjJlytiePXvM7H/n4JcqVYo5De5Q2bJlzeVyWeXKlW96mmNkZKSdPHnSDh8+7HB197fdu3dbzZo1rWbNmu65pHDvOMXMGTF97tq1qzVr1szjQyjuTnh4uNWvX98SJUrkDpq2b99uWbJksZCQEPv4449txYoVVr16dWvevLmdPn3aUqdObZ988omPK79/Xf86sXHjRnv66aft559/tr///ts6dOhgjz32mH300Uexgql+/fo91Me2+/fvt8qVK5uZ2Zw5cyxLlizueYqaN29uWbNm9bji6ZUrV6xy5co2YsQIX5T7wJk9e7YlS5bMcufObenSpbMmTZp4rD979qx99tln5nK57PXXX/dRlfefmTNnWqZMmSxjxoyWOnVqe+eddzzWb9myxVq3bm1FihRxf/GN+EEohVu6/hv6/v37W9q0aa1p06aWJ08ey549u/ugad++ffb2229b8uTJrUCBAla+fHn3PAcM479z1/f7zTfftGzZstnff/9tv/76q7Vt29YKFy5sc+fOdW/z66+/WqtWrWzixIkP9cHRjZ5//nkrWbKkNWrUyJ566imbNGmSmZmNHTvWsmbN6j6fvl+/fta/f396dwdi/o4nT55sRYsWtd9++81jOeLH7t27rU6dOlamTBn3/F24d5xi5ox//vnHKlas6DGaB7cX1zxQBw8etDZt2ljSpEndI6Z27NhhjRs3toIFC1revHmtcuXK7lGowcHBNn36dOeLf8BMnz7datSoYS1btnT/PiIiIuyFF16wsmXLxhlMmT28X7pu377d8uXLZ/nz5zeXy+XxAf3s2bNWtWpVCwoKskmTJtm3335rr7/+uj3yyCO2e/duH1Z9f4vZL8+cOWOVK1e2SZMm2e+//25fffWVJU+ePNaFUE6fPm1fffUVcx3dRkxfT506ZYULF7bPPvvMvv32W2vTpo1lz57dY5oUs2sj1Dp27Gj79+/3QbUPLkIp3JHjx49b27Zt3VceiIyMtNq1a1tQUJDHqSZ///23bd682X2g9bDNaRRfDh06ZF27drXFixe7l23cuNHatWtnefPmtXHjxtm2bdusbt261rlz54d2RNqNpzXFTKq9aNEia9eunS1dutQaNmxoTz75pM2ZM8fOnDljWbNmtbx581rFihUtTZo09t///tcHld+/Dh06ZJkzZ/YYKo749ccff1jv3r05bS+ecIqZMy5duuTrEu5bMaNOY/bVv//+21q1amVJkyZ1H2OdO3fOTp06ZQcOHHD/XN++fS1Llix8OPqXIiMjrVevXpYzZ04rVqyYx7orV67Y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7du3W6dOnczlclnevHmtRIkSD+28kd7Url07e/fdd83s2imSadOmtTFjxpiZua+wd/78efviiy8eugvI3Cg6Otq973333XeWP39+j4n149ov161bZ8eOHXOqxAfWzz//bAEBAe59c/bs2eZyueztt992b7Ny5UpzuVzWrVs3XiPu0IoVKyxlypQ2bNgwO3funPXr18+SJUtm06ZNMzOzY8eO2ZAhQ8zlcsWa4BzeQygFD4MGDbLMmTPbsmXLzMysVatWFhAQYB9++KH7PNqTJ09ajhw5rFWrVj6s9P41duxYc7lc1rdvX1u3bp2VL1/ePaH5vn37rFevXlaqVCkbPXq0mV2b4+CJJ56wunXr+rLsBG/37t0WEhJiISEh7rnPAABIKBYvXmypU6e2LVu2mNm1Kxa+9dZb5nK5rGzZsvbBBx/Yzp07bcuWLbZu3Tp3IPKwzhsZ3yIiIiwyMtLKlCljs2bNsg0bNliqVKncHzyvXLligwcP9rjysdnDdWXjmC+pL168aJcvX7YDBw64J33/5ptvLDAw0M6ePWtmnvvl2rVrbf369c4X/ACKCZc++eQTa926tZlduyJnjhw5PK6u988//5iZ2apVqxgocAeio6Pt6tWr9sILL1iPHj3M7FoAlStXLuvatat7u6ioKDt58qT79RjOeHhPioYkad26ddq9e7eka+eD//TTT/r888/19NNPa968eVq0aJGeeuop9enTR1988YVOnTql9OnTa+vWrZowYYJvi79Pde7cWRMnTtT777+vMWPGKEuWLCpVqpQkKU+ePOrRo4eKFy+uRYsW6dKlS0qaNKlWrlypefPm+bjyhO3RRx/VqFGjlChRIg0ZMkRr1qzxdUkAALjVqlVLrVu31meffSZJSpYsmb799ls988wzevLJJ7VixQoVKlRImzdvVoUKFZQ4cWJdvXqVU/bu0S+//KLDhw9LkgYOHKgVK1YoSZIkatCggV599VU98cQTGjNmjDp37ixJunDhgn788Udt27bN434elmkpYqbx2LFjh1q1aqUyZcoob968evzxxzV48GBVqlRJV69e1cCBAyXJY7+cOXOmVq5cqcjISB9Vf/+z/59RJ2ZalPDwcCVLlkwHDhxQcHCwatasqZEjR0qSlixZovHjx+vChQt68skn3fPQ4eZcLpcSJUqk8+fPq3z58jp58qQee+wx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kSqnUEpERESkhjMYDGzbts3aZYiIiIhUolBKRERE5BEJCgrCYDAwbty4e9omTJiAwWAgKCjoof28t956i44dOz6044mIiIg8SgqlRERERB6hZs2asWXLFgoLCy3b7ty5w9/+9jdcXV2tWJmIiIiIdSmUEhEREXmEOnfuTLNmzUhMTLRsS0xMxNXVlU6dOlm2FRUVMWnSJJ566ilq165Nnz59OHjwoKX9008/xWAwsGfPHrp27UqdOnXo1asXp06dAiAuLo758+dz9OhRDAYDBoOBuLg4y/65ubm8/PLL1KlTBzc3Nz766KNHf/IiIiIiP0ChlIiIiMgjFhwcTGxsrOX7mJgYxowZU+k1M2bMICEhgQ0bNvDvf/+b1q1bM2DAAK5fv17pdXPmzGHp0qUcOnQIOzs7goODARg+fDjTpk2jXbt2XLlyhStXrjB8+HDLfvPnz2fYsGEcO3YMLy8vAgIC7jm2iIiISFVSKCUiIiLyiI0cOZKUlBQyMjLIyMggNTWVkSNHWtpv3bpFZGQkERERDBo0iLZt2xIdHY2DgwPr16+vdKwFCxbg4eFB27ZtCQsLY9++fdy5cwcHBwfq1q2LnZ0djRs3pnHjxjg4OFj2CwoK4tVXX6V169YsXLiQmzdvkpaWVmXXQEREROTb7KxdgIiIiEhN5+zszODBg4mLi8NsNjN48GAaNWpkaT979iwlJSX07t3bss1oNNK9e3dOnjxZ6VgdOnSwfO3i4gJAdnb2j85PVXG/J554AkdHR7Kzs3/WeYmIiIj8HAqlRERERKpAcHAwEydOBOC99977yccxGo2Wrw0GAwBlZWUPtF/5vvezn4iIiMijouF7IiIiIlVg4MCBFBcXU1JSwoABAyq1tWrVCnt7e1JTUy3bSkpKOHjwIG3btr3vn2Fvb4/JZHpoNYuIiIg8SuopJSIiIlIFbG1tLUPxbG1tK7U98cQThIaGMn36dBo0aICrqyuLFy/m9u3bhISE3PfPaNGiBefPn+fIkSM0bdqUevXqUatWrYd6HiIiIiIPi0IpERERkSri6Oj4vW3vvPMOZWVlBAYG8s0339C1a1eSkpJwcnK67+P7+fmRmJiIp6cnN27cIDY2lqCgoIdQuYiIiMjDZzCbzWZrFyEiIiIiIiIiIr8smlNKRERERERERESqnEIpERERERERERGpcgqlRERERERERESkyimUEhERERERERGRKqdQSkREREREREREqpxCKRERERERERERqXIKpUREREREREREpMoplBIRERERERERkSqnUEpERERERERERKqcQikREREREREREalyCqVERERERERERKTKKZQSEREREREREZEq93/F7dXNtrvtrQAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["monthly_ghi.round()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"sQkstLNFAdpt","executionInfo":{"status":"ok","timestamp":1721981059581,"user_tz":-180,"elapsed":518,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"5b988cd7-4207-45e5-8f07-a13b69ada610"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        month  global_horizon_irradiation\n","0     January                       148.0\n","1    February                       189.0\n","2       March                       239.0\n","3       April                       257.0\n","4         May                       292.0\n","5        June                       327.0\n","6        July                       324.0\n","7      August                       303.0\n","8   September                       271.0\n","9     October                       214.0\n","10   November                       154.0\n","11   December                       136.0"],"text/html":["\n","  <div id=\"df-10a2072a-c1cc-4c25-aef1-9b91788af3fa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>month</th>\n","      <th>global_horizon_irradiation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>January</td>\n","      <td>148.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>February</td>\n","      <td>189.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>March</td>\n","      <td>239.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>April</td>\n","      <td>257.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>May</td>\n","      <td>292.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>June</td>\n","      <td>327.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>July</td>\n","      <td>324.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>August</td>\n","      <td>303.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>September</td>\n","      <td>271.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>October</td>\n","      <td>214.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>November</td>\n","      <td>154.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>December</td>\n","      <td>136.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-10a2072a-c1cc-4c25-aef1-9b91788af3fa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-10a2072a-c1cc-4c25-aef1-9b91788af3fa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-10a2072a-c1cc-4c25-aef1-9b91788af3fa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c9f17bec-fd45-4605-bf0b-e32f7457b0e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c9f17bec-fd45-4605-bf0b-e32f7457b0e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c9f17bec-fd45-4605-bf0b-e32f7457b0e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"monthly_ghi\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"November\",\n          \"October\",\n          \"January\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69.04917000795794,\n        \"min\": 136.0,\n        \"max\": 327.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          154.0,\n          214.0,\n          148.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["average_radiance_by_month = df.groupby(\"month\")[[\"global_horizon_irradiation\",\"direct_normal_irradiation\",\"diffuse_horizonal_irradiation\"]].mean().reset_index()"],"metadata":{"id":"QbIoZp_AHXeR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["average_radiance_by_month.round()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":426},"id":"w4CpZ5_-Hg1b","executionInfo":{"status":"ok","timestamp":1721972415113,"user_tz":-180,"elapsed":10,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"534f0812-de8f-4fba-8e47-4f2e577b4a79"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    month  global_horizon_irradiation  direct_normal_irradiation  \\\n","0       1                       148.0                      186.0   \n","1       2                       189.0                      191.0   \n","2       3                       239.0                      221.0   \n","3       4                       257.0                      188.0   \n","4       5                       292.0                      207.0   \n","5       6                       327.0                      252.0   \n","6       7                       324.0                      258.0   \n","7       8                       303.0                      246.0   \n","8       9                       271.0                      246.0   \n","9      10                       214.0                      211.0   \n","10     11                       154.0                      171.0   \n","11     12                       136.0                      165.0   \n","\n","    diffuse_horizonal_irradiation  \n","0                            56.0  \n","1                            80.0  \n","2                            93.0  \n","3                           118.0  \n","4                           131.0  \n","5                           134.0  \n","6                           127.0  \n","7                           120.0  \n","8                           102.0  \n","9                            86.0  \n","10                           65.0  \n","11                           59.0  "],"text/html":["\n","  <div id=\"df-94a82f4c-e25e-4cb3-b020-a2497b7a38f6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>month</th>\n","      <th>global_horizon_irradiation</th>\n","      <th>direct_normal_irradiation</th>\n","      <th>diffuse_horizonal_irradiation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>148.0</td>\n","      <td>186.0</td>\n","      <td>56.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>189.0</td>\n","      <td>191.0</td>\n","      <td>80.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>239.0</td>\n","      <td>221.0</td>\n","      <td>93.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>257.0</td>\n","      <td>188.0</td>\n","      <td>118.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>292.0</td>\n","      <td>207.0</td>\n","      <td>131.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>327.0</td>\n","      <td>252.0</td>\n","      <td>134.0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>324.0</td>\n","      <td>258.0</td>\n","      <td>127.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>303.0</td>\n","      <td>246.0</td>\n","      <td>120.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>271.0</td>\n","      <td>246.0</td>\n","      <td>102.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>214.0</td>\n","      <td>211.0</td>\n","      <td>86.0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>154.0</td>\n","      <td>171.0</td>\n","      <td>65.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>136.0</td>\n","      <td>165.0</td>\n","      <td>59.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94a82f4c-e25e-4cb3-b020-a2497b7a38f6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-94a82f4c-e25e-4cb3-b020-a2497b7a38f6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-94a82f4c-e25e-4cb3-b020-a2497b7a38f6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2ee1be0d-77f1-446a-a9ee-0497ee4c52e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2ee1be0d-77f1-446a-a9ee-0497ee4c52e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2ee1be0d-77f1-446a-a9ee-0497ee4c52e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"average_radiance_by_month\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 69.04917000795794,\n        \"min\": 136.0,\n        \"max\": 327.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          154.0,\n          214.0,\n          148.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct_normal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.63805178380634,\n        \"min\": 165.0,\n        \"max\": 258.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          252.0,\n          186.0,\n          171.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse_horizonal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28.589439669326516,\n        \"min\": 56.0,\n        \"max\": 134.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          65.0,\n          86.0,\n          56.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["average_by_hour = df.groupby(\"hour\")[[\"thin_film_energy\", \"polycrystalline_energy\"]].mean().reset_index()\n"],"metadata":{"id":"Pn411GMA7hTz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["temp_by_max = df.groupby(\"month\")[[\"air_temp\"]].max()"],"metadata":{"id":"pOEcZvub88pD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["temp_by_min = df.groupby(\"month\")[[\"air_temp\"]].min()"],"metadata":{"id":"ALnl1T0o9SII"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["temp_by_max"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"l2W10iCr9IVO","executionInfo":{"status":"ok","timestamp":1721972415113,"user_tz":-180,"elapsed":9,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"9ac28a66-cd59-41f5-deeb-1428e2574688"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       air_temp\n","month          \n","1          23.3\n","2          26.2\n","3          37.1\n","4          42.4\n","5          44.1\n","6          47.4\n","7          49.6\n","8          50.1\n","9          47.3\n","10         39.6\n","11         33.0\n","12         29.4"],"text/html":["\n","  <div id=\"df-de7b478c-2c41-45dd-9b6d-4920d04c8c6e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>air_temp</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>23.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>26.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>37.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>42.4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>44.1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>47.4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>49.6</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>50.1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>47.3</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>39.6</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>29.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de7b478c-2c41-45dd-9b6d-4920d04c8c6e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-de7b478c-2c41-45dd-9b6d-4920d04c8c6e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-de7b478c-2c41-45dd-9b6d-4920d04c8c6e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fda0bcae-25cc-4b6c-94fa-94af13ad3194\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fda0bcae-25cc-4b6c-94fa-94af13ad3194')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fda0bcae-25cc-4b6c-94fa-94af13ad3194 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ad4ba7d0-36d9-4c07-99b6-73bdc4dc0783\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('temp_by_max')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ad4ba7d0-36d9-4c07-99b6-73bdc4dc0783 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('temp_by_max');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"temp_by_max","summary":"{\n  \"name\": \"temp_by_max\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.316956682210227,\n        \"min\": 23.3,\n        \"max\": 50.1,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          33.0,\n          39.6,\n          23.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["temp_by_min"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"PbPnwP9q9fp5","executionInfo":{"status":"ok","timestamp":1721972415113,"user_tz":-180,"elapsed":8,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"cccc6db3-407d-4882-d30c-0da1baeccc7b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       air_temp\n","month          \n","1           0.0\n","2           4.1\n","3           6.8\n","4          12.3\n","5          17.2\n","6          22.0\n","7          24.9\n","8          26.3\n","9          20.1\n","10         14.0\n","11          6.3\n","12          0.9"],"text/html":["\n","  <div id=\"df-41216c3d-d717-4888-8ad3-904cba219f5b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>air_temp</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6.8</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12.3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>17.2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>24.9</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>26.3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>20.1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>14.0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>6.3</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41216c3d-d717-4888-8ad3-904cba219f5b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-41216c3d-d717-4888-8ad3-904cba219f5b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-41216c3d-d717-4888-8ad3-904cba219f5b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dfc3b836-96f1-4e19-8d26-d77732ede6b6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dfc3b836-96f1-4e19-8d26-d77732ede6b6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dfc3b836-96f1-4e19-8d26-d77732ede6b6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c02f2bb6-30d6-4182-8538-c924ac2bbfe5\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('temp_by_min')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c02f2bb6-30d6-4182-8538-c924ac2bbfe5 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('temp_by_min');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"temp_by_min","summary":"{\n  \"name\": \"temp_by_min\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.277975713124784,\n        \"min\": 0.0,\n        \"max\": 26.3,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          6.3,\n          14.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["temp_by_avg = df.groupby(\"month\")[[\"air_temp\"]].mean()"],"metadata":{"id":"CQAH6_S_9rQv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["temp_by_avg.round(1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"XbADEbNj9uUp","executionInfo":{"status":"ok","timestamp":1721972415113,"user_tz":-180,"elapsed":7,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"fbcb71eb-419f-4b23-eab5-23a6e73925d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       air_temp\n","month          \n","1          11.3\n","2          15.1\n","3          21.1\n","4          26.9\n","5          31.9\n","6          35.4\n","7          37.1\n","8          37.6\n","9          33.7\n","10         27.2\n","11         18.8\n","12         13.5"],"text/html":["\n","  <div id=\"df-828ea1e3-df15-4216-a8ef-37f9a088e0fd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>air_temp</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>11.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15.1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>21.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>26.9</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>31.9</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>35.4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>37.1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>37.6</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>33.7</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>27.2</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>18.8</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-828ea1e3-df15-4216-a8ef-37f9a088e0fd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-828ea1e3-df15-4216-a8ef-37f9a088e0fd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-828ea1e3-df15-4216-a8ef-37f9a088e0fd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e7a90036-16c4-4540-8ef6-7a94348ce8e2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e7a90036-16c4-4540-8ef6-7a94348ce8e2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e7a90036-16c4-4540-8ef6-7a94348ce8e2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"temp_by_avg\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.577435602877877,\n        \"min\": 11.3,\n        \"max\": 37.6,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          18.8,\n          27.2,\n          11.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":[],"metadata":{"id":"e53xGBoz-jqe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# Assuming 'df' is your dataframe and it has a column 'hour'\n","# Group by 'hour' and calculate the mean for 'thin_film_energy' and 'polycrystalline_energy'\n","average_by_hour = df.groupby(\"hour\")[[\"thin_film_energy\", \"polycrystalline_energy\"]].mean().reset_index()\n","\n","# Plotting the bar graph\n","plt.figure(figsize=(14, 7))\n","bar_width = 0.35\n","index = average_by_hour[\"hour\"]\n","\n","# Create bar plots for each energy type\n","plt.bar(index - bar_width/2, average_by_hour[\"thin_film_energy\"], bar_width, label=\"Thin Film Energy\")\n","plt.bar(index + bar_width/2, average_by_hour[\"polycrystalline_energy\"], bar_width, label=\"Polycrystalline Energy\")\n","\n","# Adding labels and title\n","plt.xlabel(\"Hour\")\n","plt.ylabel(\"Average Energy\")\n","plt.title(\"Average Energy by Hour\")\n","plt.xticks(index)\n","plt.legend()\n","\n","# Display the plot\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":707},"id":"q4W-7_Df71WC","executionInfo":{"status":"ok","timestamp":1721972416640,"user_tz":-180,"elapsed":1534,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"35e4d7e4-fbe5-4aa1-d9d5-33e6d13325cb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x700 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABW0AAAKyCAYAAACuWPzHAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB5sUlEQVR4nOzdd5RW1f0+7HvozQFFaREBxQJ2MUHUWAmjYuErSezYW8AaS0gsBGOIxhobiRrQiDVRYzSi2EWxoaixEAtYKUYFxEJ93j/yMr+MIDA6MEe5rrXOypx99tnnsx/Ece7s2aesVCqVAgAAAABAIdSp7QIAAAAAAPh/hLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AADwHXbQQQelWbNmtV0GAADVILQFAPiOuPzyy1NWVpbu3bvXdimF07Fjx5SVlS3y2GmnnWq7vO+Ejh07Ztddd13ktYceeihlZWX561//upyrAgD4dqpX2wUAAFAzRowYkY4dO+app57K66+/ns6dO9d2SYWyySab5Oc///lC7e3atauFagAA4KsJbQEAvgMmTJiQxx9/PLfeemuOPPLIjBgxImeeeeZyrWH+/PmZPXt2GjVqtFyfu7S+973vZf/996/tMlIqlfLFF1+kcePGtV3Kd57PGgD4trI9AgDAd8CIESOy8sorp3fv3vnxj3+cESNGVF6bM2dOVllllRx88MEL3Tdjxow0atQoJ510UmXbrFmzcuaZZ6Zz585p2LBh2rdvn1NOOSWzZs2qcm9ZWVkGDBiQESNGZP3110/Dhg0zcuTIJMl5552XLbfcMi1btkzjxo3TrVu3Rf5q/Oeff55jjz02q666alZaaaXsvvvuee+991JWVpZBgwZV6fvee+/lkEMOSevWrdOwYcOsv/76+fOf//xNPraFLNj/9b333kufPn3SrFmzrLbaajnppJMyb968Kn3nz5+fiy66KOuvv34aNWqU1q1b58gjj8zHH39cpd+CbQPuueeebL755mncuHH++Mc/Jkneeuut7L777mnatGlatWqVE044Iffcc0/Kysry0EMPJUnOPPPM1K9fPx988MFC9R5xxBFp0aJFvvjiiyXO7c0330xFRUWaNm2adu3aZfDgwSmVSkn+G2527Ngxe+yxx0L3ffHFF2nevHmOPPLIpfoMq+O5557LzjvvnPLy8jRr1iw77rhjnnjiiSp9Bg0alLKysoXuHT58eMrKyjJx4sTKtsV91gAA3yZCWwCA74ARI0Zkzz33TIMGDbLPPvvktddey9NPP50kqV+/fv7v//4vt99+e2bPnl3lvttvvz2zZs3K3nvvneS/QeTuu++e8847L7vttlsuueSS9OnTJxdeeGH22muvhZ77wAMP5IQTTshee+2Viy++OB07dkySXHzxxdl0000zePDg/Pa3v029evXyk5/8JHfddVeV+w866KBccskl2WWXXXLOOeekcePG6d2790LPmTJlSrbYYovcd999GTBgQC6++OJ07tw5hx56aC666KKl+ozmzJmT//znPwsdn3/+eZV+8+bNS0VFRVq2bJnzzjsv2267bc4///z86U9/qtLvyCOPzMknn5ytttoqF198cQ4++OCMGDEiFRUVmTNnTpW+48ePzz777JMf/ehHufjii7PJJpvk008/zQ477JD77rsvxx57bH71q1/l8ccfz6mnnlrl3gMOOCBz587NTTfdVKV99uzZ+etf/5q+ffsucXXzvHnzstNOO6V169Y599xz061bt5x55pmVq7HLysqy//775+67785HH31U5d5//OMfmTFjxlKtUv6qz3j69OkL9X3ppZfywx/+MM8//3xOOeWUnH766ZkwYUK22267PPnkk0t81ldZ1GcNAPCtUwIA4FvtmWeeKSUpjRo1qlQqlUrz588vrb766qXjjjuuss8999xTSlL6xz/+UeXeXXbZpbTmmmtWnv/lL38p1alTp/Too49W6Td06NBSktJjjz1W2ZakVKdOndJLL720UE2fffZZlfPZs2eXNthgg9IOO+xQ2TZ27NhSktLxxx9fpe9BBx1USlI688wzK9sOPfTQUtu2bUv/+c9/qvTde++9S82bN1/oeV/WoUOHUpJFHkOGDKnsd+CBB5aSlAYPHlzl/k033bTUrVu3yvNHH320lKQ0YsSIKv1Gjhy5UPuCZ48cObJK3/PPP7+UpHT77bdXtn3++eel9dZbr5Sk9OCDD1a29+jRo9S9e/cq9996660L9VuUBXM65phjKtvmz59f6t27d6lBgwalDz74oFQqlUrjx48vJSldccUVVe7ffffdSx07dizNnz9/sc9Z3Ge84Ljlllsq+/fp06fUoEGD0htvvFHZ9v7775dWWmml0jbbbFPZduaZZ5YW9WPLsGHDSklKEyZMWKiGL3/WAADfNlbaAgB8y40YMSKtW7fO9ttvn+S/qyb32muv3HjjjZW/0r/DDjtk1VVXrbJa8+OPP86oUaOqrKC95ZZb0qVLl6y33npVVkrusMMOSZIHH3ywyrO33XbbdO3adaGa/ncP0Y8//jjTp0/PD3/4wzz77LOV7Qu2UvjZz35W5d5jjjmmynmpVMrf/va37LbbbimVSlXqqqioyPTp06uM+1W6d++eUaNGLXTss88+C/U96qijqpz/8Ic/zJtvvll5fsstt6R58+b50Y9+VKWebt26pVmzZgt9Tp06dUpFRUWVtpEjR+Z73/tedt9998q2Ro0a5fDDD1+onn79+uXJJ5/MG2+8Udk2YsSItG/fPttuu+0S554kAwYMqPx6wdYWs2fPzn333ZckWWedddK9e/cqW2t89NFHufvuu7PffvstcouCL/uqz/i8886r0m/evHm5995706dPn6y55pqV7W3bts2+++6b0aNHZ8aMGUs1ry9b1GcNAPBt40VkAADfYvPmzcuNN96Y7bffPhMmTKhs7969e84///zcf//96dWrV+rVq5e+ffvm+uuvz6xZs9KwYcPceuutmTNnTpXQ9rXXXssrr7yS1VZbbZHPmzp1apXzTp06LbLfnXfemd/85jcZN25clb1w/zf4e+utt1KnTp2FxujcuXOV8w8++CDTpk3Ln/70p4W2KPiquhZl1VVXTc+ePZfYr1GjRgvNf+WVV66yV+1rr72W6dOnp1WrVktVz6I+p7feeitrrbXWQmHol+efJHvttVeOP/74jBgxImeccUamT5+eO++8MyeccMJShal16tSpEo4m/w1pk1TZE7Zfv34ZMGBA3nrrrXTo0CG33HJL5syZkwMOOGCJz0i++jOuV6/qjx0ffPBBPvvss6y77roL9e3SpUvmz5+fd955J+uvv/5SPfd/fdU/kwAA3yZCWwCAb7EHHnggkyZNyo033pgbb7xxoesjRoxIr169kiR77713/vjHP+buu+9Onz59cvPNN2e99dbLxhtvXNl//vz52XDDDXPBBRcs8nnt27evcv6/K2oXePTRR7P77rtnm222yeWXX562bdumfv36GTZsWK6//vpqz3H+/PlJkv333z8HHnjgIvtstNFG1R73q9StW3epamrVqlWVVan/68uh76I+p+pYeeWVs+uuu1aGtn/9618za9aspdpntjr23nvvnHDCCRkxYkR++ctf5rrrrsvmm2++yHB1efmqUPrLL4Zb4Jt+1gAARSC0BQD4FhsxYkRatWqVyy67bKFrt956a2677bYMHTo0jRs3zjbbbJO2bdvmpptuytZbb50HHnggv/rVr6rcs9Zaa+X555/PjjvuuFQrOBflb3/7Wxo1apR77rknDRs2rGwfNmxYlX4dOnTI/PnzM2HChKy99tqV7a+//nqVfquttlpWWmmlzJs3b6lWyi4Pa621Vu67775stdVWXzsk7NChQ15++eWUSqUqn/WX579Av379sscee+Tpp5/OiBEjsummmy71StT58+fnzTffrFxdmyT//ve/k6Ty5XFJssoqq6R3794ZMWJE9ttvvzz22GNL/aK36lhttdXSpEmTjB8/fqFrr776aurUqVP5fxCsvPLKSZJp06alRYsWlf3eeuutGq8LAKAo7GkLAPAt9fnnn+fWW2/Nrrvumh//+McLHQMGDMgnn3ySO+64I8l/f0X+xz/+cf7xj3/kL3/5S+bOnVtla4Qk+elPf5r33nsvV1555SKf9+mnny6xrrp166asrKzKSsiJEyfm9ttvr9Jvwb6jl19+eZX2Sy65ZKHx+vbtm7/97W/517/+tdDzPvjggyXWVNN++tOfZt68eTnrrLMWujZ37txMmzZtiWNUVFTkvffeq/zzSZIvvvhikZ99kuy8885ZddVVc8455+Thhx+u9irbSy+9tPLrUqmUSy+9NPXr18+OO+5Ypd8BBxyQl19+OSeffHLq1q2bvffeu1rPWRp169ZNr1698ve//73K9gxTpkzJ9ddfn6233jrl5eVJ/huQJ8kjjzxS2e/TTz/NNddcU+N1AQAUhZW2AADfUnfccUc++eSTKi+y+l9bbLFFVltttYwYMaIynN1rr71yySWX5Mwzz8yGG26YLl26VLnngAMOyM0335yjjjoqDz74YLbaaqvMmzcvr776am6++ebcc8892XzzzRdbV+/evXPBBRdkp512yr777pupU6fmsssuS+fOnfPCCy9U9uvWrVv69u2biy66KB9++GG22GKLPPzww5UrQP939envfve7PPjgg+nevXsOP/zwdO3aNR999FGeffbZ3Hffffnoo4+W+Hm99957ue666xZqb9asWfr06bPE+//XtttumyOPPDJDhgzJuHHj0qtXr9SvXz+vvfZabrnlllx88cX58Y9/vNgxjjzyyFx66aXZZ599ctxxx6Vt27YZMWJEGjVqtND8k6R+/frZe++9c+mll6Zu3bqLfIHaV2nUqFFGjhyZAw88MN27d8/dd9+du+66K7/85S8X2sqhd+/eadmyZW655ZbsvPPOX7lv7zf1m9/8JqNGjcrWW2+dn/3sZ6lXr17++Mc/ZtasWTn33HMr+/Xq1StrrLFGDj300Mog+c9//nNWW221vP3228ukNgCA2ia0BQD4lloQ8P3oRz9a5PU6depU/qr7hx9+mJYtW2bLLbdM+/bt88477yy0ynbBPbfffnsuvPDCXHvttbntttvSpEmTrLnmmjnuuOOq/Hr9V9lhhx1y9dVX53e/+12OP/74dOrUKeecc04mTpxYJbRNkmuvvTZt2rTJDTfckNtuuy09e/bMTTfdlHXXXbcyvEyS1q1b56mnnsrgwYNz66235vLLL0/Lli2z/vrr55xzzlmqz2vcuHGLfKFWhw4dqh3aJsnQoUPTrVu3/PGPf8wvf/nL1KtXLx07dsz++++frbbaaon3N2vWLA888ECOOeaYXHzxxWnWrFn69euXLbfcMn379q0y/wX69euXSy+9NDvuuGPatm271LXWrVs3I0eOzNFHH52TTz45K620Us4888ycccYZC/Vt0KBB9tprr1x++eVL/QKyr2P99dfPo48+moEDB2bIkCGZP39+unfvnuuuuy7du3ev7Fe/fv3cdttt+dnPfpbTTz89bdq0yfHHH5+VV145Bx988DKrDwCgNpWVSqVSbRcBAAALjBs3Lptuummuu+667LfffrVdznJ30UUX5YQTTsi7776b733ve1WuPf/889lkk01y7bXXLtNA9YQTTsjVV1+dyZMnp0mTJsvsOQAALJo9bQEAqDWff/75Qm0XXXRR6tSpk2222aYWKlq+vjz/L774In/84x+z9tprLxTYJsmVV16ZZs2aZc8991xmNX3xxRe57rrr0rdvX4EtAEAtsT0CAAC15txzz83YsWOz/fbbp169ern77rtz991354gjjkj79u1ru7xlbs8998waa6yRTTbZJNOnT891112XV199NSNGjKjS7x//+Edefvnl/OlPf8qAAQPStGnTGq9l6tSpue+++/LXv/41H374YY477rgafwYAAEvH9ggAANSaUaNG5de//nVefvnlzJw5M2ussUYOOOCA/OpXv0q9et/99QUXXXRRrrrqqkycODHz5s1L165dc8oppyy033DHjh0zZcqUVFRU5C9/+UtWWmmlGq/loYceyvbbb59WrVrl9NNPz4ABA2r8GQAALB2hLQAAAABAgdjTFgAAAACgQIS2AAAAAAAF8t3fKKwGzJ8/P++//35WWmmllJWV1XY5AAAAAMC3UKlUyieffJJ27dqlTp2vXk8rtF0K77///grx9mIAAAAAYNl75513svrqq3/ldaHtUljwdt533nkn5eXltVwNAAAAAPBtNGPGjLRv374yb/wqQtulsGBLhPLycqEtAAAAAPCNLGkLVi8iAwAAAAAoEKEtAAAAAECBCG0BAAAAAArEnrYAAAAAVMu8efMyZ86c2i4DCqd+/fqpW7fuNx5HaAsAAADAUimVSpk8eXKmTZtW26VAYbVo0SJt2rRZ4svGFkdoCwAAAMBSWRDYtmrVKk2aNPlGoRR815RKpXz22WeZOnVqkqRt27ZfeyyhLQAAAABLNG/evMrAtmXLlrVdDhRS48aNkyRTp05Nq1atvvZWCV5EBgAAAMASLdjDtkmTJrVcCRTbgr8j32TfZ6EtAAAAAEvNlgiweDXxd0RoCwAAAABQIEJbAAAAAFZYDz30UMrKyjJt2rSv7DNo0KBssskmy6yGL49/0EEHpU+fPsvseRSfF5EBAAAA8LV1/MVdy/V5E3/Xe6n7LunX1M8888xst912SxznpJNOyjHHHLPUz12U4cOH5+CDD16o/corr6yR8ZfGdtttl4cffnih9iOPPDJDhw5d5s9n6QltAQAAAPhOmjRpUuXXN910U84444yMHz++sq1Zs2Z55plnljhOs2bN0qxZs29cT3l5eZXnJ0nz5s3TuHHjGhl/aRx++OEZPHhwlbZl/XK52bNnp0GDBsv0Gd81tkcAAAAA4DupTZs2lUfz5s1TVlZWpe1/g9KxY8dm8803T5MmTbLllltWCVe/avuC8847L23btk3Lli3Tv3//zJkzZ7H1fPn5bdq0SePGjZe4/cJ2222XY445Jscff3xWXnnltG7dOldeeWU+/fTTHHzwwVlppZXSuXPn3H333Uv8TJo0abJQDeXl5UmSiRMnpqysLLfeemu23377NGnSJBtvvHHGjBlTZYzRo0fnhz/8YRo3bpz27dvn2GOPzaefflp5vWPHjjnrrLPSr1+/lJeX54gjjkjy31XF7du3T5MmTfJ///d/ueCCC9KiRYvKZ9epU2ehEP2iiy5Khw4dMn/+/CXO7btEaAsAAADACu9Xv/pVzj///DzzzDOpV69eDjnkkMX2f/DBB/PGG2/kwQcfzDXXXJPhw4dn+PDhy6y+a665JquuumqeeuqpHHPMMTn66KPzk5/8JFtuuWWeffbZ9OrVKwcccEA+++yzb/ysX/3qVznppJMybty4rLPOOtlnn30yd+7cJMkbb7yRnXbaKX379s0LL7yQm266KaNHj86AAQOqjHHeeedl4403znPPPZfTTz89jz32WI466qgcd9xxGTduXH70ox/l7LPPruzfsWPH9OzZM8OGDasyzrBhw3LQQQelTp0VK8ZcsWYLAAAAAItw9tlnZ9ttt03Xrl3zi1/8Io8//ni++OKLr+y/8sor59JLL816662XXXfdNb17987999+/2GdMnz69cquFZs2apU2bNktd38Ybb5zTTjsta6+9dgYOHJhGjRpl1VVXzeGHH5611147Z5xxRj788MO88MILix3n8ssvr1JDs2bNMmLEiCp9TjrppPTu3TvrrLNOfv3rX+ett97K66+/niQZMmRI9ttvvxx//PFZe+21s+WWW+YPf/hDrr322iqf1w477JCf//znWWuttbLWWmvlkksuyc4775yTTjop66yzTn72s59l5513rvLcww47LDfccENmzZqVJHn22Wfz4osvLnIv4O86oS0AAAAAK7yNNtqo8uu2bdsmSaZOnfqV/ddff/3UrVu3yj2L658kK620UsaNG1d5PP7441+rvrp166Zly5bZcMMNK9tat269xJqTZL/99qtSw7hx47L77rt/5bO+/Fk8//zzGT58eJXQt6KiIvPnz8+ECRMq79t8882rjDl+/Pj84Ac/qNL25fM+ffqkbt26ue2225L89+Vt22+/fTp27LjYOX0XeREZAAAAACu8+vXrV35dVlaWJIvdR/V/+y+4Z0n7rtapUyedO3f+xvUteF51a07+++KzJdWwuHFnzpyZI488Mscee+xC962xxhqVXzdt2nSxz1iUBg0apF+/fhk2bFj23HPPXH/99bn44ourPc53gdAWAAAAAFgqm222WV5++eVqh8/rrrtunn766SptXz5P/rtFwgYbbJDLL788c+fOzZ577vmN6v22EtoCAAAAwAris88+y+TJk6u0NWzYMCuvvPJS3X/qqadmiy22yIABA3LYYYeladOmefnllzNq1KhceumlX3nfMccck2222SYXXHBBdttttzzwwAO5++67K1fyLtClS5dsscUWOfXUU3PIIYekcePG1Z/kd4A9bQEAAABgBXHllVembdu2VY599tlnqe/faKON8vDDD+ff//53fvjDH2bTTTfNGWeckXbt2i32vq222ipDhw7NBRdckI033jgjR47MCSeckEaNGi3U99BDD83s2bNzyCGHVHt+3xVlpVKpVNtFFN2MGTPSvHnzTJ8+PeXl5bVdDgAAAMBy98UXX2TChAnp1KnTIoM2qK7DDz88r776ah599NEq7WeddVZuueWWvPDCC7VU2TezuL8rS5sz2h4BAAAAAFjmzjvvvPzoRz9K06ZNc/fdd+eaa67J5ZdfXnl95syZmThxYi699NL85je/qcVKa5/tEQAAAACAZe6pp57Kj370o2y44YYZOnRo/vCHP+Swww6rvD5gwIB069Yt22233Qq9NUJipS0AAAAAsBzcfPPNi70+fPjwDB8+fPkUU3BW2gIAAAAAFIiVtgAA8G0yqHkNjTO9ZsYBAKDGWWkLAAAAAFAgQlsAAAAAgAKp1dD2iiuuyEYbbZTy8vKUl5enR48eufvuuyuvb7fddikrK6tyHHXUUVXGePvtt9O7d+80adIkrVq1ysknn5y5c+dW6fPQQw9ls802S8OGDdO5c2cbGgMAAAAAhVWre9quvvrq+d3vfpe11147pVIp11xzTfbYY48899xzWX/99ZMkhx9+eAYPHlx5T5MmTSq/njdvXnr37p02bdrk8ccfz6RJk9KvX7/Ur18/v/3tb5MkEyZMSO/evXPUUUdlxIgRuf/++3PYYYelbdu2qaioWL4TBgAAAABYglpdabvbbrtll112ydprr5111lknZ599dpo1a5Ynnniisk+TJk3Spk2byqO8vLzy2r333puXX3451113XTbZZJPsvPPOOeuss3LZZZdl9uzZSZKhQ4emU6dOOf/889OlS5cMGDAgP/7xj3PhhRcu9/kCAAAA8O0yfPjwtGjRorbLWCa+PLdBgwZlk002qTw/6KCD0qdPn+VeF7W80vZ/zZs3L7fccks+/fTT9OjRo7J9xIgRue6669KmTZvstttuOf300ytX244ZMyYbbrhhWrduXdm/oqIiRx99dF566aVsuummGTNmTHr27FnlWRUVFTn++OO/spZZs2Zl1qxZleczZsyooVkCAAAAfMcMar6cnze9Wt0POuigXHPNNUmS+vXrZ4011ki/fv3yy1/+MvXqFSYa+0YGDRqU22+/PePGjavRcS+++OKUSqUaHXNRysrKFtl+ww03ZO+9917mzy+iWv8n88UXX0yPHj3yxRdfpFmzZrntttvStWvXJMm+++6bDh06pF27dnnhhRdy6qmnZvz48bn11luTJJMnT64S2CapPJ88efJi+8yYMSOff/55GjduvFBNQ4YMya9//esanysAAPD/q6kf8Kv5gzsAK6addtopw4YNy6xZs/LPf/4z/fv3T/369TNw4MDaLi2zZ89OgwYNaruMRWrefPkF8sOGDctOO+1UpW1Zr3CeM2dO6tevv0yf8XXV6vYISbLuuutm3LhxefLJJ3P00UfnwAMPzMsvv5wkOeKII1JRUZENN9ww++23X6699trcdttteeONN5ZpTQMHDsz06dMrj3feeWeZPg8AAACAZadhw4Zp06ZNOnTokKOPPjo9e/bMHXfckST5+OOP069fv6y88spp0qRJdt5557z22muLHGfixImpU6dOnnnmmSrtF110UTp06JD58+cnSV566aXsuuuuKS8vz0orrZQf/vCHlXnWgi0Hzj777LRr1y7rrrtuBg8enA022GCh522yySY5/fTTkyQPPfRQfvCDH6Rp06Zp0aJFttpqq7z11lsZPnx4fv3rX+f5559PWVlZysrKMnz48CTJBRdckA033DBNmzZN+/bt87Of/SwzZ85c6s/ty9sjbLfddjn22GNzyimnZJVVVkmbNm0yaNCgKvdMmzYthx12WFZbbbWUl5dnhx12yPPPP7/EZ7Vo0aLKFqlt2rRJo0aNkvy/bRzuueeedOnSJc2aNctOO+2USZMmVRnjqquuSpcuXdKoUaOst956ufzyyyuvTZw4MWVlZbnpppuy7bbbplGjRhkxYkTmzp2bY489Ni1atEjLli1z6qmn5sADD6yc97XXXpuWLVtW+a38JOnTp08OOOCApf4sq6vWQ9sGDRqkc+fO6datW4YMGZKNN944F1988SL7du/ePUny+uuvJ0natGmTKVOmVOmz4LxNmzaL7VNeXr7IVbbJf/8il5eXVzkAAAAA+G5o3Lhx5fuQDjrooDzzzDO54447MmbMmJRKpeyyyy6ZM2fOQvd17NgxPXv2zLBhw6q0Dxs2LAcddFDq1KmT9957L9tss00aNmyYBx54IGPHjs0hhxySuXPnVva///77M378+IwaNSp33nlnDjnkkLzyyit5+umnK/s899xzeeGFF3LwwQdn7ty56dOnT7bddtu88MILGTNmTI444oiUlZVlr732ys9//vOsv/76mTRpUiZNmpS99torSVKnTp384Q9/yEsvvZRrrrkmDzzwQE455ZRv9Nldc801adq0aZ588smce+65GTx4cEaNGlV5/Sc/+UmmTp2au+++O2PHjs1mm22WHXfcMR999NE3eu5nn32W8847L3/5y1/yyCOP5O23385JJ51UeX3EiBE544wzcvbZZ+eVV17Jb3/725x++umVW2Ms8Itf/CLHHXdcXnnllVRUVOScc87JiBEjMmzYsDz22GOZMWNGbr/99irzmTdvXmXInyRTp07NXXfdlUMOOeQbzWlxan17hC+bP3/+Qsn1Agv25Wjbtm2SpEePHjn77LMzderUtGrVKkkyatSolJeXV26x0KNHj/zzn/+sMs6oUaOq7JsLAAAAwHdfqVTK/fffn3vuuSfHHHNMXnvttdxxxx157LHHsuWWWyb5b/jXvn373H777fnJT36y0BiHHXZYjjrqqFxwwQVp2LBhnn322bz44ov5+9//niS57LLL0rx589x4442Vv3q/zjrrVBmjadOmueqqq6psi1BRUZFhw4bl+9//fpL/BsHbbrtt1lxzzXz00UeZPn16dt1116y11lpJki5dulTe26xZs9SrV69yEeMC//tOp44dO+Y3v/lNjjrqqCorUKtro402yplnnpkkWXvttXPppZfm/vvvz49+9KOMHj06Tz31VKZOnZqGDRsmSc4777zcfvvt+etf/5ojjjjiK8fdZ599Urdu3SptL7/8ctZYY40k/93KYOjQoZXzHzBgQAYPHlzZ98wzz8z555+fPffcM0nSqVOnvPzyy/njH/+YAw88sMpnsqBPklxyySUZOHBg/u///i9Jcumll1bJEhs3bpx99903w4YNq/zn4brrrssaa6yR7bbbrnofXjXU6krbgQMH5pFHHsnEiRPz4osvZuDAgXnooYey33775Y033shZZ52VsWPHZuLEibnjjjvSr1+/bLPNNtloo42SJL169UrXrl1zwAEH5Pnnn88999yT0047Lf3796/8B+Ooo47Km2++mVNOOSWvvvpqLr/88tx888054YQTanPqAAAAACwnd955Z5o1a5ZGjRpl5513zl577ZVBgwbllVdeSb169Sp/uztJWrZsmXXXXTevvPLKIsfq06dP6tatm9tuuy3Jf391f/vtt0/Hjh2T/HfR4Q9/+MPF7pW64YYbLrSP7eGHH54bbrghX3zxRWbPnp3rr7++ciXnKquskoMOOigVFRXZbbfdcvHFFy+0NcCi3Hfffdlxxx3zve99LyuttFIOOOCAfPjhh/nss8+WeO9XWZDLLdC2bdtMnTo1SfL8889n5syZadmyZZo1a1Z5TJgwYYnbnV544YUZN25claNdu3aV15s0aVIZ2H75uZ9++mneeOONHHrooVWe+5vf/Gah526++eaVX0+fPj1TpkzJD37wg8q2unXrplu3blXuOfzww3PvvffmvffeS/LfP/ODDjroK1+gVhNqdaXt1KlT069fv0yaNCnNmzfPRhttlHvuuSc/+tGP8s477+S+++7LRRddlE8//TTt27dP3759c9ppp1XeX7du3dx55505+uij06NHjzRt2jQHHnhglZS9U6dOueuuu3LCCSfk4osvzuqrr56rrroqFRUVtTFlAAAAAJaz7bffPldccUUaNGiQdu3apV69rx+JNWjQIP369cuwYcOy55575vrrr6+y1edXbcf5v5o2bbpQ22677ZaGDRvmtttuS4MGDTJnzpz8+Mc/rrw+bNiwHHvssRk5cmRuuummnHbaaRk1alS22GKLRT5j4sSJ2XXXXXP00Ufn7LPPziqrrJLRo0fn0EMPzezZs9OkSZOvMfssFEaXlZVV7uU7c+bMtG3bNg899NBC9y3ppWJt2rRJ586dq/XcUqlU+dwkufLKK6sE8EkWWr27qM9+STbddNNsvPHGufbaa9OrV6+89NJLueuuu6o9TnXUamh79dVXf+W19u3b5+GHH17iGB06dFho+4Mv22677fLcc89Vuz4AAAAAvv2aNm26yECwS5cumTt3bp588snK7RE+/PDDjB8/vnLrzUU57LDDssEGG+Tyyy/P3Llzq/y6/UYbbZRrrrkmc+bMWexq2y+rV69eDjzwwAwbNiwNGjTI3nvvvVAAvOmmm2bTTTfNwIED06NHj1x//fXZYost0qBBg8ybN69K37Fjx2b+/Pk5//zzU6fOf3/Z/uabb17qer6OzTbbLJMnT069evUqVx4vD61bt067du3y5ptvZr/99lvq+5o3b57WrVvn6aefzjbbbJMkmTdvXp599tlssskmVfoedthhueiii/Lee++lZ8+ead++fU1OYSG1/iIyAAAAAKgNa6+9dvbYY48cfvjhGT16dJ5//vnsv//++d73vpc99tjjK+/r0qVLtthii5x66qnZZ599qoSrAwYMyIwZM7L33nvnmWeeyWuvvZa//OUvGT9+/BLrOeyww/LAAw9k5MiRVV5yNWHChAwcODBjxozJW2+9lXvvvTevvfZa5b62HTt2zIQJEzJu3Lj85z//yaxZs9K5c+fMmTMnl1xySd5888385S9/ydChQ7/Bp7VkPXv2TI8ePdKnT5/ce++9mThxYh5//PH86le/yjPPPLPYe6dNm5bJkydXOT799NOlfvavf/3rDBkyJH/4wx/y73//Oy+++GKGDRuWCy64YLH3HXPMMRkyZEj+/ve/Z/z48TnuuOPy8ccfL7T1wb777pt33303V1555TJ9AdkCQlsAAAAAVljDhg1Lt27dsuuuu6ZHjx4plUr55z//ucRVsgu2GfhygNeyZcs88MADmTlzZrbddtt069YtV1555VKtul177bWz5ZZbZr311qvya/5NmjTJq6++mr59+2adddbJEUcckf79++fII49MkvTt2zc77bRTtt9++6y22mq54YYbsvHGG+eCCy7IOeeckw022CAjRozIkCFDvsYntPTKysryz3/+M9tss00OPvjgrLPOOtl7773z1ltvpXXr1ou99+CDD07btm2rHJdccslSP/uwww7LVVddlWHDhmXDDTfMtttum+HDh6dTp06LvW9B8N6vX7/06NEjzZo1S0VFRRo1alSlX/PmzdO3b980a9Ysffr0Weq6vq6y0oLNH/hKM2bMSPPmzTN9+vSUl5fXdjkAAKzIBjWvoXGm18w4X/v535F5AKxAvvjii0yYMCGdOnVaKNBaEZ111lm55ZZb8sILL9TYmKVSKWuvvXZ+9rOf5cQTT6yxcVl68+fPT5cuXfLTn/40Z511VpVrO+64Y9Zff/384Q9/WOwYi/u7srQ5Y63uaQsAAAAA3yYzZ87MxIkTc+mll+Y3v/lNjY37wQcf5MYbb8zkyZNz8MEH19i4LN6C7Sa23XbbzJo1K5deemkmTJiQfffdt7LPxx9/nIceeigPPfRQLr/88uVSl9AWAAAAAJbSgAEDcsMNN6RPnz41urdpq1atsuqqq+ZPf/pTVl555Robl8WrU6dOhg8fnpNOOimlUikbbLBB7rvvvsr9gpP/vgDu448/zjnnnJN11113udQltAUAAACApTR8+PAMHz68xse1g2ntaN++fR577LHF9pk4ceLyKeZ/eBEZAAAAAECBCG0BAAAAAApEaAsAAADAUps/f35tlwCFVhN/R+xpCwAAAMASNWjQIHXq1Mn777+f1VZbLQ0aNEhZWVltlwWFUSqVMnv27HzwwQepU6dOGjRo8LXHEtoCAAAAsER16tRJp06dMmnSpLz//vu1XQ4UVpMmTbLGGmukTp2vv8mB0BYAAJaTjr+46xuPMbFRDRQCAF9TgwYNssYaa2Tu3LmZN29ebZcDhVO3bt3Uq1fvG69CF9oCAAAAsNTKyspSv3791K9fv7ZLge8sLyIDAAAAACgQoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABVKvtgsAAIDlYlDzGhpnes2MAwAAX0FoCwAAVEvHX9z1jceY2KgGCgEA+I6yPQIAAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AAAAAAAFUq+2CwAAgCXp+Iu7vvEYExvVQCEAALAcWGkLAAAAAFAgQlsAAAAAgAKxPQIAAMDXNah5DY0zvWbGAQC+E6y0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFEi92i4AAACgNnT8xV3feIyJjWqgEACAL7HSFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIEIbQEAAAAACqRWQ9srrrgiG220UcrLy1NeXp4ePXrk7rvvrrz+xRdfpH///mnZsmWaNWuWvn37ZsqUKVXGePvtt9O7d+80adIkrVq1ysknn5y5c+dW6fPQQw9ls802S8OGDdO5c+cMHz58eUwPAAAAAKDaajW0XX311fO73/0uY8eOzTPPPJMddtghe+yxR1566aUkyQknnJB//OMfueWWW/Lwww/n/fffz5577ll5/7x589K7d+/Mnj07jz/+eK655poMHz48Z5xxRmWfCRMmpHfv3tl+++0zbty4HH/88TnssMNyzz33LPf5AgAAAAAsSb3afPhuu+1W5fzss8/OFVdckSeeeCKrr756rr766lx//fXZYYcdkiTDhg1Lly5d8sQTT2SLLbbIvffem5dffjn33XdfWrdunU022SRnnXVWTj311AwaNCgNGjTI0KFD06lTp5x//vlJki5dumT06NG58MILU1FRsdznDAAAAACwOIXZ03bevHm58cYb8+mnn6ZHjx4ZO3Zs5syZk549e1b2WW+99bLGGmtkzJgxSZIxY8Zkww03TOvWrSv7VFRUZMaMGZWrdceMGVNljAV9FoyxKLNmzcqMGTOqHAAAAAAAy0Oth7YvvvhimjVrloYNG+aoo47Kbbfdlq5du2by5Mlp0KBBWrRoUaV/69atM3ny5CTJ5MmTqwS2C64vuLa4PjNmzMjnn3++yJqGDBmS5s2bVx7t27eviakCAAAAACxRrYe26667bsaNG5cnn3wyRx99dA488MC8/PLLtVrTwIEDM3369MrjnXfeqdV6AAAAAIAVR63uaZskDRo0SOfOnZMk3bp1y9NPP52LL744e+21V2bPnp1p06ZVWW07ZcqUtGnTJknSpk2bPPXUU1XGmzJlSuW1Bf+7oO1/+5SXl6dx48aLrKlhw4Zp2LBhjcwPAAAAAKA6an2l7ZfNnz8/s2bNSrdu3VK/fv3cf//9ldfGjx+ft99+Oz169EiS9OjRIy+++GKmTp1a2WfUqFEpLy9P165dK/v87xgL+iwYAwAAAACgSGp1pe3AgQOz8847Z4011sgnn3yS66+/Pg899FDuueeeNG/ePIceemhOPPHErLLKKikvL88xxxyTHj16ZIsttkiS9OrVK127ds0BBxyQc889N5MnT85pp52W/v37V66UPeqoo3LppZfmlFNOySGHHJIHHnggN998c+66667anDoAAAAAwCLVamg7derU9OvXL5MmTUrz5s2z0UYb5Z577smPfvSjJMmFF16YOnXqpG/fvpk1a1YqKipy+eWXV95ft27d3HnnnTn66KPTo0ePNG3aNAceeGAGDx5c2adTp0656667csIJJ+Tiiy/O6quvnquuuioVFRXLfb4AAAAAAEtSq6Ht1VdfvdjrjRo1ymWXXZbLLrvsK/t06NAh//znPxc7znbbbZfnnnvua9UIAAAAALA8FW5PWwAAAACAFZnQFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAg9Wq7AAAACm5Q8xoaZ3rNjAMAAN9xVtoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIHUq+0CAABYdjr+4q5vPMbERjVQCAAAsNSstAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAVSq6HtkCFD8v3vfz8rrbRSWrVqlT59+mT8+PFV+my33XYpKyurchx11FFV+rz99tvp3bt3mjRpklatWuXkk0/O3Llzq/R56KGHstlmm6Vhw4bp3Llzhg8fvqynBwAAAABQbfVq8+EPP/xw+vfvn+9///uZO3dufvnLX6ZXr155+eWX07Rp08p+hx9+eAYPHlx53qRJk8qv582bl969e6dNmzZ5/PHHM2nSpPTr1y/169fPb3/72yTJhAkT0rt37xx11FEZMWJE7r///hx22GFp27ZtKioqlt+EAQAAimhQ8xoaZ3rNjAMAK7haDW1HjhxZ5Xz48OFp1apVxo4dm2222aayvUmTJmnTps0ix7j33nvz8ssv57777kvr1q2zySab5Kyzzsqpp56aQYMGpUGDBhk6dGg6deqU888/P0nSpUuXjB49OhdeeKHQFgAAAAAolELtaTt9+n//X9lVVlmlSvuIESOy6qqrZoMNNsjAgQPz2WefVV4bM2ZMNtxww7Ru3bqyraKiIjNmzMhLL71U2adnz55VxqyoqMiYMWOW1VQAAAAAAL6WWl1p+7/mz5+f448/PltttVU22GCDyvZ99903HTp0SLt27fLCCy/k1FNPzfjx43PrrbcmSSZPnlwlsE1SeT558uTF9pkxY0Y+//zzNG7cuMq1WbNmZdasWZXnM2bMqLmJAgAAAAAsRmFC2/79++df//pXRo8eXaX9iCOOqPx6ww03TNu2bbPjjjvmjTfeyFprrbVMahkyZEh+/etfL5OxAQAAAAAWpxDbIwwYMCB33nlnHnzwway++uqL7du9e/ckyeuvv54kadOmTaZMmVKlz4LzBfvgflWf8vLyhVbZJsnAgQMzffr0yuOdd975ehMDAAAAAKimWg1tS6VSBgwYkNtuuy0PPPBAOnXqtMR7xo0blyRp27ZtkqRHjx558cUXM3Xq1Mo+o0aNSnl5ebp27VrZ5/77768yzqhRo9KjR49FPqNhw4YpLy+vcgAAAAAALA+1Gtr2798/1113Xa6//vqstNJKmTx5ciZPnpzPP/88SfLGG2/krLPOytixYzNx4sTccccd6devX7bZZptstNFGSZJevXqla9euOeCAA/L888/nnnvuyWmnnZb+/funYcOGSZKjjjoqb775Zk455ZS8+uqrufzyy3PzzTfnhBNOqLW5AwAAAAAsSq2GtldccUWmT5+e7bbbLm3btq08brrppiRJgwYNct9996VXr15Zb7318vOf/zx9+/bNP/7xj8ox6tatmzvvvDN169ZNjx49sv/++6dfv34ZPHhwZZ9OnTrlrrvuyqhRo7Lxxhvn/PPPz1VXXZWKiorlPmcAAAAAgMWp1ReRlUqlxV5v3759Hn744SWO06FDh/zzn/9cbJ/tttsuzz33XLXqAwAAAABY3grxIjIAAAAAAP5LaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgdSr7QIAAAD4+jr+4q5vPMbERjVQCABQY6y0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKpNqh7YEHHphHHnlkWdQCAAAAALDCq3ZoO3369PTs2TNrr712fvvb3+a9995bFnUBAAAAAKyQqh3a3n777Xnvvfdy9NFH56abbkrHjh2z8847569//WvmzJmzLGoEAAAAAFhhfK09bVdbbbWceOKJef755/Pkk0+mc+fOOeCAA9KuXbuccMIJee2112q6TgAAAACAFcI3ehHZpEmTMmrUqIwaNSp169bNLrvskhdffDFdu3bNhRdeWFM1AgAAAACsMKod2s6ZMyd/+9vfsuuuu6ZDhw655ZZbcvzxx+f999/PNddck/vuuy8333xzBg8evCzqBQAAAAD4TqtX3Rvatm2b+fPnZ5999slTTz2VTTbZZKE+22+/fVq0aFED5QEAAAAArFiqHdpeeOGF+clPfpJGjRp9ZZ8WLVpkwoQJ36gwAAAAAIAVUbVD2wMOOGBZ1AEAAAAAQL5GaLvnnnsusr2srCyNGjVK586ds++++2bdddf9xsUBAAAAAKxoqv0isvLy8jzwwAN59tlnU1ZWlrKysjz33HN54IEHMnfu3Nx0003ZeOON89hjjy2LegEAAAAAvtOqvdK2TZs22XfffXPppZemTp3/Zr7z58/Pcccdl5VWWik33nhjjjrqqJx66qkZPXp0jRcMAAAAAPBdVu2VtldffXWOP/74ysA2SerUqZNjjjkmf/rTn1JWVpYBAwbkX//6V40WCgAAAACwIqh2aDt37ty8+uqrC7W/+uqrmTdvXpKkUaNGKSsr++bVAQAAAACsYKq9PcIBBxyQQw89NL/85S/z/e9/P0ny9NNP57e//W369euXJHn44Yez/vrr12ylAAAAAAArgGqHthdeeGFat26dc889N1OmTEmStG7dOieccEJOPfXUJEmvXr2y00471WylAAAAAAArgGqFtnPnzs3111+fww47LL/61a8yY8aMJEl5eXmVfmussUbNVQgAAAAAsAKp1p629erVy1FHHZUvvvgiyX/D2i8HtgAAAAAAfH3VfhHZD37wgzz33HPLohYAAAAAgBVetfe0/dnPfpaf//zneffdd9OtW7c0bdq0yvWNNtqoxooDAAAAAFjRVDu03XvvvZMkxx57bGVbWVlZSqVSysrKMm/evJqrDgAAAABgBVPt0HbChAnLog4AAAAAAPI1QtsOHTosizoAAAAAAMjXCG2T5C9/+UuGDh2aCRMmZMyYMenQoUMuuuiidOrUKXvssUdN1wgA8O00qHkNjTO9ZsYBAAC+FepU94YrrrgiJ554YnbZZZdMmzatcg/bFi1a5KKLLqrp+gAAAAAAVijVDm0vueSSXHnllfnVr36VunXrVrZvvvnmefHFF2u0OAAAAACAFU21Q9sJEyZk0003Xai9YcOG+fTTT6s11pAhQ/L9738/K620Ulq1apU+ffpk/PjxVfp88cUX6d+/f1q2bJlmzZqlb9++mTJlSpU+b7/9dnr37p0mTZqkVatWOfnkkzN37twqfR566KFsttlmadiwYTp37pzhw4dXq1YAAAAAgOWh2qFtp06dMm7cuIXaR44cmS5dulRrrIcffjj9+/fPE088kVGjRmXOnDnp1atXlfD3hBNOyD/+8Y/ccsstefjhh/P+++9nzz33rLw+b9689O7dO7Nnz87jjz+ea665JsOHD88ZZ5xR2WfChAnp3bt3tt9++4wbNy7HH398DjvssNxzzz3VnT4AAAAAwDJV7ReRnXjiienfv3+++OKLlEqlPPXUU7nhhhsyZMiQXHXVVdUaa+TIkVXOhw8fnlatWmXs2LHZZpttMn369Fx99dW5/vrrs8MOOyRJhg0bli5duuSJJ57IFltskXvvvTcvv/xy7rvvvrRu3TqbbLJJzjrrrJx66qkZNGhQGjRokKFDh6ZTp045//zzkyRdunTJ6NGjc+GFF6aioqK6HwEAAAAAwDJT7ZW2hx12WM4555ycdtpp+eyzz7LvvvvmiiuuyMUXX5y99977GxUzffp/34y8yiqrJEnGjh2bOXPmpGfPnpV91ltvvayxxhoZM2ZMkmTMmDHZcMMN07p168o+FRUVmTFjRl566aXKPv87xoI+C8YAAAAAACiKaq+0TZL99tsv++23Xz777LPMnDkzrVq1+saFzJ8/P8cff3y22mqrbLDBBkmSyZMnp0GDBmnRokWVvq1bt87kyZMr+/xvYLvg+oJri+szY8aMfP7552ncuHGVa7NmzcqsWbMqz2fMmPGN5wcAAAAAsDSqvdL2fy148VdN6N+/f/71r3/lxhtvrJHxvokhQ4akefPmlUf79u1ruyQAAAAAYAVR7dB2ypQpOeCAA9KuXbvUq1cvdevWrXJ8HQMGDMidd96ZBx98MKuvvnple5s2bTJ79uxMmzZtoRratGlT2WfKlCkLXV9wbXF9ysvLF1plmyQDBw7M9OnTK4933nnna80LAAAAAKC6qr09wkEHHZS33347p59+etq2bZuysrKv/fBSqZRjjjkmt912Wx566KF06tSpyvVu3bqlfv36uf/++9O3b98kyfjx4/P222+nR48eSZIePXrk7LPPztSpUytX/Y4aNSrl5eXp2rVrZZ9//vOfVcYeNWpU5Rhf1rBhwzRs2PBrzwsAAAAA4Ouqdmg7evToPProo9lkk02+8cP79++f66+/Pn//+9+z0korVe5B27x58zRu3DjNmzfPoYcemhNPPDGrrLJKysvLc8wxx6RHjx7ZYostkiS9evVK165dc8ABB+Tcc8/N5MmTc9ppp6V///6VwetRRx2VSy+9NKecckoOOeSQPPDAA7n55ptz1113feM5AAAAAADUpGpvj9C+ffuUSqUaefgVV1yR6dOnZ7vttkvbtm0rj5tuuqmyz4UXXphdd901ffv2zTbbbJM2bdrk1ltvrbxet27d3Hnnnalbt2569OiR/fffP/369cvgwYMr+3Tq1Cl33XVXRo0alY033jjnn39+rrrqqlRUVNTIPAAAAAAAakq1V9pedNFF+cUvfpE//vGP6dix4zd6+NKEv40aNcpll12Wyy677Cv7dOjQYaHtD75su+22y3PPPVftGgEAAAAAlqdqh7Z77bVXPvvss6y11lpp0qRJ6tevX+X6Rx99VGPFAQAAAACsaL7WSlsAAAAAAJaNaoe2Bx544LKoAwCgMDr+omZeVjqxUY0MAwAArGCW+kVkN998c2bPnl15/u6772b+/PmV55999lnOPffcmq0OAAAAAGAFs9Sh7T777JNp06ZVnnft2jUTJ06sPP/kk08ycODAmqwNAAAAAGCFs9ShbalUWuw5AAAAAADf3FKHtgAAAAAALHtCWwAAAACAAqlXnc733HNPmjdvniSZP39+7r///vzrX/9Kkir73QIAAAAA8PVUK7Q98MADq5wfeeSRVc7Lysq+eUUAAAAAACuwpQ5t58+fvyzrAAAAAAAg9rQFAAAAACgUoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIAC+Vqh7bRp03LVVVdl4MCB+eijj5Ikzz77bN57770aLQ4AAAAAYEVTr7o3vPDCC+nZs2eaN2+eiRMn5vDDD88qq6ySW2+9NW+//XauvfbaZVEnAAAAAMAKodorbU888cQcdNBBee2119KoUaPK9l122SWPPPJIjRYHAAAAALCiqXZo+/TTT+fII49cqP173/teJk+eXCNFAQAAAACsqKod2jZs2DAzZsxYqP3f//53VltttRopCgAAAABgRVXt0Hb33XfP4MGDM2fOnCRJWVlZ3n777Zx66qnp27dvjRcIAAAAALAiqXZoe/7552fmzJlp1apVPv/882y77bbp3LlzVlpppZx99tnLokYAAAAAgBVGvere0Lx584waNSqjR4/OCy+8kJkzZ2azzTZLz549l0V9AAAAAAArlGqHtgtsvfXW2XrrrWuyFgAAAACAFV61Q9s//OEPi2wvKytLo0aN0rlz52yzzTapW7fuNy4OAAAAAGBFU+3Q9sILL8wHH3yQzz77LCuvvHKS5OOPP06TJk3SrFmzTJ06NWuuuWYefPDBtG/fvsYLBgAAAAD4Lqv2i8h++9vf5vvf/35ee+21fPjhh/nwww/z73//O927d8/FF1+ct99+O23atMkJJ5ywLOoFAAAAAPhOq/ZK29NOOy1/+9vfstZaa1W2de7cOeedd1769u2bN998M+eee2769u1bo4UCAAAAAKwIqr3SdtKkSZk7d+5C7XPnzs3kyZOTJO3atcsnn3zyzasDAAAAAFjBVDu03X777XPkkUfmueeeq2x77rnncvTRR2eHHXZIkrz44ovp1KlTzVUJAAAAALCCqHZoe/XVV2eVVVZJt27d0rBhwzRs2DCbb755VllllVx99dVJkmbNmuX888+v8WIBAAAAAL7rqr2nbZs2bTJq1Ki8+uqr+fe//50kWXfddbPuuutW9tl+++1rrkIAAAAAgBVItUPbBdZbb72st956NVkLAAAAAMAK72uFtu+++27uuOOOvP3225k9e3aVaxdccEGNFAYAAAAAsCKqdmh7//33Z/fdd8+aa66ZV199NRtssEEmTpyYUqmUzTbbbFnUCAAAAACwwqj2i8gGDhyYk046KS+++GIaNWqUv/3tb3nnnXey7bbb5ic/+cmyqBEAAAAAYIVR7dD2lVdeSb9+/ZIk9erVy+eff55mzZpl8ODBOeecc2q8QAAAAACAFUm1Q9umTZtW7mPbtm3bvPHGG5XX/vOf/9RcZQAAAAAAK6Bq72m7xRZbZPTo0enSpUt22WWX/PznP8+LL76YW2+9NVtsscWyqBEAAAAAYIVR7dD2ggsuyMyZM5Mkv/71rzNz5szcdNNNWXvttXPBBRfUeIEAAAAAACuSaoW28+bNy7vvvpuNNtooyX+3Shg6dOgyKQwAAAAAYEVUrdC2bt266dWrV1555ZW0aNFiGZUEAAAAX9Og5jUwxvRvPgYAfAPVfhHZBhtskDfffHNZ1AIAAAAAsMKrdmj7m9/8JieddFLuvPPOTJo0KTNmzKhyAAAAAADw9VX7RWS77LJLkmT33XdPWVlZZXupVEpZWVnmzZtXc9UBAAAAAKxgqh3aPvjgg8uiDgAAAAAA8jVC22233XZZ1AEAAAAAQL7GnrZJ8uijj2b//ffPlltumffeey9J8pe//CWjR4+u0eIAAAAAAFY01Q5t//a3v6WioiKNGzfOs88+m1mzZiVJpk+fnt/+9rc1XiAAAAAAwIqk2qHtb37zmwwdOjRXXnll6tevX9m+1VZb5dlnn63R4gAAAAAAVjTVDm3Hjx+fbbbZZqH25s2bZ9q0aTVREwAAAADACqvaoW2bNm3y+uuvL9Q+evTorLnmmjVSFAAAAADAiqraoe3hhx+e4447Lk8++WTKysry/vvvZ8SIETnppJNy9NFHL4saAQAAAABWGPWqe8MvfvGLzJ8/PzvuuGM+++yzbLPNNmnYsGFOOumkHHPMMcuiRgAAAACAFUa1Q9uysrL86le/ysknn5zXX389M2fOTNeuXdOsWbNlUR8AAAAAwAql2tsjXHfddfnss8/SoEGDdO3aNT/4wQ8EtgAAAAAANaTaoe0JJ5yQVq1aZd99980///nPzJs3b1nUBQAAAACwQqr29giTJk3KyJEjc8MNN+SnP/1pmjRpkp/85CfZb7/9suWWWy6LGgEAAPiO6/iLu2pknImNamQYAKhV1V5pW69evey6664ZMWJEpk6dmgsvvDATJ07M9ttvn7XWWmtZ1AgAAAAAsMKo9krb/9WkSZNUVFTk448/zltvvZVXXnmlpuoCAAAAAFghVXulbZJ89tlnGTFiRHbZZZd873vfy0UXXZT/+7//y0svvVTT9QEAAAAArFCqvdJ27733zp133pkmTZrkpz/9aU4//fT06NFjWdQGAAAAALDCqXZoW7du3dx8882pqKhI3bp1q1z717/+lQ022KDGigMAAAAAWNFUO7QdMWJElfNPPvkkN9xwQ6666qqMHTs28+bNq7HiAAAAAABWNF9rT9skeeSRR3LggQembdu2Oe+887LDDjvkiSeeqMnaAAAAAABWONVaaTt58uQMHz48V199dWbMmJGf/vSnmTVrVm6//fZ07dp1WdUIAAAAALDCWOqVtrvttlvWXXfdvPDCC7nooovy/vvv55JLLlmWtQEAAAAArHCWeqXt3XffnWOPPTZHH3101l577WVZEwAAAADACmupV9qOHj06n3zySbp165bu3bvn0ksvzX/+859lWRsAAAAAwApnqUPbLbbYIldeeWUmTZqUI488MjfeeGPatWuX+fPnZ9SoUfnkk0+WZZ0AAAAAACuEpQ5tF2jatGkOOeSQjB49Oi+++GJ+/vOf53e/+11atWqV3XffvVpjPfLII9ltt93Srl27lJWV5fbbb69y/aCDDkpZWVmVY6eddqrS56OPPsp+++2X8vLytGjRIoceemhmzpxZpc8LL7yQH/7wh2nUqFHat2+fc889t7rTBgAAAABYLqod2v6vddddN+eee27efffd3HDDDdW+/9NPP83GG2+cyy677Cv77LTTTpk0aVLl8eXn7LfffnnppZcyatSo3HnnnXnkkUdyxBFHVF6fMWNGevXqlQ4dOmTs2LH5/e9/n0GDBuVPf/pTtesFAAAAAFjWlvpFZItTt27d9OnTJ3369KnWfTvvvHN23nnnxfZp2LBh2rRps8hrr7zySkaOHJmnn346m2++eZLkkksuyS677JLzzjsv7dq1y4gRIzJ79uz8+c9/ToMGDbL++utn3LhxueCCC6qEuwAAAAAARfCNVtouDw899FBatWqVddddN0cffXQ+/PDDymtjxoxJixYtKgPbJOnZs2fq1KmTJ598srLPNttskwYNGlT2qaioyPjx4/Pxxx8v8pmzZs3KjBkzqhwAAAAAAMtDoUPbnXbaKddee23uv//+nHPOOXn44Yez8847Z968eUmSyZMnp1WrVlXuqVevXlZZZZVMnjy5sk/r1q2r9FlwvqDPlw0ZMiTNmzevPNq3b1/TUwMAAAAAWKQa2R5hWdl7770rv95www2z0UYbZa211spDDz2UHXfccZk9d+DAgTnxxBMrz2fMmCG4BQAAAACWi0KvtP2yNddcM6uuumpef/31JEmbNm0yderUKn3mzp2bjz76qHIf3DZt2mTKlClV+iw4/6q9chs2bJjy8vIqBwAAAADA8vCtCm3ffffdfPjhh2nbtm2SpEePHpk2bVrGjh1b2eeBBx7I/Pnz071798o+jzzySObMmVPZZ9SoUVl33XWz8sorL98JAAAAAAAsQa2GtjNnzsy4ceMybty4JMmECRMybty4vP3225k5c2ZOPvnkPPHEE5k4cWLuv//+7LHHHuncuXMqKiqSJF26dMlOO+2Uww8/PE899VQee+yxDBgwIHvvvXfatWuXJNl3333ToEGDHHrooXnppZdy00035eKLL66y/QEAAAAAQFHUamj7zDPPZNNNN82mm26aJDnxxBOz6aab5owzzkjdunXzwgsvZPfdd88666yTQw89NN26dcujjz6ahg0bVo4xYsSIrLfeetlxxx2zyy67ZOutt86f/vSnyuvNmzfPvffemwkTJqRbt275+c9/njPOOCNHHHHEcp8vAAAAAMCS1OqLyLbbbruUSqWvvH7PPfcscYxVVlkl119//WL7bLTRRnn00UerXR8AAAAAwPL2rdrTFgAAAADgu05oCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAAABSI0BYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAhHaAgAAAAAUiNAWAAAAAKBAhLYAAAAAAAVSr7YLAABYyKDmNTDG9G8+BgAAQC2w0hYAAAAAoECEtgAAAAAABSK0BQAAAAAoEKEtAAAAAECBCG0BAAAAAApEaAsAAAAAUCBCWwAAAACAAqlXmw9/5JFH8vvf/z5jx47NpEmTctttt6VPnz6V10ulUs4888xceeWVmTZtWrbaaqtcccUVWXvttSv7fPTRRznmmGPyj3/8I3Xq1Enfvn1z8cUXp1mzZpV9XnjhhfTv3z9PP/10VltttRxzzDE55ZRTludUAWCF0PEXd9XIOBMb1cgwAAAA30q1utL2008/zcYbb5zLLrtskdfPPffc/OEPf8jQoUPz5JNPpmnTpqmoqMgXX3xR2We//fbLSy+9lFGjRuXOO+/MI488kiOOOKLy+owZM9KrV6906NAhY8eOze9///sMGjQof/rTn5b5/AAAAAAAqqtWV9ruvPPO2XnnnRd5rVQq5aKLLsppp52WPfbYI0ly7bXXpnXr1rn99tuz995755VXXsnIkSPz9NNPZ/PNN0+SXHLJJdlll11y3nnnpV27dhkxYkRmz56dP//5z2nQoEHWX3/9jBs3LhdccEGVcBcAAAAAoAgKu6fthAkTMnny5PTs2bOyrXnz5unevXvGjBmTJBkzZkxatGhRGdgmSc+ePVOnTp08+eSTlX222WabNGjQoLJPRUVFxo8fn48//niRz541a1ZmzJhR5QAAAAAAWB4KG9pOnjw5SdK6desq7a1bt668Nnny5LRq1arK9Xr16mWVVVap0mdRY/zvM75syJAhad68eeXRvn37bz4hAAAAAIClUNjQtjYNHDgw06dPrzzeeeed2i4JAAAAAFhBFDa0bdOmTZJkypQpVdqnTJlSea1NmzaZOnVqletz587NRx99VKXPosb432d8WcOGDVNeXl7lAAAAAABYHgob2nbq1Clt2rTJ/fffX9k2Y8aMPPnkk+nRo0eSpEePHpk2bVrGjh1b2eeBBx7I/Pnz071798o+jzzySObMmVPZZ9SoUVl33XWz8sorL6fZAAAAAAAsnVoNbWfOnJlx48Zl3LhxSf778rFx48bl7bffTllZWY4//vj85je/yR133JEXX3wx/fr1S7t27dKnT58kSZcuXbLTTjvl8MMPz1NPPZXHHnssAwYMyN5775127dolSfbdd980aNAghx56aF566aXcdNNNufjii3PiiSfW0qwBAAAAAL5avdp8+DPPPJPtt9++8nxBkHrggQdm+PDhOeWUU/Lpp5/miCOOyLRp07L11ltn5MiRadSoUeU9I0aMyIABA7LjjjumTp066du3b/7whz9UXm/evHnuvffe9O/fP926dcuqq66aM844I0ccccTymygAAAAAwFKq1dB2u+22S6lU+srrZWVlGTx4cAYPHvyVfVZZZZVcf/31i33ORhttlEcfffRr1wkAAAAAsLwUdk9bAAAAAIAVkdAWAAAAAKBAhLYAAAAAAAUitAUAAAAAKBChLQAAAABAgQhtAQAAAAAKRGgLAAAAAFAgQlsAAAAAgAIR2gIAAAAAFIjQFgAAAACgQIS2AAAAAAAFIrQFAAAAACgQoS0AAAAAQIEIbQEAAAAACkRoCwAAAABQIEJbAAAAAIACEdoCAAAA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USzmUSzmUSzmUSzmUTzflbmYR7GYR7GYR7F8V+ZRRGWlUqlU20UAAAAAAPBfdWq7AAAAAAAA/h+hLQAAAABAgQhtAQAAAAAKRGjLMnHZZZelY8eOadSoUbp3756nnnqqtkuqlkceeSS77bZb2rVrl7Kystx+++21XdLXMmTIkHz/+9/PSiutlFatWqVPnz4ZP358bZdVbVdccUU22mijlJeXp7y8PD169Mjdd99d22V9Y7/73e9SVlaW448/vrZLqZZBgwalrKysyrHeeuvVdllfy3vvvZf9998/LVu2TOPGjbPhhhvmmWeeqe2yqq1jx44L/ZmUlZWlf//+tV3aUps3b15OP/30dOrUKY0bN85aa62Vs846K9/Grfc/+eSTHH/88enQoUMaN26cLbfcMk8//XRtl7VES/reVyqVcsYZZ6Rt27Zp3Lhxevbsmddee612il2MJc3j1ltvTa9evdKyZcuUlZVl3LhxtVLnkixuHnPmzMmpp56aDTfcME2bNk27du3Sr1+/vP/++7VX8FdY0p/HoEGDst5666Vp06ZZeeWV07Nnzzz55JO1U+xiVOe/DY866qiUlZXloosuWm71La0lzeOggw5a6HvJTjvtVDvFLsbS/Hm88sor2X333dO8efM0bdo03//+9/P2228v/2IXY0nzWNT39rKysvz+97+vnYK/wpLmMXPmzAwYMCCrr756GjdunK5du2bo0KG1U+xiLGkeU6ZMyUEHHZR27dqlSZMm2WmnnQr5fXBpfgb84osv0r9//7Rs2TLNmjVL3759M2XKlFqqeNGWZh5/+tOfst1226W8vDxlZWWZNm1a7RS7GEuax0cffZRjjjkm6667bho3bpw11lgjxx57bKZPn16LVS9saf48jjzyyKy11lpp3LhxVlttteyxxx559dVXa6ni7wahLTXupptuyoknnpgzzzwzzz77bDbeeONUVFRk6tSptV3aUvv000+z8cYb57LLLqvtUr6Rhx9+OP37988TTzyRUaNGZc6cOenVq1c+/fTT2i6tWlZfffX87ne/y9ixY/PMM89khx12yB577JGXXnqptkv72p5++un88Y9/zEYbbVTbpXwt66+/fiZNmlR5jB49urZLqraPP/44W221VerXr5+77747L7/8cs4///ysvPLKtV1atT399NNV/jxGjRqVJPnJT35Sy5UtvXPOOSdXXHFFLr300rzyyis555xzcu655+aSSy6p7dKq7bDDDsuoUaPyl7/8JS+++GJ69eqVnj175r333qvt0hZrSd/7zj333PzhD3/I0KFD8+STT6Zp06apqKjIF198sZwrXbwlzePTTz/N1ltvnXPOOWc5V1Y9i5vHZ599lmeffTann356nn322dx6660ZP358dt9991qodPGW9Oexzjrr5NJLL82LL76Y0aNHp2PHjunVq1c++OCD5Vzp4i3tfxvedttteeKJJ9KuXbvlVFn1LM08dtpppyrfU2644YblWOHSWdI83njjjWy99dZZb7318tBDD+WFF17I6aefnkaNGi3nShdvSfP43z+HSZMm5c9//nPKysrSt2/f5Vzp4i1pHieeeGJGjhyZ6667Lq+88kqOP/74DBgwIHfcccdyrnTxFjePUqmUPn365M0338zf//73PPfcc+nQoUN69uxZuJ+tluZnwBNOOCH/+Mc/csstt+Thhx/O+++/nz333LMWq17Y0szjs88+y0477ZRf/vKXtVjp4i1pHu+//37ef//9nHfeefnXv/6V4cOHZ+TIkTn00ENrufKqlubPo1u3bhk2bFheeeWV3HPPPSmVSunVq1fmzZtXi5V/y5Wghv3gBz8o9e/fv/J83rx5pXbt2pWGDBlSi1V9fUlKt912W22XUSOmTp1aSlJ6+OGHa7uUb2zllVcuXXXVVbVdxtfyySeflNZee+3SqFGjSttuu23puOOOq+2SquXMM88sbbzxxrVdxjd26qmnlrbeeuvaLmOZOO6440prrbVWaf78+bVdylLr3bt36ZBDDqnStueee5b222+/Wqro6/nss89KdevWLd15551V2jfbbLPSr371q1qqqvq+/L1v/vz5pTZt2pR+//vfV7ZNmzat1LBhw9INN9xQCxUuncV9D58wYUIpSem5555brjV9HUvz3yJPPfVUKUnprbfeWj5FfQ1LM4/p06eXkpTuu+++5VPU1/BV83j33XdL3/ve90r/+te/Sh06dChdeOGFy7226ljUPA488MDSHnvsUSv1fF2Lmsdee+1V2n///WunoK9paf5+7LHHHqUddthh+RT0NS1qHuuvv35p8ODBVdqK/n3xy/MYP358KUnpX//6V2XbvHnzSquttlrpyiuvrIUKl96XfwacNm1aqX79+qVbbrmlss8r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/QDNWXNUV1djx44dSE1NlRXTJFN1hIeHIyUlBXZ2dtDpdCgoKMDGjRuRlpYmMXVTpurYsWMH3NzcoNVqUVRUhKSkJIwaNUpxN1QztQZ0cnLCpEmTMGPGDDg7O6Nt27Z4++23MWDAAPTv319y+v/XnLVsRUUFKioqGp+3oqIiODo6QqvVKuaGZabqaBjY1tbWYtOmTaiurkZ1dTUAwM3NTTEbe0zVcf78eWzbtg2RkZFwc3NDWVkZli5dCjs7O7z00kuS01swQfQ/sGrVKqHVaoVGoxH9+vUTx44dkx3JLHl5eQJAk4/4+HjZ0czyoBoAiMzMTNnRzDJx4kSh0+mERqMRbm5uIiIiQuzfv192rCciPDxcJCUlyY5hltjYWOHp6Sk0Go3o0KGDiI2NFWfPnpUdq0X27NkjunfvLmxsbERgYKBIT0+XHanFcnJyBABRXFwsO0qLVFdXi6SkJKHVaoWtra3w9fUV7733nrh7967saGbbtm2b8PX1FRqNRnh4eIjExERRVVUlO5ZJpnqfwWAQ8+bNE+3btxc2NjYiIiJCkb9vpurIzMx84OPz58+Xmvt+j6qjtLT0oT0+Ly9PdnQjj6rjzp07YvTo0cLLy0toNBrh6ekpRowYIU6cOCE7dhPmvjbU6XRixYoVTzVjczyqjtraWhEZGSnc3NyEWq0WOp1OvPHGG6KiokJ27Caa83xkZGQIPz8/YWtrK3r16iV27dolL/BDNKeOzz77TNjZ2Sm6j5iqo7y8XCQkJAgvLy9ha2srAgICRGpqqjAYDHKD38dUHStXrhTe3t5CrVYLrVYr3n//fUW+TmnOGvDOnTtiypQp4tlnnxVt2rQRo0ePFuXl5fJCP0Bz6pg/f77i17um6njY7x0AUVpaKjX7P5mq4/LlyyI6Olq4u7sLtVotvL29xfjx48Xp06flBrdwVkIo+NRsIiIiIiIiIiIion8ZnmlLREREREREREREpCAc2hIREREREREREREpCIe2RERERERERERERArCoS0RERERERERERGRgnBoS0RERERERERERKQgHNoSERERERERERERKQiHtkREREREREREREQKwqEtERERERERERERkYJwaEtERERERERERESkIBzaEhERERH9Q0JCAkaNGtXken5+PqysrFBVVfXUMxERERHRvwuHtkREREREClFXVyc7AhEREREpAIe2REREREQt8M033yAoKAg2Njbo1KkTUlNTjR63srLCrl27jK61a9cOX331FQDgjz/+gJWVFbZt24bw8HDY2tpi8+bNTyk9ERERESmZSnYAIiIiIiJLU1hYiJiYGCxYsACxsbE4cuQIpkyZAhcXFyQkJJj1s+bMmYPU1FT07t0btra2/5vARERERGRROLQlIiIiIrpPdnY2HBwcjK7V19c3fp6WloaIiAjMmzcPAODv74/ffvsNH3/8sdlD2+TkZIwZM+axMxMRERFR68HjEYiIiIiI7jNkyBDo9Xqjjy+++KLx8d9//x1hYWFG3xMWFoaSkhKj4W5zhISEPJHMRERERNR6cKctEREREdF97O3t4efnZ3StrKzMrJ9hZWUFIYTRtQfdaMze3t78gERERETUqnGnLRERERGRmbp27YrDhw8bXTt8+DD8/f1hbW0NAHBzc0N5eXnj4yUlJaitrX2qOYmIiIjIMnGnLRERERGRmWbOnIm+ffti4cKFiI2NxdGjR7F69WqsXbu28Wuef/55rF69GgMGDEB9fT1mz54NtVotMTURERERWQrutCUiIiIiMlOfPn2wfft2bN26Fd27d8cHH3yAjz76yOgmZKmpqejYsSMGDRqE8ePHY9asWWjTpo280ERERERkMazE/QdtEREREREREREREZE03GlLREREREREREREpCAc2hIREREREREREREpCIe2RERERERERERERArCoS0RERERERERERGRgnBoS0RERERERERERKQgHNoSERERERERERERKQiHtkREREREREREREQKwqEtERERERERERERkYJwaEtERERERERERESkIBzaEhERERERERERESkIh7ZERERERERERERECsKhLREREREREREREZGC/B8Z8rJ964SAGwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LttWEKhvdYgT"},"outputs":[],"source":["# Group by month and hour, then calculate the average for both types of energy\n","monthly_hourly_avg = df.groupby(['month', 'hour'])[['thin_film_energy', 'polycrystalline_energy']].mean().reset_index()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"j85fdScog565"},"outputs":[],"source":["monthly_hourly_avg = monthly_hourly_avg.sort_values(by=['month', 'hour'])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1721972416641,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"IfCcmR1wgUOf","outputId":"aa2019b2-9187-40b3-9fc2-33de7c34b867"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["     month  hour  thin_film_energy  polycrystalline_energy\n","0        1     0               0.0                     0.0\n","1        1     1               0.0                     0.0\n","2        1     2               0.0                     0.0\n","3        1     3               0.0                     0.0\n","4        1     4               0.0                     0.0\n","..     ...   ...               ...                     ...\n","283     12    19               0.0                     0.0\n","284     12    20               0.0                     0.0\n","285     12    21               0.0                     0.0\n","286     12    22               0.0                     0.0\n","287     12    23               0.0                     0.0\n","\n","[288 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-34088414-ecd3-4c90-858a-dfdc50c1f0ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>month</th>\n","      <th>hour</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>283</th>\n","      <td>12</td>\n","      <td>19</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>284</th>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>285</th>\n","      <td>12</td>\n","      <td>21</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>286</th>\n","      <td>12</td>\n","      <td>22</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>287</th>\n","      <td>12</td>\n","      <td>23</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>288 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-34088414-ecd3-4c90-858a-dfdc50c1f0ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-34088414-ecd3-4c90-858a-dfdc50c1f0ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-34088414-ecd3-4c90-858a-dfdc50c1f0ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-59c98a08-83e9-4e3e-bedf-de87286fc004\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59c98a08-83e9-4e3e-bedf-de87286fc004')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-59c98a08-83e9-4e3e-bedf-de87286fc004 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_47f4d49b-d8b8-4682-b276-3013560a0838\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('monthly_hourly_avg')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_47f4d49b-d8b8-4682-b276-3013560a0838 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('monthly_hourly_avg');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"monthly_hourly_avg","summary":"{\n  \"name\": \"monthly_hourly_avg\",\n  \"rows\": 288,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          11,\n          10,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          8,\n          16,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1310.0089534482463,\n        \"min\": 0.0,\n        \"max\": 3867.8571428571427,\n        \"num_unique_values\": 141,\n        \"samples\": [\n          2587.862068965517,\n          1741.2857142857142,\n          2810.7096774193546\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1374.0514056815693,\n        \"min\": 0.0,\n        \"max\": 4204.857142857143,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          3514.8387096774195,\n          3247.8571428571427,\n          3038.133333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}],"source":["monthly_hourly_avg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"smJf6x00hFm3"},"outputs":[],"source":["import pandas as pd\n","\n","# Assuming your dataframe is named df and has columns 'hour', 'month', 'thin_film_energy', and 'polycrystalline_energy'\n","\n","# Map month names to numeric values\n","month_map = {\n","    \"January\": 1, \"February\": 2, \"March\": 3, \"April\": 4,\n","    \"May\": 5, \"June\": 6, \"July\": 7, \"August\": 8,\n","    \"September\": 9, \"October\": 10, \"November\": 11, \"December\": 12\n","}\n","\n","df['month_numeric'] = df['month'].map(month_map)\n","\n","# Group by numeric month and hour, then calculate the average for both types of energy\n","monthly_hourly_avg = df.groupby(['month_numeric', 'hour'])[['thin_film_energy', 'polycrystalline_energy']].mean().reset_index()\n","\n","# Sort the resulting dataframe by numeric month\n","monthly_hourly_avg = monthly_hourly_avg.sort_values(by=['month_numeric', 'hour'])\n","\n","# Optionally, map back to month names for readability\n","month_reverse_map = {v: k for k, v in month_map.items()}\n","monthly_hourly_avg['month'] = monthly_hourly_avg['month_numeric'].map(month_reverse_map)\n","\n","# Drop the numeric month column if it's no longer needed\n","monthly_hourly_avg = monthly_hourly_avg.drop(columns=['month_numeric'])\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":89},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1721972416641,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"NhIJcxWqhISA","outputId":"ab301dbc-46a3-41ab-9a9d-0d3bd542e081"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [hour, thin_film_energy, polycrystalline_energy, month]\n","Index: []"],"text/html":["\n","  <div id=\"df-48675135-b0bb-48b8-89d5-d06fcd6d3937\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>hour</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","      <th>month</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48675135-b0bb-48b8-89d5-d06fcd6d3937')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-48675135-b0bb-48b8-89d5-d06fcd6d3937 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-48675135-b0bb-48b8-89d5-d06fcd6d3937');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","  <div id=\"id_7030616e-0e53-4556-8363-6f1b0db33310\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('monthly_hourly_avg')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_7030616e-0e53-4556-8363-6f1b0db33310 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('monthly_hourly_avg');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"monthly_hourly_avg","repr_error":"Out of range float values are not JSON compliant: nan"}},"metadata":{},"execution_count":68}],"source":["monthly_hourly_avg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Mgex40lfhQLK"},"outputs":[],"source":["monthly_hourly_avg.to_excel(\"monthly_hourly_avg.xlsx\", index=False)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"elapsed":911,"status":"ok","timestamp":1721972417547,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"PohT6jFbxzi_","outputId":"70be4672-a29d-43ee-e428-97a7ecdf9811"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA90AAAJOCAYAAACqS2TfAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAACjY0lEQVR4nOzdZ3gU5fv28XMDJNQQaiB06U1AQKRJlYAUEUR6k96LFVS6IqD0EmwUKQL+KApKERWkiAhSBKQoRYEAUkI1Icn1vODJ/LMkQECWkPD9HMcekJl7Z66d3Z2dc+aeGZeZmQAAAAAAwH3nFd8FAAAAAACQWBG6AQAAAADwEEI3AAAAAAAeQugGAAAAAMBDCN0AAAAAAHgIoRsAAAAAAA8hdAMAAAAA4CGEbgAAAAAAPITQDQAAAACAhxC6AeABcblc6tmz5x3bzZw5Uy6XS0eOHPF8UUjUVq5cqZIlSyp58uRyuVy6cOFCfJekH374QS6XS1988cUd27Zr1065c+f2fFHRuFwuDRkyxPk7MX4fq1atqqpVqz7QeUa97z/88MMDne/DZsiQIXK5XG7DcufOrXbt2jl/s6yAxIfQDSDBi9oodrlc2rBhQ4zxZqYcOXLI5XKpXr16Hq1l06ZNGjJkyEMRbqK0a9fOWT43P5InTx7f5T0Qx44dU9euXZU7d275+Pgoc+bMatiwoTZu3Pifpjt16lTNnDnz/hR5B3v37tWQIUPiHP7Onj2rF198USlSpNCUKVP02WefKVWqVB6p7Vafr5sf8R0iosJMbI9mzZrFa20Po9y5c7sto8yZM6ty5cpasmRJfJcWL06cOKEhQ4Zox44d8V0KgAQmaXwXAAD3S/LkyTVv3jxVqlTJbfi6dev0999/y8fHx+M1bNq0SUOHDlW7du3k5+fn8fnFlY+Pjz7++OMYw5MkSRIP1TxYGzdu1LPPPitJ6tixo4oUKaLg4GDNnDlTlStX1oQJE9SrV697mvbUqVOVMWNGt6NUnrJ3714NHTpUVatWjdPR361bt+rSpUsaPny4atas6dHaPvvsM7e/Z8+erTVr1sQYXrhwYe3bty/O0/3oo48UGRl5X2qMrnfv3ipbtqzbsKhleu3aNSVNyuZRlJIlS+rll1+WdCN0Tp8+XY0aNdK0adPUtWvXeK7uwTpx4oSGDh2q3Llzq2TJkh6bz9NPP61r167J29vbY/MA8GDxqwIg0Xj22We1aNEiTZw40W2jed68eSpdurT++eefeKwufiVNmlStWrWK7zIkSVeuXPHYEdebnT9/Xi+88IJSpEihjRs3Km/evM64/v37KzAwUH379lXp0qVVoUKFB1LTg3L69GlJuq87f2713t382frpp5+0Zs2aWD9zdxO6kyVLdvdFxkHlypX1wgsvxDruUen9EVfZsmVzex/btGmjfPnyady4cQ996L569apSpkwZ32XcNS8vLz6HQCJD93IAiUbz5s119uxZrVmzxhkWFhamL774Qi1atIj1OVeuXNHLL7+sHDlyyMfHRwULFtT7778vM3NrF3U+9tKlS1WsWDH5+PioaNGiWrlypdNmyJAhevXVVyVJefLkcbpk3twd+HbTiE3btm2VMWNGXb9+Pca4WrVqqWDBgrd9flxFddPfuHGj+vfvr0yZMilVqlR6/vnndebMmRjtv/nmG1WuXFmpUqVSmjRpVLduXe3Zs8etTbt27ZQ6dWr98ccfevbZZ5UmTRq1bNlS0o0jir1791bGjBmVJk0aNWjQQMePH3c7p/b777+Xy+WKtTvrvHnz5HK5tHnz5lu+punTpys4OFhjxoxxC9ySlCJFCs2aNUsul0vDhg1zhsd2zmX05RP1fubOnVt79uzRunXrnPc66jzZqLbr169Xly5dlCFDBvn6+qpNmzY6f/6823RvPoc4SvTzPGfOnKkmTZpIkqpVq3bH7tpVq1ZV27ZtJUlly5aVy+VyOxq/aNEilS5dWilSpFDGjBnVqlUrHT9+3G0at3vv7ofIyEi98847yp49u5InT64aNWro0KFDMWqIflT/yJEjcrlcev/99/Xhhx8qb9688vHxUdmyZbV169b7Utet3o/ocufOrXr16umHH35QmTJllCJFChUvXtx5PxYvXqzixYsrefLkKl26tH799dc7zvfcuXN65ZVXVLx4caVOnVq+vr6qU6eOdu7c6dYuqov8woUL77j8JDnLKUWKFHryySf1448/xnlZxCZLliwqXLiwDh8+7Az79ddfVadOHfn6+ip16tSqUaOGfvrpp9tOZ/DgwUqWLFms65bOnTvLz89P//77rzPsm2++UZUqVZQmTRr5+vqqbNmymjdvnjO+atWqKlasmLZt26ann35aKVOm1MCBA+9q/blmzRpVqlRJfn5+Sp06tQoWLKiBAwdKurHco3pHtG/f3vkORp1e8uOPP6pJkybKmTOnfHx8lCNHDvXr10/Xrl2Lw1J1F9s53VGvb+/evapWrZpSpkypbNmyafTo0TGeHxoaqsGDBytfvnxOLa+99ppCQ0PvuhYA9wdHugEkGrlz51b58uU1f/581alTR9KNDbWQkBA1a9ZMEydOdGtvZmrQoIG+//57dejQQSVLltSqVav06quv6vjx4xo3bpxb+w0bNmjx4sXq3r270qRJo4kTJ6px48Y6duyYMmTIoEaNGunAgQOaP3++xo0bp4wZM0qSMmXKFOdpxKZ169aaPXu2Vq1a5XZOenBwsL777jsNHjw4TssntiP93t7e8vX1dRvWq1cvpUuXToMHD9aRI0c0fvx49ezZUwsWLHDafPbZZ2rbtq0CAwM1atQoXb16VdOmTVOlSpX066+/ugWl8PBwBQYGqlKlSnr//fedI0/t2rXTwoUL1bp1az311FNat26d6tat61ZL1apVlSNHDs2dO1fPP/+827i5c+cqb968Kl++/C1f81dffaXkyZPrxRdfjHV8njx5VKlSJX333Xe6du2aUqRIcctp3Wz8+PHq1auXUqdOrTfffFOS5O/v79amZ8+e8vPz05AhQ7R//35NmzZNR48edTaq4+rpp59W7969NXHiRA0cOFCFCxeWJOffm7355psqWLCgPvzwQw0bNkx58uRxdjrMnDlT7du3V9myZTVy5EidOnVKEyZM0MaNG/Xrr7+6HRm/1Xt3P7z33nvy8vLSK6+8opCQEI0ePVotW7bUli1b7vjcefPm6dKlS+rSpYtcLpdGjx6tRo0a6c8//4zT0fFLly7F+D6kT59eXl5xPxZx6NAhtWjRQl26dFGrVq30/vvvq379+goKCtLAgQPVvXt3SdLIkSP14osvav/+/bed/p9//qmlS5eqSZMmypMnj06dOqXp06erSpUq2rt3rwICAtzax2X5ffLJJ+rSpYsqVKigvn376s8//1SDBg2UPn165ciRI86vNbrr16/rr7/+ctZXe/bsUeXKleXr66vXXntNyZIl0/Tp01W1alWtW7dO5cqVi3U6rVu31rBhw7RgwQK3C0xG7Sht3Lixc7R35syZeumll1S0aFENGDBAfn5++vXXX7Vy5Uq3Hapnz55VnTp11KxZM7Vq1Ur+/v5KlSpVnNafe/bsUb169fT4449r2LBh8vHx0aFDh5zrPhQuXFjDhg3ToEGD1LlzZ1WuXFmSnB4yixYt0tWrV9WtWzdlyJBBP//8syZNmqS///5bixYtuqdlfbPz58+rdu3aatSokV588UV98cUXev3111W8eHHnNy8yMlINGjTQhg0b1LlzZxUuXFi7d+/WuHHjdODAAS1duvS+1ALgLhkAJHAzZswwSbZ161abPHmypUmTxq5evWpmZk2aNLFq1aqZmVmuXLmsbt26zvOWLl1qkmzEiBFu03vhhRfM5XLZoUOHnGGSzNvb223Yzp07TZJNmjTJGTZmzBiTZIcPH45RZ1ynEfV6oqYRERFh2bNnt6ZNm7pNb+zYseZyuezPP/+87fJp27atSYr1ERgYGGO+NWvWtMjISGd4v379LEmSJHbhwgUzM7t06ZL5+flZp06d3OYTHBxsadOmdRseNe833njDre22bdtMkvXt29dteLt27UySDR482Bk2YMAA8/HxceZvZnb69GlLmjSpW7vY+Pn5WYkSJW7bpnfv3ibJdu3aZWZmgwcPtth+Hm9+X8zMihYtalWqVLll29KlS1tYWJgzfPTo0SbJli1b5gy7+fVGyZUrl7Vt29b5e9GiRSbJvv/++9u+nptr2Lp1qzMsLCzMMmfObMWKFbNr1645w5cvX26SbNCgQc6wW713cdGjR49Yl6GZ2ffff2+SrHDhwhYaGuoMnzBhgkmy3bt3u9WQK1cu5+/Dhw+bJMuQIYOdO3fOGb5s2TKTZF999dVt64qad2yPqPf15vcjtvc9V65cJsk2bdrkDFu1apVJshQpUtjRo0ed4dOnT4/T+/bvv/9aRESE27DDhw+bj4+PDRs2LMZruNPyi3qvS5Ys6dbuww8/NEmxfm5vlitXLqtVq5adOXPGzpw5Yzt37rRmzZqZJOvVq5eZmTVs2NC8vb3tjz/+cJ534sQJS5MmjT399NMx6o6+HMqXL2/lypVzm+fixYvd2l24cMHSpElj5cqVc/vMmpnbeqpKlSomyYKCgtzaxHX9OW7cOJNkZ86cueXy2Lp1q0myGTNmxBgX9ZsT3ciRI83lcrl9HmJbv9z8XY9tWUW9vtmzZzvDQkNDLUuWLNa4cWNn2GeffWZeXl72448/us0jKCjIJNnGjRtv+foAeA7dywEkKi+++KKuXbum5cuX69KlS1q+fPktu5Z//fXXSpIkiXr37u02/OWXX5aZ6ZtvvnEbXrNmTbcuyo8//rh8fX31559/xrm+e5mGl5eXWrZsqS+//FKXLl1yhs+dO1cVKlRQnjx57jjf5MmTa82aNTEe7733Xoy2nTt3djsKW7lyZUVEROjo0aOSbnTBvHDhgpo3b65//vnHeSRJkkTlypXT999/H2Oa3bp1c/s7qkt91NHAKLFd0KxNmzYKDQ11u8XUggULFB4efsfz1C9duqQ0adLctk3U+IsXL9623b3o3Lmz25HXbt26KWnSpPr666/v+7zi4pdfftHp06fVvXt3t3NG69atq0KFCmnFihUxnnPze3e/tG/f3u1CUVFHDuPyfWratKnSpUt3T8+VpEGDBsX4LmTJkuVuyleRIkXcellEHdGtXr26cubMGWP4nWrz8fFxjoRHRETo7NmzThfn7du3x2h/p+UX9V537drVrV27du2UNm3aOL/O1atXK1OmTMqUKZNKlCihRYsWqXXr1ho1apQiIiK0evVqNWzYUI899pjznKxZs6pFixbasGHDbb9Xbdq00ZYtW/THH384w+bOnascOXKoSpUqkm6sby5duqQ33ngjxnnON/cW8fHxUfv27d2GxXX9GdXDY9myZfd08b7ovWSuXLmif/75RxUqVJCZxen0grhInTq12zrP29tbTz75pNtna9GiRSpcuLAKFSrktn6uXr26JMW6fgbgeYRuAIlKpkyZVLNmTc2bN0+LFy9WRETELS+YdPToUQUEBMQIZVFddqNCZpToG9JR0qVLF+Mc3du512m0adNG165dc85t3r9/v7Zt26bWrVvHab5JkiRRzZo1YzxiuwLvzTVGhZuoGg8ePCjpRriI2hiPeqxevdq5gFeUpEmTKnv27G7Djh49Ki8vrxg7DPLlyxejnkKFCqls2bKaO3euM2zu3Ll66qmnYm0fXZo0adw2tGMTNf5O4fxe5M+f3+3v1KlTK2vWrPF2z+eoz3Rs1wEoVKhQjM98bO/d/XKnz5mnnitJxYsXj/FduNsLV91cQ1SQvbnbdtTwO9UWGRmpcePGKX/+/PLx8VHGjBmVKVMm7dq1SyEhIXec/83LIOq9vPkzmCxZMreAfCflypXTmjVr9O2332rTpk36559/NHv2bKVIkUJnzpzR1atXY/08FS5cWJGRkfrrr79uOe2mTZvKx8fH+W6H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Urly5VSoUCHlzZtXr7zyio4fPy5fX1/973//u6vrfdwvrVu31sKFC9W1a1d9//33qlixoiIiIvT7779r4cKFWrVqlcqUKfPA6wIedYRuAI8sLy8vffnllxo0aJAWLFigGTNmKHfu3BozZoxefvnle5pm2bJlNXz4cAUFBWnlypVOF+r7EbqlG8Fz+fLlevHFF295jnJsQkNDb3nRtXupr0WLFgoICNB7772nMWPGKDQ0VNmyZVPlypVjXD34VmbPnq0sWbJo/vz5WrJkiWrWrKkFCxaoYMGCsV7Uqn79+kqXLp1zH9q4qly5snbt2qV3331XixYt0smTJ5U2bVpVqFBBn376qbNBHSVZsmRasmSJunfvrrfffltZsmRR3759lS5duhivbdCgQTp69KhGjx6tS5cuqUqVKm6he/Lkyc75qtevX1fz5s01ceJEt50KnTp10uHDh/XJJ59o5cqVqly5stasWaMaNWq4zStLliwKCgrSyJEj1aFDB0VEROj777+/q9At3bh6dcqUKfXee+/p9ddfV6pUqfT8889r1KhR9+36B7h7AwcO1JUrVzRv3jwtWLBATzzxhFasWKE33njjnqfZuXNnRUREaMyYMXr11VdVvHhxffnll3r77bfvW91FixbVjz/+qAEDBmjkyJGKjIxUuXLlNGfOnFveo/tmbdq00eTJk1WjRg1lzZo1xvgOHTooc+bMeu+99zR8+HAlS5ZMhQoVuuudRLdbfzZo0EBHjhzRp59+qn/++UcZM2ZUlSpVNHToUOdieMmSJdOsWbM0YMAAde3aVeHh4ZoxY4batWunr776Sr1799bIkSOVPHlyPf/88+rZs+d96cZ/N7y8vLR06VKNGzdOs2fP1pIlS5QyZUo99thj6tOnj3NBNQAPlsse5FVHAAD/ybJly9SwYUOtX7/euUVQYrJjxw6VKlVKc+bMUcuWLd3GhYeHKyAgQPXr149x3uvDZubMmWrfvr22bt3KUSXgDnbu3KmSJUtq9uzZcb4jw71I7OtPAA8vzukGgATko48+0mOPPRbj6GxCdO3atRjDxo8fLy8vLz399NMxxi1dulRnzpxxu1ARgITvo48+UurUqdWoUSOPzyexrD8BJCx0LweABODzzz/Xrl27tGLFCk2YMCFRXJV29OjR2rZtm6pVq6akSZPqm2++0TfffKPOnTu7XfF4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9t+qAwAAAAAgAbun0J0jRw598sknMYZ/8sknypEjhyTp7NmzSpcu3X+rDgAAAACABOyeupe///77atKkib755hvnPt2//PKLfv/9d33xxReSpK1bt6pp06b3r1IAAAAAABKYewrdDRo00P79+zV9+nTt379fklSnTh0tXbpUuXPnliR169btvhUJAAAAAEBCdNeh+/r166pdu7aCgoI0cuRIT9QEAAAAAECicNfndCdLlky7du3yRC0AAAAAACQq93QhtVatWsV6ITUAAAAAAPB/7umc7vDwcH366af69ttvVbp0aaVKlcpt/NixY+9LcQAAAAAAJGT3FLp/++03PfHEE5KkAwcOuI1zuVz/vSoAAAAAABKBewrd33///f2uAwAAAACAROeezumOcujQIa1atUrXrl2TJJnZfSkKAAAAAIDE4J5C99mzZ1WjRg0VKFBAzz77rE6ePClJ6tChg15++eX7WiAAAAAAAAnVPYXufv36KVmyZDp27JhSpkzpDG/atKlWrlx534oDAAAAACAhu6dzulevXq1Vq1Ype/bsbsPz58+vo0eP3pfCAAAAAABI6O7pSPeVK1fcjnBHOXfunHx8fP5zUQAAAAAAJAb3FLorV66s2bNnO3+7XC5FRkZq9OjRqlat2n0rDgAAAACAhOyeupePHj1aNWrU0C+//KKwsDC99tpr2rNnj86dO6eNGzfe7xoBAAAAAEiQ7ulId7FixXTgwAFVqlRJzz33nK5cuaJGjRrp119/Vd68ee93jQAAAAAAJEj3dKRbktKmTas333zzftYCAAAAAECics+h+8KFC/r55591+vRpRUZGuo1r06bNfy4MAAAAAICE7p5C91dffaWWLVvq8uXL8vX1lcvlcsa5XC5CNwAAAAAAusdzul9++WW99NJLunz5si5cuKDz5887j3Pnzt3vGgEAAAAASJDuKXQfP35cvXv3jvVe3QAAAAAA4IZ7Ct2BgYH65Zdf7nctAAAAAAAkKvd0TnfdunX16quvau/evSpevLiSJUvmNr5Bgwb3pTgAAAAAABKyewrdnTp1kiQNGzYsxjiXy6WIiIj/VhUAAAAAAInAPYXum28RBgAAAAAAYrqrc7qfffZZhYSEOH+/9957unDhgvP32bNnVaRIkftWHAAAAAAACdldhe5Vq1YpNDTU+fvdd991u0VYeHi49u/f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WDErVqyYbd26NcG/zls5ePCg5cyZ01wul33wwQdmduMIVJTFixdbYGCglS9f3jmiYpa4jmBGif6avvzyS5s1a5ZNnz7dzNzP/T979qz16dPHGjVqZC6XK9aNwMTiyJEj1rlzZ1u/fr0zrF27dubv72+zZ892lkvUKShREmtYWr58ubNzzuxG8A4ICLA1a9bE+pqDgoIse/bsdvz48QdZ5kMl6pSuM2fOWMGCBS1fvnyWMWNG69Spk82bN8+Cg4MtSZIktmDBgniu9OEUGRlpp06dsixZstjevXvthx9+sNSpU9u0adPM7EYgHzhwYIzQmdCDd1hYmD3xxBMWFBRkISEhli1bNuvcubOzzpk6daqtWrUqnquMf5GRkRYeHm49evSw/v37m5nZqVOnLEeOHNajRw+nXVhYmIWHh9t7773ndpplYhQZGWmXL1+2unXr2tChQ83sxm9Uzpw53ZaJmdn69eutXbt2iWKnDaEbD9TtNnpPnz5t2bNnt4oVK7qFh5t17tzZSpQoYVeuXPFEiQ+dyMhI++eff8zlcpnL5bJXX33VGRe1PKP3Cjh//rwVLFgwxoXGEqI//vjD8uXL5+xoiBJ11CDq4mrZsmWz7du3x0eJ993NOw+uXbtmS5cutccff9xKly7tDI9+5G7u3LnWp0+fRBkqo0R/ba+//roFBARYhQoVLFOmTBYYGGjbt2+P8fqvXr1qEyZMsOTJk9u+ffsedMke99lnn5nL5bJChQrF6CLdvn17y5o1q3322Wd24cIFt3GJdQfV77//bv7+/ta2bVu35REVvL/99lu3nlNmZr/++quVKFHC/vzzz3ipOb4tXLjQypQp43T93b9/v40YMcKWL19uISEhZnbjCFz58uUJUP/frb4/bdq0sVq1alnKlCnt008/dYafOHHCKleubLNmzbrt8xOiYcOGWYsWLSxr1qzWtWtX53t17do1a9eunQ0fPtzCwsIS1Wu+V61atbIpU6bY8ePHY+ygWLZsmS1evDieK3ywIiIi7Omnn7bt27fbyZMnLWvWrNa5c2dn/LJly5z1cmK5HgChGw9M9A3i6dOnW79+/axJkyb2888/O+frnjp1yrJly2aVK1eONXgfPXrUnn/+efvll18eWN3xLWqlfOjQIcuWLZuVKlXqludsRy3jV155xdq0afPAarxfbv5h3rJli+XJk8cOHjwYo03UxnNoaKiVL18+UewFvTk0Rt+58PXXX1uuXLmsRo0aMcbfbhqJzQcffGABAQHOOmD+/PnmcrmscuXKtn37dufzEf2zVLlyZRs1alS81Hs/xfbePvfcc04XxZt7v0R1r//mm28eVIkPVGwb8gsXLrRixYrZSy+95Ba8a9asaTly5LDly5e7LccxY8ZYkiRJnCtyP2q2bNliderUsWeeeSbGRv+///5rJ0+etHr16lnZsmUT/JHZ+yH6Z+fs2bPO9WXMzGbOnGk5c+a0evXqOcNCQkKsTp06VrVq1QS7/MLDw916zEQ/zWDZsmWWPXt2K1u2rBOQwsLCbODAgZYrVy47dOhQvNT8MImIiLDIyEjr1KmTValSxfLkyeN2iuTly5etdevWNnz48ETbA+lmUZ+np556yjp16mT58uWzLl26OL9h//zzjz333HOJ7vx2QjceuNdff938/f2tU6dOVq9ePcuWLZtNmjTJTpw4YWY3gneuXLmsYMGCsR59uPnWQInN7ULT77//bn5+flavXr3b/pi1bt3aypcvb//++2+C2sMcVeu6detsy5Yttm7dOsuWLZvbxnNUmzVr1jjn/SQ2o0aNsueff96eeuopmzp1qh05csTMzL7++msrUKCA1apVy2mb2K9SvmrVKudqvxcuXLCuXbs65yv/73//Mz8/P/vggw8sb968VrlyZfvll19ifObLli1rgwcPftCle8zNXagDAwMtS5YstmbNmhgb9u+8806C3diPq6gjslG++OILK1y4sL300ku2bds2Z3jJkiWtQYMGzt+hoaE2a9Ys58Jzid2tflu2b99u9erVsxo1ajhHvCMiImzWrFlWuXJle+qpp5z1TGL/LN3K3Llz3da1b775ppUsWdLSp09vzZs3ty+//NLM/u/q5Y8//rg1atTIypUrZyVLlkyQy+/mnTBLly61MmXKWJEiRaxGjRrOxdI+/vhjy507t1WpUsVefPFFe/755y1DhgyJpvfZ3QgPD3e+Z6dOnbIrV67Y2bNnzczs+PHjli9fPsuePbvTUzMiIsIGDhxoOXPmtAMHDsRb3Z4UERHhLJOrV686OyHMbqyrM2XK5NaLz+zG96tgwYIx7qCQ0BG68UB98sknlitXLrer67pcLsuRI4d98MEHzl7jkydPWsOGDRPUD9T9EH2j6NNPP7U333zTOnXqZPv27XP2Lu/du9fSpk1r9evXj/Xo7qFDh+yZZ55JUL0Booekb7/91jk6d+jQIcucObP16NEjxs6WXr16Wc+ePRPcjoXYRH/fBw8ebOnTp3euEJw+fXpr0aKF836uWLHCihQpYqVKlYqvch+YDRs2mMvlsjJlytjcuXPN7MY9PIODg+3XX3+1vHnzOqcezJ4921wulxUpUsTtQoNbtmwxHx+fRHNP6rvpQh1dYlqXbtq0yXmPx40bZz179oyxcbZw4ULLlCmTtW7d2i143xw8E/q6417873//i3H17G3btln9+vWtcuXKzoUHN27caJMnT06UF967G+vXrzeXy2Vvvvmmmd24ZWfmzJktKCjIZs2aZVWqVLHy5cvbxx9/bGZmq1evttdee8369Olj48ePT5DL7/Dhw+ZyuaxRo0ZmZrZ161bz8fGxN954wz788EN75plnrHDhwjZ+/Hgzu7EjcMiQIdawYUMbPny42/26HwVffPGF2867//3vf1aiRAkrUKCAVahQwTliu3r1avPz87MyZcpYYGCgNWrUKNHuoNi6daudPn3a+fvLL7+0xo0bW4UKFWzw4MHOjuM333zTMmTIYK1bt7Y333zT2rZta2nTpk2Uy4TQjQfm2rVrFhQUZJMnTzazG3tR06ZNa7NmzbLevXtbqlSpbNy4cXbs2DG35yWmjcW4ev311y1z5szWqlUrq1ChguXLl88+/fRT++eff8zsRvBOnz69VahQIcYFgMLDw2NcNCmh+Pvvv2369On27rvvOsMWL15sSZIksS5duth3331nv/76q/Xv39/8/PwS3cVGjh49am+88YatXbvWGbZq1SorXbq0tWvXzq5cuWLXrl2zRYsWWfPmzRN9V/KlS5eay+Wyp59+2urXr2+ff/65M27ixIlWvXp150f9s88+sx49elizZs3c1hnnz59P0F2H70cX6sTk8OHDVq5cOatfv76dPHnSPv30U8uQIYMNGDDA6RESZciQIebn52dNmjSxPXv2OMMftd+UqM9QRESE/fHHH1aoUCFr2LBhjNvw7Nixw/z9/a1ChQpu3zWzR2+Z3WzevHnm7e1tQ4cOtXfffdfpbWN245ztLl262JNPPnnLoJDQll9kZKStWrXK/P39rXnz5vbVV1/F6C3Uq1cvK1SokNvv1aNoz549VqpUKatfv74dPHjQ/vzzT0udOrW99957Nn78eOvfv7+5XC5nu+bYsWPWv39/69atm7333nuJ8gj3mjVrzNfX18aOHWuhoaG2adMm8/b2tr59+1rr1q2tZs2aljt3bmfn34IFC6xixYpWq1Yt69SpU6LbtotC6MYDtWfPHjtx4oQdPnzYHn/8cRs7dqyZ3QgbadKksbRp0zpdSR/FIxBmN853z5kzp7PX9McffzSXy2X58+e36dOnO+e/79q1y2rVqpVoNq6PHj1qLpfLfH197b333nMbt2rVKsuXL59ly5bN8uXLZ8WKFUt0XUKXLVtmLpfLMmfOHGMj5ptvvjFvb2/7/vvvzcz9iElief9vpXXr1lalShVr1KiRVa1a1bm9yoABA6xAgQJ28uRJCwkJsXr16jk79MwS3kbundxrF+rE6MMPP7Rq1apZ06ZN7dKlS7ZgwQLLkiWLvf76625HvMeNG2dVqlSxtm3bJvrvSVxELYMVK1ZYpUqVrHHjxvbDDz+4taldu7blzp3bXn755fgo8aE2Z84cS5YsmblcLucIb9R2yj///GO5cuWyIUOGxGeJ91VkZKStXr3aMmfObF5eXs55yNF/f6pUqWJ169aNrxIfGnPmzLEaNWpYkyZNbNCgQda3b1+38Z988om5XC63nTWJXe/evS1v3rw2ZcoUe+WVV+ydd95xxu3evdu6d+9ujz32mP38889uz0tsv93REbrhcRMnTnS6ZUVZt26dFS1a1OnyuW3bNuvRo4d98MEHifoLdydXr161sWPH2pQpU8zsRheltGnT2ieffGItWrSwDBky2IcffminTp1ye15i2aAMCgoyb29va9++vXPOU9RGzalTp2zfvn22Y8cOO3PmTHyWeV/cfOX548ePW48ePczlctnMmTPNzH3jpmjRojZmzJgHX2g8ibot2pw5c6xTp072008/WaNGjZzur6dOnbKsWbNa1qxZ7bHHHrPixYsnqvPb72cX6sQi+o7YGTNmWMWKFa1p06Z28eJFmz9/vmXNmtVee+0127Jli4WFhVmjRo1s0aJFbkd6HyXRX+/8+fOtTp06znfkm2++sfLly9sLL7zgBO8rV65Yhw4dbOHChY/csopNbDv+Fy9ebMmTJ7dmzZpZSEiIW5sWLVpY69atH2SJHhceHm5r1qyx/PnzW/ny5Z2rSEdtp7333ntWvnz5RLXuvRvRvydz58612rVrW86cOa1Dhw5m9n+3CzMz69atm9WqVcsuXrzoDEuMB5eib8P36dPH8ufPb/nz549xF5pdu3ZZlSpVnO2axLxMohC64VGXLl1yLpwW/ejl//73P8uUKZMtWLDAdu3aZfXr17d27do54x+V4B3bymXHjh128uRJO3TokBUtWtTGjRtnZjfO5UyRIoX5+/vb0qVLb/n8hG7atGnmcrls1KhRifL1md3YAG7fvr3t37/f7Vz1kydPWps2bSxFihRuR7tDQkLsscces6CgoPgo94H57rvvnPMio5w4ccKyZctmn376qZ08edIaNWpklSpVsuXLl9u5c+ds4sSJNnXq1AR53uSt0IX61m4XvBctWmTFixe3LFmyWIECBaxo0aLO5yGxrktuJXoYWLt2rXXq1MmSJEliHTt2dAveVapUsXLlylmbNm2sWrVqVqZMmRg7BB9F0V/7zbcrmjdvniVNmtRefvllZwf4tWvXrESJEtavX78HWuf9Ftv3JOqId4YMGaxRo0Z2+fJlp13r1q2tRo0azk7SR1H0de28efOsZMmSFhAQYDt27DCz/1umw4YNsyeeeCJR/EbdSfSdMAMHDjSXy2VNmjRxO8fbzKxhw4ZWp06dB11evCF0476K7Uf6+PHjNnz4cMuePbvbubqNGze2dOnSWY4cOaxMmTKP7J5Ssxu9AaK6q0X55ptv7PHHH3cuSPLjjz9at27dbOjQoQl+gzrqR2j37t22du1aW7Jkidv4SZMmmcvlstGjRye6jeWQkBDLmzevZcqUyYoXL24dOnRwuy3GlStXrHnz5pY8eXLr06ePjRo1yurVq2fFihVL1D/W3333nXMv+sDAQJs2bZpza7z58+db/fr17dKlS/bbb79Z48aNrUqVKs7F1aIk9O9FdHShvrVbBe9z587ZgQMHbN68eRYUFOR8XxLT5+Ju9e/f30qXLu2cc5wlSxZr1qyZ83u7efNme+utt6xWrVrWvn17Z/ij8lm6kzFjxljTpk2tVatWtnv3brceOEmTJrWyZctaq1atrEGDBla8ePEEvY6O+l59//33NmTIEGvdurUtX77c2dG3atUqy5Ahg5UuXdpatGhhffr0sdSpUzvh8lETtbxu3naNOj+5bt26bhfw7N69u1WuXNntlmuJza2211599VULCAiwMWPGuPVUbNq0qdt6J7EjdMMjdu3a5fb3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\n"},"metadata":{}}],"source":["import calendar\n","\n","# Convert month numbers to month names\n","df[\"month\"] = df[\"month\"].apply(lambda x: calendar.month_name[x])\n","\n","# Group by month and sum the energy values\n","monthly_sum = df.groupby(\"month\").sum().reindex(calendar.month_name[1:])\n","\n","# Plotting the bar graph\n","plt.figure(figsize=(10, 6))\n","bar_width = 0.35\n","months = monthly_sum.index\n","index = range(len(months))\n","\n","plt.bar(index, monthly_sum[\"thin_film_energy\"], bar_width, label=\"Thin Film Energy\")\n","plt.bar([i + bar_width for i in index], monthly_sum[\"polycrystalline_energy\"], bar_width, label=\"Polycrystalline Energy\")\n","\n","plt.xlabel(\"Month\")\n","plt.ylabel(\"Energy\")\n","plt.title(\"Monthly Energy Output for Thin Film and Polycrystalline\")\n","plt.xticks([i + bar_width / 2 for i in index], months, rotation=45)\n","plt.legend()\n","\n","plt.tight_layout()\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":477},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1721972417547,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"NZzS5iMNahAU","outputId":"f24d4f63-9282-490b-bb2d-a5dbbc3cf106"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           week_number  day_of_year    day  hour  minute  \\\n","month                                                      \n","January           2040        11904  11904  8556   22320   \n","February          4656        30576   9744  7728   20160   \n","March             8280        55800  11904  8556   22320   \n","April            11160        75960  11160  8280   21600   \n","May              14784       101184  11904  8556   22320   \n","June             17424       119880  11160  8280   21600   \n","July             21264       146568  11904  8556   22320   \n","August           24552       169632  11904  8556   22320   \n","September        26880       186120  11160  8280   21600   \n","October          31056       215016  11904  8556   22320   \n","November         33168       230040  11160  8280   21600   \n","December         37488       260400  11904  8556   22320   \n","\n","           global_horizon_irradiation  direct_normal_irradiation  \\\n","month                                                              \n","January                        110080                     138530   \n","February                       127199                     128574   \n","March                          177980                     164058   \n","April                          185308                     135650   \n","May                            217075                     154292   \n","June                           235577                     181396   \n","July                           240770                     191725   \n","August                         225101                     182911   \n","September                      194980                     177167   \n","October                        159084                     156623   \n","November                       110797                     123131   \n","December                       101396                     123078   \n","\n","           diffuse_horizonal_irradiation  sun_azimuth_angle  \\\n","month                                                         \n","January                            41889              637.8   \n","February                           53593             -277.1   \n","March                              69468              633.8   \n","April                              85305             2131.2   \n","May                                97335            -2144.0   \n","June                               96545             2125.6   \n","July                               94717             1244.8   \n","August                             89125             1544.8   \n","September                          73381             -769.9   \n","October                            64133             -597.4   \n","November                           46991             -607.1   \n","December                           43786             -243.8   \n","\n","           sun_elevation_angle  air_temp  relative_humidity  wind_speed  \\\n","month                                                                     \n","January               -10020.7    8402.1            32618.4      2708.8   \n","February               -5740.8   10133.0            21091.0      2415.8   \n","March                   -767.7   15734.2            13593.4      2514.7   \n","April                   4718.5   19341.3            14701.6      3085.6   \n","May                     9247.7   23719.4             8926.5      2790.5   \n","June                   10822.3   25458.8             6399.8      3748.0   \n","July                   10340.2   27581.4             6981.2      3331.5   \n","August                  6833.0   27947.9             7075.8      3114.6   \n","September               1460.9   24257.3             7135.9      2952.2   \n","October                -4431.5   20204.3            18559.7      2795.3   \n","November               -8666.3   13549.9            23712.4      2582.2   \n","December              -11065.5   10035.5            27448.8      2618.3   \n","\n","           wind_direction  atmospheric_pressure  wet_bulb_temperature  \\\n","month                                                                   \n","January            143187              738130.7                5124.3   \n","February           117508              664720.4                5789.3   \n","March              131419              736009.9                8082.0   \n","April              130849              708645.2               11431.4   \n","May                131368              731003.7               13076.5   \n","June               104606              703545.6               13751.1   \n","July               118639              724364.1               15579.8   \n","August             106097              725176.7               16000.4   \n","September           90972              704978.6               12989.5   \n","October            143210              734574.5               12956.0   \n","November           124204              713793.2                8408.4   \n","December           130544              738753.7                5986.8   \n","\n","           thin_film_energy  polycrystalline_energy  month_numeric  \n","month                                                               \n","January       661380.000000           738080.571429            0.0  \n","February      733910.285714           799868.000000            0.0  \n","March         814108.000000           884132.000000            0.0  \n","April         717412.000000           746313.428571            0.0  \n","May           730235.142857           727484.857143            0.0  \n","June          780312.904762           810742.571429            0.0  \n","July          831851.142857           899507.857143            0.0  \n","August        802746.000000           639300.000000            0.0  \n","September     773165.428571           820441.285714            0.0  \n","October       694502.000000           755712.523810            0.0  \n","November      500121.428571           556816.285714            0.0  \n","December      551321.142857           614308.000000            0.0  "],"text/html":["\n","  <div id=\"df-4371625c-3b78-457d-9eec-47d7c8d0360c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>week_number</th>\n","      <th>day_of_year</th>\n","      <th>day</th>\n","      <th>hour</th>\n","      <th>minute</th>\n","      <th>global_horizon_irradiation</th>\n","      <th>direct_normal_irradiation</th>\n","      <th>diffuse_horizonal_irradiation</th>\n","      <th>sun_azimuth_angle</th>\n","      <th>sun_elevation_angle</th>\n","      <th>air_temp</th>\n","      <th>relative_humidity</th>\n","      <th>wind_speed</th>\n","      <th>wind_direction</th>\n","      <th>atmospheric_pressure</th>\n","      <th>wet_bulb_temperature</th>\n","      <th>thin_film_energy</th>\n","      <th>polycrystalline_energy</th>\n","      <th>month_numeric</th>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>January</th>\n","      <td>2040</td>\n","      <td>11904</td>\n","      <td>11904</td>\n","      <td>8556</td>\n","      <td>22320</td>\n","      <td>110080</td>\n","      <td>138530</td>\n","      <td>41889</td>\n","      <td>637.8</td>\n","      <td>-10020.7</td>\n","      <td>8402.1</td>\n","      <td>32618.4</td>\n","      <td>2708.8</td>\n","      <td>143187</td>\n","      <td>738130.7</td>\n","      <td>5124.3</td>\n","      <td>661380.000000</td>\n","      <td>738080.571429</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>February</th>\n","      <td>4656</td>\n","      <td>30576</td>\n","      <td>9744</td>\n","      <td>7728</td>\n","      <td>20160</td>\n","      <td>127199</td>\n","      <td>128574</td>\n","      <td>53593</td>\n","      <td>-277.1</td>\n","      <td>-5740.8</td>\n","      <td>10133.0</td>\n","      <td>21091.0</td>\n","      <td>2415.8</td>\n","      <td>117508</td>\n","      <td>664720.4</td>\n","      <td>5789.3</td>\n","      <td>733910.285714</td>\n","      <td>799868.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>March</th>\n","      <td>8280</td>\n","      <td>55800</td>\n","      <td>11904</td>\n","      <td>8556</td>\n","      <td>22320</td>\n","      <td>177980</td>\n","      <td>164058</td>\n","      <td>69468</td>\n","      <td>633.8</td>\n","      <td>-767.7</td>\n","      <td>15734.2</td>\n","      <td>13593.4</td>\n","      <td>2514.7</td>\n","      <td>131419</td>\n","      <td>736009.9</td>\n","      <td>8082.0</td>\n","      <td>814108.000000</td>\n","      <td>884132.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>April</th>\n","      <td>11160</td>\n","      <td>75960</td>\n","      <td>11160</td>\n","      <td>8280</td>\n","      <td>21600</td>\n","      <td>185308</td>\n","      <td>135650</td>\n","      <td>85305</td>\n","      <td>2131.2</td>\n","      <td>4718.5</td>\n","      <td>19341.3</td>\n","      <td>14701.6</td>\n","      <td>3085.6</td>\n","      <td>130849</td>\n","      <td>708645.2</td>\n","      <td>11431.4</td>\n","      <td>717412.000000</td>\n","      <td>746313.428571</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>May</th>\n","      <td>14784</td>\n","      <td>101184</td>\n","      <td>11904</td>\n","      <td>8556</td>\n","      <td>22320</td>\n","      <td>217075</td>\n","      <td>154292</td>\n","      <td>97335</td>\n","      <td>-2144.0</td>\n","      <td>9247.7</td>\n","      <td>23719.4</td>\n","      <td>8926.5</td>\n","      <td>2790.5</td>\n","      <td>131368</td>\n","      <td>731003.7</td>\n","      <td>13076.5</td>\n","      <td>730235.142857</td>\n","      <td>727484.857143</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>June</th>\n","      <td>17424</td>\n","      <td>119880</td>\n","      <td>11160</td>\n","      <td>8280</td>\n","      <td>21600</td>\n","      <td>235577</td>\n","      <td>181396</td>\n","      <td>96545</td>\n","      <td>2125.6</td>\n","      <td>10822.3</td>\n","      <td>25458.8</td>\n","      <td>6399.8</td>\n","      <td>3748.0</td>\n","      <td>104606</td>\n","      <td>703545.6</td>\n","      <td>13751.1</td>\n","      <td>780312.904762</td>\n","      <td>810742.571429</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>July</th>\n","      <td>21264</td>\n","      <td>146568</td>\n","      <td>11904</td>\n","      <td>8556</td>\n","      <td>22320</td>\n","      <td>240770</td>\n","      <td>191725</td>\n","      <td>94717</td>\n","      <td>1244.8</td>\n","      <td>10340.2</td>\n","      <td>27581.4</td>\n","      <td>6981.2</td>\n","      <td>3331.5</td>\n","      <td>118639</td>\n","      <td>724364.1</td>\n","      <td>15579.8</td>\n","      <td>831851.142857</td>\n","      <td>899507.857143</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>August</th>\n","      <td>24552</td>\n","      <td>169632</td>\n","      <td>11904</td>\n","      <td>8556</td>\n","      <td>22320</td>\n","      <td>225101</td>\n","      <td>182911</td>\n","      <td>89125</td>\n","      <td>1544.8</td>\n","      <td>6833.0</td>\n","      <td>27947.9</td>\n","      <td>7075.8</td>\n","      <td>3114.6</td>\n","      <td>106097</td>\n","      <td>725176.7</td>\n","      <td>16000.4</td>\n","      <td>802746.000000</td>\n","      <td>639300.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>September</th>\n","      <td>26880</td>\n","      <td>186120</td>\n","      <td>11160</td>\n","      <td>8280</td>\n","      <td>21600</td>\n","      <td>194980</td>\n","      <td>177167</td>\n","      <td>73381</td>\n","      <td>-769.9</td>\n","      <td>1460.9</td>\n","      <td>24257.3</td>\n","      <td>7135.9</td>\n","      <td>2952.2</td>\n","      <td>90972</td>\n","      <td>704978.6</td>\n","      <td>12989.5</td>\n","      <td>773165.428571</td>\n","      <td>820441.285714</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>October</th>\n","      <td>31056</td>\n","      <td>215016</td>\n","      <td>11904</td>\n","      <td>8556</td>\n","      <td>22320</td>\n","      <td>159084</td>\n","      <td>156623</td>\n","      <td>64133</td>\n","      <td>-597.4</td>\n","      <td>-4431.5</td>\n","      <td>20204.3</td>\n","      <td>18559.7</td>\n","      <td>2795.3</td>\n","      <td>143210</td>\n","      <td>734574.5</td>\n","      <td>12956.0</td>\n","      <td>694502.000000</td>\n","      <td>755712.523810</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>November</th>\n","      <td>33168</td>\n","      <td>230040</td>\n","      <td>11160</td>\n","      <td>8280</td>\n","      <td>21600</td>\n","      <td>110797</td>\n","      <td>123131</td>\n","      <td>46991</td>\n","      <td>-607.1</td>\n","      <td>-8666.3</td>\n","      <td>13549.9</td>\n","      <td>23712.4</td>\n","      <td>2582.2</td>\n","      <td>124204</td>\n","      <td>713793.2</td>\n","      <td>8408.4</td>\n","      <td>500121.428571</td>\n","      <td>556816.285714</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>December</th>\n","      <td>37488</td>\n","      <td>260400</td>\n","      <td>11904</td>\n","      <td>8556</td>\n","      <td>22320</td>\n","      <td>101396</td>\n","      <td>123078</td>\n","      <td>43786</td>\n","      <td>-243.8</td>\n","      <td>-11065.5</td>\n","      <td>10035.5</td>\n","      <td>27448.8</td>\n","      <td>2618.3</td>\n","      <td>130544</td>\n","      <td>738753.7</td>\n","      <td>5986.8</td>\n","      <td>551321.142857</td>\n","      <td>614308.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4371625c-3b78-457d-9eec-47d7c8d0360c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4371625c-3b78-457d-9eec-47d7c8d0360c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4371625c-3b78-457d-9eec-47d7c8d0360c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-43d03c4b-3778-432d-8d59-e080147fbb2c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-43d03c4b-3778-432d-8d59-e080147fbb2c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-43d03c4b-3778-432d-8d59-e080147fbb2c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_407b2e65-818e-48ad-a17d-1612c923861e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('monthly_sum')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_407b2e65-818e-48ad-a17d-1612c923861e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('monthly_sum');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"monthly_sum","summary":"{\n  \"name\": \"monthly_sum\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"November\",\n          \"October\",\n          \"January\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11576,\n        \"min\": 2040,\n        \"max\": 37488,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          33168,\n          31056,\n          2040\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day_of_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 81055,\n        \"min\": 11904,\n        \"max\": 260400,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          230040,\n          215016,\n          11904\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          11904,\n          9744,\n          11160\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hour\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8556,\n          7728,\n          8280\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"minute\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          22320,\n          20160,\n          21600\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"global_horizon_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51402,\n        \"min\": 101396,\n        \"max\": 240770,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          110797,\n          159084,\n          110080\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"direct_normal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24824,\n        \"min\": 123078,\n        \"max\": 191725,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          123131,\n          156623,\n          138530\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diffuse_horizonal_irradiation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21240,\n        \"min\": 41889,\n        \"max\": 97335,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          46991,\n          64133,\n          41889\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_azimuth_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1304.8176483243885,\n        \"min\": -2144.0,\n        \"max\": 2131.2,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -607.0999999999999,\n          -597.4000000000001,\n          637.8000000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sun_elevation_angle\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8152.957761055837,\n        \"min\": -11065.5,\n        \"max\": 10822.3,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -8666.3,\n          -4431.5,\n          -10020.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"air_temp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7124.528267951032,\n        \"min\": 8402.1,\n        \"max\": 27947.9,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          13549.9,\n          20204.3,\n          8402.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"relative_humidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8981.043471107589,\n        \"min\": 6399.8,\n        \"max\": 32618.4,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          23712.4,\n          18559.7,\n          32618.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 382.52708311723734,\n        \"min\": 2415.8,\n        \"max\": 3748.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          2582.2,\n          2795.3,\n          2708.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wind_direction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15882,\n        \"min\": 90972,\n        \"max\": 143210,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          124204,\n          143210,\n          143187\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"atmospheric_pressure\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21349.06933557944,\n        \"min\": 664720.4,\n        \"max\": 738753.7,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          713793.2,\n          734574.5,\n          738130.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"wet_bulb_temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3898.7508601240706,\n        \"min\": 5124.3,\n        \"max\": 16000.4,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          8408.4,\n          12956.0,\n          5124.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"thin_film_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 102544.49234468827,\n        \"min\": 500121.4285714286,\n        \"max\": 831851.1428571428,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          500121.4285714286,\n          694502.0,\n          661380.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"polycrystalline_energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104516.20037813843,\n        \"min\": 556816.2857142857,\n        \"max\": 899507.8571428572,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          556816.2857142857,\n          755712.5238095238,\n          738080.5714285715\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month_numeric\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":71}],"source":["monthly_sum"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4FApALHla-pU"},"outputs":[],"source":["monthly_sum.reset_index(inplace=True)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1721972417547,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"041gN-Aba_ve","outputId":"109ff337-45e5-49e7-e547-116eb45b18b9"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 12 entries, 0 to 11\n","Data columns (total 20 columns):\n"," #   Column                         Non-Null Count  Dtype  \n","---  ------                         --------------  -----  \n"," 0   month                          12 non-null     object \n"," 1   week_number                    12 non-null     int64  \n"," 2   day_of_year                    12 non-null     int64  \n"," 3   day                            12 non-null     int32  \n"," 4   hour                           12 non-null     int32  \n"," 5   minute                         12 non-null     int32  \n"," 6   global_horizon_irradiation     12 non-null     int64  \n"," 7   direct_normal_irradiation      12 non-null     int64  \n"," 8   diffuse_horizonal_irradiation  12 non-null     int64  \n"," 9   sun_azimuth_angle              12 non-null     float64\n"," 10  sun_elevation_angle            12 non-null     float64\n"," 11  air_temp                       12 non-null     float64\n"," 12  relative_humidity              12 non-null     float64\n"," 13  wind_speed                     12 non-null     float64\n"," 14  wind_direction                 12 non-null     int64  \n"," 15  atmospheric_pressure           12 non-null     float64\n"," 16  wet_bulb_temperature           12 non-null     float64\n"," 17  thin_film_energy               12 non-null     float64\n"," 18  polycrystalline_energy         12 non-null     float64\n"," 19  month_numeric                  12 non-null     float64\n","dtypes: float64(10), int32(3), int64(6), object(1)\n","memory usage: 1.9+ KB\n"]}],"source":["monthly_sum.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X-dfoeHXaqVl"},"outputs":[],"source":["monthly_sum_excel = monthly_sum[[\"month\",\"thin_film_energy\",\"polycrystalline_energy\"]]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mUVNWAL9bHSd"},"outputs":[],"source":["monthly_sum_excel.to_excel(\"monthly_sum.xlsx\", index=False)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":614},"executionInfo":{"elapsed":1248,"status":"ok","timestamp":1721972418792,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"Rf7zKTmTzUcn","outputId":"c156d913-d780-442e-8132-4d30b796d1c4"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Summing up the energy values by month\n","df_sum = df.groupby(\"month\")[[\"thin_film_energy\", \"polycrystalline_energy\"]].sum().reset_index()\n","\n","# Plotting the data\n","plt.figure(figsize=(10, 6))\n","plt.plot(df_sum[\"month\"], df_sum[\"thin_film_energy\"], marker='o', label=\"Thin Film Energy\")\n","plt.plot(df_sum[\"month\"], df_sum[\"polycrystalline_energy\"], marker='o', label=\"Polycrystalline Energy\")\n","\n","plt.xlabel(\"Month\")\n","plt.ylabel(\"Energy (sum)\")\n","plt.title(\"Monthly Sum of Thin Film and Polycrystalline Energy\")\n","plt.xticks([i + bar_width / 2 for i in index], months, rotation=45)\n","plt.legend()\n","plt.grid(True)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1721972418792,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"DpoQDrM5zxM1","outputId":"5470b6ae-f02e-4783-bd06-dd622061a107"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","df[\"year\"] = 2022\n","\n","# Assuming your dataframe 'df' has columns 'year', 'thin_film_energy', and 'polycrystalline_energy'\n","\n","# Summing up the energy values by year\n","df_sum = df.groupby(\"year\")[[\"thin_film_energy\", \"polycrystalline_energy\"]].sum().reset_index()\n","\n","# Plotting the data\n","fig, ax = plt.subplots(figsize=(10, 6))\n","\n","# Bar width\n","bar_width = 0.35\n","\n","# Positions of the bars on the x-axis\n","r1 = range(len(df_sum))\n","r2 = [x + bar_width for x in r1]\n","\n","# Creating bar plots\n","ax.bar(r1, df_sum[\"thin_film_energy\"], color='b', width=bar_width, edgecolor='grey', label='Thin Film Energy')\n","ax.bar(r2, df_sum[\"polycrystalline_energy\"], color='g', width=bar_width, edgecolor='grey', label='Polycrystalline Energy')\n","\n","# Adding labels\n","ax.set_xlabel('Year', fontweight='bold')\n","ax.set_ylabel('Energy (sum)', fontweight='bold')\n","ax.set_title('Total Yearly Energy for Thin Film and Polycrystalline')\n","ax.set_xticks([r + bar_width/2 for r in range(len(df_sum))])\n","ax.set_xticklabels(df_sum['year'])\n","\n","# Adding legend\n","ax.legend()\n","\n","plt.show()\n"]},{"cell_type":"markdown","source":["# First Testing"],"metadata":{"id":"Oc8j1WdTCrtf"}},{"cell_type":"code","source":["df = df.dropna()\n"],"metadata":{"id":"4rDHYVuaG7HH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eVCPul7EG5nl","executionInfo":{"status":"ok","timestamp":1722099186704,"user_tz":-180,"elapsed":428,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"a483955f-a14f-4d68-b6e9-07a40f90f791"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 8728 entries, 0 to 8759\n","Data columns (total 19 columns):\n"," #   Column                         Non-Null Count  Dtype  \n","---  ------                         --------------  -----  \n"," 0   week_number                    8728 non-null   int64  \n"," 1   day_of_year                    8728 non-null   int64  \n"," 2   day                            8728 non-null   int32  \n"," 3   month                          8728 non-null   int32  \n"," 4   hour                           8728 non-null   int32  \n"," 5   minute                         8728 non-null   int32  \n"," 6   global_horizon_irradiation     8728 non-null   int64  \n"," 7   direct_normal_irradiation      8728 non-null   int64  \n"," 8   diffuse_horizonal_irradiation  8728 non-null   int64  \n"," 9   sun_azimuth_angle              8728 non-null   float64\n"," 10  sun_elevation_angle            8728 non-null   float64\n"," 11  air_temp                       8728 non-null   float64\n"," 12  relative_humidity              8728 non-null   float64\n"," 13  wind_speed                     8728 non-null   float64\n"," 14  wind_direction                 8728 non-null   int64  \n"," 15  atmospheric_pressure           8728 non-null   float64\n"," 16  wet_bulb_temperature           8728 non-null   float64\n"," 17  thin_film_energy               8728 non-null   float64\n"," 18  polycrystalline_energy         8728 non-null   float64\n","dtypes: float64(9), int32(4), int64(6)\n","memory usage: 1.2 MB\n"]}]},{"cell_type":"markdown","source":["## Split Data"],"metadata":{"id":"gMKZ_U1LCxKZ"}},{"cell_type":"code","source":["# Split the data into train and test based on the month\n","train_df = df.loc[~df['month'].isin([1, 5, 9])]\n","test_df = df.loc[df['month'].isin([1, 5, 9])]\n","\n","# Separate features and targets for target1\n","X_train_film = train_df.iloc[:, :-2]  # All columns except the last two\n","y_train_film = train_df.iloc[:, -2]   # The second to last column\n","\n","X_test_film = test_df.iloc[:, :-2]    # All columns except the last two\n","y_test_film = test_df.iloc[:, -2]     # The second to last column\n","\n","# Separate features and targets for target2\n","X_train_crystal = train_df.iloc[:, :-2]  # All columns except the last two\n","y_train_crystal = train_df.iloc[:, -1]   # The last column\n","\n","X_test_crystal = test_df.iloc[:, :-2]    # All columns except the last two\n","y_test_crystal = test_df.iloc[:, -1]     # The last column"],"metadata":{"id":"DGsNhjA2CyUo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Lazy Predictor"],"metadata":{"id":"3G1PAObMDqy4"}},{"cell_type":"code","source":["!pip install lazypredict"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mPzOfoFID1OW","executionInfo":{"status":"ok","timestamp":1722098740710,"user_tz":-180,"elapsed":4965,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"d98c55d6-cc35-47a2-c892-e3a980ff0b04"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: lazypredict in /usr/local/lib/python3.10/dist-packages (0.2.12)\n","Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from lazypredict) (8.1.7)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from lazypredict) (1.3.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from lazypredict) (2.0.3)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from lazypredict) (4.66.4)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.10/dist-packages (from lazypredict) (1.4.2)\n","Requirement already satisfied: lightgbm in /usr/local/lib/python3.10/dist-packages (from lazypredict) (4.4.0)\n","Requirement already satisfied: xgboost in /usr/local/lib/python3.10/dist-packages (from lazypredict) (2.1.0)\n","Requirement already satisfied: numpy>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from lightgbm->lazypredict) (1.25.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from lightgbm->lazypredict) (1.13.1)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->lazypredict) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->lazypredict) (2024.1)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->lazypredict) (2024.1)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->lazypredict) (3.5.0)\n","Requirement already satisfied: nvidia-nccl-cu12 in /usr/local/lib/python3.10/dist-packages (from xgboost->lazypredict) (2.22.3)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->lazypredict) (1.16.0)\n"]}]},{"cell_type":"markdown","source":["### PC"],"metadata":{"id":"nhtFcp4MD5R7"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error\n","from lazypredict.Supervised import LazyRegressor\n","\n","# Fit all models\n","reg = LazyRegressor(predictions=True)\n","models, predictions = reg.fit(X_train_crystal, X_test_crystal, y_train_crystal, y_test_crystal)\n","# Calculate Mean Absolute Error for each model\n","models['MAE'] = models.apply(lambda row: mean_absolute_error(y_test_crystal, predictions[row.name]), axis=1)\n","\n","# Display the models with MAE\n","print(models)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QDtUeii-D4rh","executionInfo":{"status":"ok","timestamp":1722100193280,"user_tz":-180,"elapsed":48184,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"d6e1d733-2e7a-4fd4-e5a5-a049bb32c4f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 42/42 [00:47<00:00,  1.13s/it]"]},{"output_type":"stream","name":"stdout","text":["[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000356 seconds.\n","You can set `force_row_wise=true` to remove the overhead.\n","And if memory is not enough, you can set `force_col_wise=true`.\n","[LightGBM] [Info] Total Bins 3010\n","[LightGBM] [Info] Number of data points in the train set: 6520, number of used features: 16\n","[LightGBM] [Info] Start training from score 1028.635072\n","                               Adjusted R-Squared  R-Squared      RMSE  \\\n","Model                                                                    \n","RandomForestRegressor                        0.81       0.81    647.83   \n","ExtraTreesRegressor                          0.81       0.81    656.01   \n","HistGradientBoostingRegressor                0.80       0.80    666.98   \n","LGBMRegressor                                0.80       0.80    674.07   \n","BaggingRegressor                             0.80       0.80    676.03   \n","GradientBoostingRegressor                    0.79       0.80    677.97   \n","XGBRegressor                                 0.79       0.79    685.84   \n","MLPRegressor                                 0.72       0.73    785.23   \n","AdaBoostRegressor                            0.72       0.72    793.01   \n","DecisionTreeRegressor                        0.69       0.70    827.66   \n","KNeighborsRegressor                          0.68       0.68    845.43   \n","LassoLarsIC                                  0.67       0.67    855.18   \n","LinearRegression                             0.67       0.67    855.18   \n","TransformedTargetRegressor                   0.67       0.67    855.18   \n","RidgeCV                                      0.67       0.67    861.45   \n","LassoLarsCV                                  0.66       0.67    866.88   \n","LassoCV                                      0.66       0.67    867.17   \n","LarsCV                                       0.66       0.67    867.50   \n","Ridge                                        0.66       0.66    867.62   \n","BayesianRidge                                0.66       0.66    868.85   \n","SGDRegressor                                 0.66       0.66    869.24   \n","LassoLars                                    0.66       0.66    869.98   \n","Lasso                                        0.66       0.66    869.99   \n","OrthogonalMatchingPursuitCV                  0.66       0.66    871.90   \n","ElasticNet                                   0.66       0.66    873.31   \n","ExtraTreeRegressor                           0.65       0.65    884.87   \n","HuberRegressor                               0.64       0.64    893.14   \n","TweedieRegressor                             0.64       0.64    901.51   \n","PassiveAggressiveRegressor                   0.63       0.63    908.43   \n","ElasticNetCV                                 0.62       0.63    915.76   \n","LinearSVR                                    0.62       0.63    917.76   \n","OrthogonalMatchingPursuit                    0.61       0.62    926.71   \n","PoissonRegressor                             0.53       0.54   1019.67   \n","GaussianProcessRegressor                     0.22       0.23   1319.20   \n","NuSVR                                        0.21       0.22   1326.44   \n","KernelRidge                                  0.17       0.18   1360.02   \n","SVR                                          0.04       0.05   1463.19   \n","DummyRegressor                              -0.01      -0.00   1498.95   \n","Lars                                    -48140.78  -47769.96 327615.03   \n","\n","                               Time Taken       MAE  \n","Model                                                \n","RandomForestRegressor                5.62    296.25  \n","ExtraTreesRegressor                  1.98    307.46  \n","HistGradientBoostingRegressor        0.69    310.34  \n","LGBMRegressor                        0.22    308.04  \n","BaggingRegressor                     0.80    308.01  \n","GradientBoostingRegressor            2.19    351.20  \n","XGBRegressor                         0.47    323.91  \n","MLPRegressor                         6.12    463.71  \n","AdaBoostRegressor                    0.35    437.97  \n","DecisionTreeRegressor                0.22    362.84  \n","KNeighborsRegressor                  0.17    435.29  \n","LassoLarsIC                          0.04    580.75  \n","LinearRegression                     0.05    580.75  \n","TransformedTargetRegressor           0.03    580.75  \n","RidgeCV                              0.14    584.63  \n","LassoLarsCV                          0.07    583.68  \n","LassoCV                              0.23    583.49  \n","LarsCV                               0.06    583.36  \n","Ridge                                0.02    588.52  \n","BayesianRidge                        0.05    589.36  \n","SGDRegressor                         0.10    601.94  \n","LassoLars                            0.03    591.95  \n","Lasso                                0.06    591.99  \n","OrthogonalMatchingPursuitCV          0.07    597.46  \n","ElasticNet                           0.04    592.77  \n","ExtraTreeRegressor                   0.18    392.64  \n","HuberRegressor                       0.34    538.86  \n","TweedieRegressor                     0.07    629.91  \n","PassiveAggressiveRegressor           0.08    526.99  \n","ElasticNetCV                         0.61    650.49  \n","LinearSVR                            0.03    522.27  \n","OrthogonalMatchingPursuit            0.04    564.50  \n","PoissonRegressor                     0.16    522.05  \n","GaussianProcessRegressor            14.70    724.10  \n","NuSVR                                2.48   1131.51  \n","KernelRidge                          5.23   1169.45  \n","SVR                                  3.06    851.07  \n","DummyRegressor                       0.06   1289.90  \n","Lars                                 0.03 290694.72  \n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"markdown","source":["### TF"],"metadata":{"id":"L84KsyRRD7Vq"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error\n","from lazypredict.Supervised import LazyRegressor\n","\n","# Fit all models\n","reg = LazyRegressor(predictions=True)\n","models, predictions = reg.fit(X_train_film, X_test_film, y_train_film, y_test_film)\n","# Calculate Mean Absolute Error for each model\n","models['MAE'] = models.apply(lambda row: mean_absolute_error(y_test_crystal, predictions[row.name]), axis=1)\n","\n","# Display the models with MAE\n","print(models)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w7RTK2vKL-r-","executionInfo":{"status":"ok","timestamp":1722100542161,"user_tz":-180,"elapsed":46754,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"6c310045-40be-48af-8d25-0e77a3cc3ad3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 42/42 [00:46<00:00,  1.11s/it]"]},{"output_type":"stream","name":"stdout","text":["[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000363 seconds.\n","You can set `force_row_wise=true` to remove the overhead.\n","And if memory is not enough, you can set `force_col_wise=true`.\n","[LightGBM] [Info] Total Bins 3010\n","[LightGBM] [Info] Number of data points in the train set: 6520, number of used features: 16\n","[LightGBM] [Info] Start training from score 985.626519\n","                               Adjusted R-Squared  R-Squared    RMSE  \\\n","Model                                                                  \n","RandomForestRegressor                        0.81       0.81  608.97   \n","ExtraTreesRegressor                          0.81       0.81  612.28   \n","GradientBoostingRegressor                    0.81       0.81  615.71   \n","HistGradientBoostingRegressor                0.81       0.81  620.16   \n","BaggingRegressor                             0.80       0.80  623.60   \n","XGBRegressor                                 0.80       0.80  635.59   \n","LGBMRegressor                                0.79       0.80  638.70   \n","MLPRegressor                                 0.75       0.75  702.16   \n","KNeighborsRegressor                          0.74       0.75  710.44   \n","AdaBoostRegressor                            0.72       0.72  746.02   \n","TransformedTargetRegressor                   0.70       0.70  775.59   \n","LinearRegression                             0.70       0.70  775.59   \n","LassoLarsIC                                  0.70       0.70  775.59   \n","RidgeCV                                      0.69       0.69  781.11   \n","LassoLarsCV                                  0.69       0.69  787.07   \n","Ridge                                        0.69       0.69  787.14   \n","LassoCV                                      0.69       0.69  787.48   \n","BayesianRidge                                0.69       0.69  788.01   \n","Lasso                                        0.69       0.69  788.44   \n","LassoLars                                    0.69       0.69  788.45   \n","LarsCV                                       0.68       0.69  789.45   \n","SGDRegressor                                 0.68       0.69  791.31   \n","OrthogonalMatchingPursuitCV                  0.68       0.68  796.01   \n","ElasticNet                                   0.68       0.68  796.06   \n","HuberRegressor                               0.67       0.67  810.42   \n","DecisionTreeRegressor                        0.66       0.67  815.59   \n","PassiveAggressiveRegressor                   0.66       0.66  822.50   \n","TweedieRegressor                             0.66       0.66  823.15   \n","LinearSVR                                    0.66       0.66  825.34   \n","ElasticNetCV                                 0.65       0.65  834.95   \n","OrthogonalMatchingPursuit                    0.64       0.64  847.06   \n","ExtraTreeRegressor                           0.58       0.58  914.75   \n","PoissonRegressor                             0.57       0.57  923.19   \n","NuSVR                                        0.24       0.24 1229.23   \n","KernelRidge                                  0.19       0.19 1267.28   \n","SVR                                          0.07       0.07 1358.15   \n","GaussianProcessRegressor                     0.03       0.03 1386.78   \n","DummyRegressor                              -0.01      -0.00 1411.29   \n","Lars                                        -0.51      -0.50 1729.14   \n","\n","                               Time Taken     MAE  \n","Model                                              \n","RandomForestRegressor                5.41  312.77  \n","ExtraTreesRegressor                  2.17  309.93  \n","GradientBoostingRegressor            2.62  342.83  \n","HistGradientBoostingRegressor        0.70  314.52  \n","BaggingRegressor                     0.76  320.34  \n","XGBRegressor                         0.47  345.56  \n","LGBMRegressor                        0.22  320.57  \n","MLPRegressor                         6.21  455.11  \n","KNeighborsRegressor                  0.19  386.06  \n","AdaBoostRegressor                    0.37  462.96  \n","TransformedTargetRegressor           0.03  563.83  \n","LinearRegression                     0.05  563.83  \n","LassoLarsIC                          0.04  563.83  \n","RidgeCV                              0.09  567.61  \n","LassoLarsCV                          0.07  567.41  \n","Ridge                                0.02  571.83  \n","LassoCV                              0.22  567.59  \n","BayesianRidge                        0.22  572.44  \n","Lasso                                0.04  574.92  \n","LassoLars                            0.03  574.93  \n","LarsCV                               0.07  568.68  \n","SGDRegressor                         0.08  575.67  \n","OrthogonalMatchingPursuitCV          0.10  587.72  \n","ElasticNet                           0.05  586.70  \n","HuberRegressor                       0.39  538.05  \n","DecisionTreeRegressor                0.18  381.84  \n","PassiveAggressiveRegressor           0.06  531.48  \n","TweedieRegressor                     0.06  626.49  \n","LinearSVR                            0.07  517.19  \n","ElasticNetCV                         0.38  644.45  \n","OrthogonalMatchingPursuit            0.04  556.34  \n","ExtraTreeRegressor                   0.12  410.80  \n","PoissonRegressor                     0.20  509.24  \n","NuSVR                                3.12 1120.85  \n","KernelRidge                          4.17 1164.33  \n","SVR                                  3.05  852.32  \n","GaussianProcessRegressor            13.82  829.12  \n","DummyRegressor                       0.03 1275.58  \n","Lars                                 0.04 1466.37  \n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"yAkx14CwZqHw"},"source":["# Feature Engineering"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ICuDi04nZrch"},"outputs":[],"source":["import math\n","# Calculate the solar declination angle based on the day of the year\n","df[\"solar_declination\"] = 23.45 * np.sin(np.radians(360 / 365 * (df[\"day_of_year\"] - 81)))\n","\n","# Calculate the solar time as the hour plus the fraction of the hour represented by minutes\n","df[\"solar_time\"] = df[\"hour\"] + (df[\"minute\"] / 60)\n","\n","# Calculate the hour angle, which represents the difference between the solar time and solar noon (12 PM)\n","df[\"hour_angle\"] = 15 * (df[\"solar_time\"] - 12)\n","\n","# Calculate the cosine of the solar zenith angle\n","df[\"cos_theta_z\"] = np.sin(np.radians(29.209900)) * np.sin(np.radians(df[\"solar_declination\"])) + \\\n","                    np.cos(np.radians(29.209900)) * np.cos(np.radians(df['solar_declination'])) * \\\n","                    np.cos(np.radians(df[\"hour_angle\"]))\n","\n","# Ensure the values of cos_theta_z are within the valid range [-1, 1]\n","df[\"cos_theta_z\"] = df[\"cos_theta_z\"].clip(-1, 1)\n","\n","# Calculate the solar zenith angle in degrees\n","df[\"solar_zenith_angle\"] = np.degrees(np.arccos(df[\"cos_theta_z\"]))\n","\n","# Calculate the relative air mass, which is a measure of the path length of sunlight through the atmosphere\n","df[\"relative_air_mass\"] = np.where(df[\"cos_theta_z\"] > 0,\n","                                   1 / (df[\"cos_theta_z\"] + 0.50572 * (96.07995 - df[\"solar_zenith_angle\"])**-1.6364),\n","                                   1)\n","\n","# Calculate the wind components in the U (east-west) direction\n","df[\"wind_u\"] = df[\"wind_speed\"] * np.cos(np.radians(df[\"wind_direction\"]))\n","\n","# Calculate the wind components in the V (north-south) direction\n","df[\"wind_v\"] = df[\"wind_speed\"] * np.sin(np.radians(df[\"wind_direction\"]))\n","\n","# Identify maintenance periods where both energy outputs are zero during the daytime\n","df[\"maintenance\"] = df.apply(lambda row: 1 if row[\"sun_elevation_angle\"] > 0 and 5 <= row[\"hour\"] <= 19 and row[\"thin_film_energy\"] == 0 and row[\"polycrystalline_energy\"] == 0 else 0, axis=1)\n","\n","#-------Abdulrahman Edits--------------#\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1hMVmBjMbJq-"},"outputs":[],"source":["# Reorder columns\n","cols = df.columns.tolist()\n","\n","# Move thin_film_energy and polycrystalline_energy to the end\n","cols.append(cols.pop(cols.index(\"thin_film_energy\")))\n","cols.append(cols.pop(cols.index(\"polycrystalline_energy\")))\n","df = df[cols]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":654,"status":"ok","timestamp":1722100755400,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"},"user_tz":-180},"id":"Rf_2pdCpanDi","outputId":"a620364d-b184-4b6a-a6fc-06c47b4be73e"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 8728 entries, 0 to 8759\n","Data columns (total 28 columns):\n"," #   Column                         Non-Null Count  Dtype  \n","---  ------                         --------------  -----  \n"," 0   week_number                    8728 non-null   int64  \n"," 1   day_of_year                    8728 non-null   int64  \n"," 2   day                            8728 non-null   int32  \n"," 3   month                          8728 non-null   int32  \n"," 4   hour                           8728 non-null   int32  \n"," 5   minute                         8728 non-null   int32  \n"," 6   global_horizon_irradiation     8728 non-null   int64  \n"," 7   direct_normal_irradiation      8728 non-null   int64  \n"," 8   diffuse_horizonal_irradiation  8728 non-null   int64  \n"," 9   sun_azimuth_angle              8728 non-null   float64\n"," 10  sun_elevation_angle            8728 non-null   float64\n"," 11  air_temp                       8728 non-null   float64\n"," 12  relative_humidity              8728 non-null   float64\n"," 13  wind_speed                     8728 non-null   float64\n"," 14  wind_direction                 8728 non-null   int64  \n"," 15  atmospheric_pressure           8728 non-null   float64\n"," 16  wet_bulb_temperature           8728 non-null   float64\n"," 17  solar_declination              8728 non-null   float64\n"," 18  solar_time                     8728 non-null   float64\n"," 19  hour_angle                     8728 non-null   float64\n"," 20  cos_theta_z                    8728 non-null   float64\n"," 21  solar_zenith_angle             8728 non-null   float64\n"," 22  relative_air_mass              8728 non-null   float64\n"," 23  wind_u                         8728 non-null   float64\n"," 24  wind_v                         8728 non-null   float64\n"," 25  maintenance                    8728 non-null   int64  \n"," 26  thin_film_energy               8728 non-null   float64\n"," 27  polycrystalline_energy         8728 non-null   float64\n","dtypes: float64(17), int32(4), int64(7)\n","memory usage: 1.8 MB\n"]}],"source":["df.info()"]},{"cell_type":"markdown","source":["# Second Testing"],"metadata":{"id":"aRDriNjINMEb"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"eNx_lmzOcwHO"},"outputs":[],"source":["# Split the data into train and test based on the month\n","train_df = df.loc[~df['month'].isin([1, 5, 9])]\n","test_df = df.loc[df['month'].isin([1, 5, 9])]\n","\n","# Separate features and targets for target1\n","X_train_film = train_df.iloc[:, :-2]  # All columns except the last two\n","y_train_film = train_df.iloc[:, -2]   # The second to last column\n","\n","X_test_film = test_df.iloc[:, :-2]    # All columns except the last two\n","y_test_film = test_df.iloc[:, -2]     # The second to last column\n","\n","# Separate features and targets for target2\n","X_train_crystal = train_df.iloc[:, :-2]  # All columns except the last two\n","y_train_crystal = train_df.iloc[:, -1]   # The last column\n","\n","X_test_crystal = test_df.iloc[:, :-2]    # All columns except the last two\n","y_test_crystal = test_df.iloc[:, -1]     # The last column"]},{"cell_type":"markdown","source":["## PC"],"metadata":{"id":"fT-yc-UrNb1j"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error\n","from lazypredict.Supervised import LazyRegressor\n","\n","# Fit all models\n","reg = LazyRegressor(predictions=True)\n","models, predictions = reg.fit(X_train_crystal, X_test_crystal, y_train_crystal, y_test_crystal)\n","# Calculate Mean Absolute Error for each model\n","models['MAE'] = models.apply(lambda row: mean_absolute_error(y_test_crystal, predictions[row.name]), axis=1)\n","\n","# Display the models with MAE\n","print(models)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G15RYZcYNghN","executionInfo":{"status":"ok","timestamp":1722100938381,"user_tz":-180,"elapsed":59200,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"6e377999-8775-4bbd-a7e0-43f4fcabc51f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":[" 98%|█████████▊| 41/42 [00:58<00:01,  1.17s/it]"]},{"output_type":"stream","name":"stdout","text":["[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001929 seconds.\n","You can set `force_col_wise=true` to remove the overhead.\n","[LightGBM] [Info] Total Bins 4591\n","[LightGBM] [Info] Number of data points in the train set: 6520, number of used features: 25\n","[LightGBM] [Info] Start training from score 1028.635072\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 42/42 [00:59<00:00,  1.41s/it]"]},{"output_type":"stream","name":"stdout","text":["                               Adjusted R-Squared  R-Squared     RMSE  \\\n","Model                                                                   \n","ExtraTreesRegressor                          0.90       0.90   463.33   \n","RandomForestRegressor                        0.90       0.90   468.15   \n","BaggingRegressor                             0.90       0.90   469.84   \n","HistGradientBoostingRegressor                0.90       0.90   470.95   \n","LGBMRegressor                                0.90       0.90   479.37   \n","GradientBoostingRegressor                    0.89       0.89   491.82   \n","XGBRegressor                                 0.89       0.89   501.45   \n","PoissonRegressor                             0.86       0.86   557.16   \n","MLPRegressor                                 0.85       0.86   569.41   \n","DecisionTreeRegressor                        0.82       0.82   635.10   \n","AdaBoostRegressor                            0.81       0.81   656.22   \n","KNeighborsRegressor                          0.80       0.80   663.23   \n","ExtraTreeRegressor                           0.77       0.77   717.37   \n","LassoLarsCV                                  0.74       0.74   764.97   \n","LassoCV                                      0.74       0.74   764.99   \n","LassoLars                                    0.73       0.74   768.41   \n","Lasso                                        0.73       0.74   768.45   \n","BayesianRidge                                0.73       0.74   770.28   \n","Ridge                                        0.73       0.74   770.82   \n","RidgeCV                                      0.73       0.74   771.34   \n","LassoLarsIC                                  0.73       0.74   771.35   \n","TransformedTargetRegressor                   0.73       0.74   771.50   \n","LinearRegression                             0.73       0.74   771.50   \n","OrthogonalMatchingPursuitCV                  0.73       0.73   773.77   \n","SGDRegressor                                 0.73       0.73   780.96   \n","LarsCV                                       0.71       0.72   796.30   \n","ElasticNet                                   0.71       0.72   798.29   \n","TweedieRegressor                             0.69       0.69   832.07   \n","HuberRegressor                               0.68       0.69   838.05   \n","ElasticNetCV                                 0.68       0.68   846.99   \n","PassiveAggressiveRegressor                   0.67       0.67   855.79   \n","OrthogonalMatchingPursuit                    0.66       0.66   872.03   \n","LinearSVR                                    0.65       0.65   885.78   \n","GaussianProcessRegressor                     0.32       0.33  1231.45   \n","KernelRidge                                  0.30       0.30  1250.90   \n","NuSVR                                        0.22       0.23  1315.30   \n","SVR                                          0.07       0.08  1439.01   \n","DummyRegressor                              -0.01      -0.00  1498.95   \n","Lars                                      -121.22    -119.78 16473.56   \n","\n","                               Time Taken      MAE  \n","Model                                               \n","ExtraTreesRegressor                  2.47   204.20  \n","RandomForestRegressor                7.44   197.50  \n","BaggingRegressor                     0.84   196.89  \n","HistGradientBoostingRegressor        0.94   214.47  \n","LGBMRegressor                        0.34   215.98  \n","GradientBoostingRegressor            4.05   251.43  \n","XGBRegressor                         0.88   238.17  \n","PoissonRegressor                     0.09   271.03  \n","MLPRegressor                         8.15   333.72  \n","DecisionTreeRegressor                0.20   276.29  \n","AdaBoostRegressor                    0.93   369.24  \n","KNeighborsRegressor                  0.22   331.06  \n","ExtraTreeRegressor                   0.06   307.94  \n","LassoLarsCV                          0.09   563.36  \n","LassoCV                              0.32   562.74  \n","LassoLars                            0.04   571.07  \n","Lasso                                0.16   571.16  \n","BayesianRidge                        0.16   573.28  \n","Ridge                                0.03   574.05  \n","RidgeCV                              0.16   575.05  \n","LassoLarsIC                          0.16   574.91  \n","TransformedTargetRegressor           0.05   575.64  \n","LinearRegression                     0.08   575.64  \n","OrthogonalMatchingPursuitCV          0.05   556.82  \n","SGDRegressor                         0.12   591.22  \n","LarsCV                               0.09   547.81  \n","ElasticNet                           0.03   569.88  \n","TweedieRegressor                     0.10   595.74  \n","HuberRegressor                       0.41   533.30  \n","ElasticNetCV                         0.19   607.97  \n","PassiveAggressiveRegressor           0.07   516.49  \n","OrthogonalMatchingPursuit            0.03   571.09  \n","LinearSVR                            0.05   508.64  \n","GaussianProcessRegressor            16.96   667.24  \n","KernelRidge                          4.04  1067.74  \n","NuSVR                                3.33  1120.33  \n","SVR                                  5.32   832.21  \n","DummyRegressor                       0.02  1289.90  \n","Lars                                 0.04 13427.36  \n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"markdown","source":["## TF"],"metadata":{"id":"8zQWzlnsNdOm"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error\n","from lazypredict.Supervised import LazyRegressor\n","\n","# Fit all models\n","reg = LazyRegressor(predictions=True)\n","models, predictions = reg.fit(X_train_film, X_test_film, y_train_film, y_test_film)\n","# Calculate Mean Absolute Error for each model\n","models['MAE'] = models.apply(lambda row: mean_absolute_error(y_test_crystal, predictions[row.name]), axis=1)\n","\n","# Display the models with MAE\n","print(models)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MzQuI6oUNihZ","executionInfo":{"status":"ok","timestamp":1722100997437,"user_tz":-180,"elapsed":59068,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"2f380dea-b00e-4b2f-89f5-ad719f3c426e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":[" 98%|█████████▊| 41/42 [00:58<00:01,  1.69s/it]"]},{"output_type":"stream","name":"stdout","text":["[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000567 seconds.\n","You can set `force_row_wise=true` to remove the overhead.\n","And if memory is not enough, you can set `force_col_wise=true`.\n","[LightGBM] [Info] Total Bins 4591\n","[LightGBM] [Info] Number of data points in the train set: 6520, number of used features: 25\n","[LightGBM] [Info] Start training from score 985.626519\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 42/42 [00:59<00:00,  1.41s/it]"]},{"output_type":"stream","name":"stdout","text":["                               Adjusted R-Squared  R-Squared     RMSE  \\\n","Model                                                                   \n","RandomForestRegressor                        0.91       0.91   417.59   \n","ExtraTreesRegressor                          0.91       0.91   418.89   \n","LGBMRegressor                                0.91       0.91   426.23   \n","HistGradientBoostingRegressor                0.91       0.91   428.23   \n","BaggingRegressor                             0.91       0.91   429.92   \n","GradientBoostingRegressor                    0.91       0.91   431.11   \n","XGBRegressor                                 0.90       0.90   441.75   \n","PoissonRegressor                             0.88       0.89   477.14   \n","MLPRegressor                                 0.88       0.88   484.84   \n","KNeighborsRegressor                          0.88       0.88   490.11   \n","DecisionTreeRegressor                        0.86       0.86   529.66   \n","ExtraTreeRegressor                           0.85       0.85   543.64   \n","AdaBoostRegressor                            0.80       0.80   628.71   \n","LassoCV                                      0.76       0.76   692.39   \n","LassoLarsCV                                  0.76       0.76   693.12   \n","SGDRegressor                                 0.76       0.76   694.29   \n","LassoLars                                    0.75       0.76   694.54   \n","Lasso                                        0.75       0.76   694.54   \n","BayesianRidge                                0.75       0.76   696.94   \n","LassoLarsIC                                  0.75       0.76   697.21   \n","RidgeCV                                      0.75       0.76   697.24   \n","Ridge                                        0.75       0.76   697.24   \n","LinearRegression                             0.75       0.76   697.68   \n","TransformedTargetRegressor                   0.75       0.76   697.68   \n","LarsCV                                       0.75       0.75   707.38   \n","OrthogonalMatchingPursuitCV                  0.75       0.75   707.72   \n","ElasticNet                                   0.73       0.74   725.00   \n","TweedieRegressor                             0.71       0.71   757.94   \n","HuberRegressor                               0.71       0.71   761.34   \n","PassiveAggressiveRegressor                   0.70       0.70   767.98   \n","ElasticNetCV                                 0.70       0.70   770.48   \n","LinearSVR                                    0.69       0.69   787.15   \n","OrthogonalMatchingPursuit                    0.68       0.68   792.14   \n","GaussianProcessRegressor                     0.44       0.45  1046.15   \n","KernelRidge                                  0.32       0.32  1160.95   \n","NuSVR                                        0.25       0.25  1218.17   \n","SVR                                          0.10       0.11  1334.14   \n","DummyRegressor                              -0.01      -0.00  1411.29   \n","Lars                                       -69.90     -69.07 11813.24   \n","\n","                               Time Taken     MAE  \n","Model                                              \n","RandomForestRegressor                8.47  225.34  \n","ExtraTreesRegressor                  3.02  218.03  \n","LGBMRegressor                        0.32  222.42  \n","HistGradientBoostingRegressor        0.59  225.47  \n","BaggingRegressor                     0.83  230.42  \n","GradientBoostingRegressor            3.47  265.24  \n","XGBRegressor                         3.75  251.01  \n","PoissonRegressor                     0.17  261.13  \n","MLPRegressor                         6.67  326.67  \n","KNeighborsRegressor                  0.20  272.44  \n","DecisionTreeRegressor                0.20  254.51  \n","ExtraTreeRegressor                   0.06  253.19  \n","AdaBoostRegressor                    0.82  465.15  \n","LassoCV                              0.33  549.41  \n","LassoLarsCV                          0.09  550.93  \n","SGDRegressor                         0.15  555.22  \n","LassoLars                            0.04  555.22  \n","Lasso                                0.22  555.25  \n","BayesianRidge                        0.16  558.26  \n","LassoLarsIC                          0.06  558.58  \n","RidgeCV                              0.14  558.69  \n","Ridge                                0.04  558.69  \n","LinearRegression                     0.05  559.51  \n","TransformedTargetRegressor           0.04  559.51  \n","LarsCV                               0.09  542.59  \n","OrthogonalMatchingPursuitCV          0.11  553.81  \n","ElasticNet                           0.03  563.79  \n","TweedieRegressor                     0.09  594.06  \n","HuberRegressor                       0.18  531.53  \n","PassiveAggressiveRegressor           0.12  515.41  \n","ElasticNetCV                         0.19  605.33  \n","LinearSVR                            0.08  504.64  \n","OrthogonalMatchingPursuit            0.06  562.41  \n","GaussianProcessRegressor            14.67  629.71  \n","KernelRidge                          5.93 1061.88  \n","NuSVR                                2.99 1110.89  \n","SVR                                  3.79  833.54  \n","DummyRegressor                       0.02 1275.58  \n","Lars                                 0.04 9618.28  \n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"markdown","source":["# Polycrystalline Tuning"],"metadata":{"id":"Zae-Dsn-aqTm"}},{"cell_type":"code","source":["# Split the data into train and test based on the month\n","train_df = df.loc[~df['month'].isin([1, 5, 9])]\n","test_df = df.loc[df['month'].isin([1, 5, 9])]\n","\n","# Separate features and targets for target1\n","X_train_film = train_df.iloc[:, :-2]  # All columns except the last two\n","y_train_film = train_df.iloc[:, -2]   # The second to last column\n","\n","X_test_film = test_df.iloc[:, :-2]    # All columns except the last two\n","y_test_film = test_df.iloc[:, -2]     # The second to last column\n","\n","# Separate features and targets for target2\n","X_train_crystal = train_df.iloc[:, :-2]  # All columns except the last two\n","y_train_crystal = train_df.iloc[:, -1]   # The last column\n","\n","X_test_crystal = test_df.iloc[:, :-2]    # All columns except the last two\n","y_test_crystal = test_df.iloc[:, -1]     # The last column"],"metadata":{"id":"U5jyAFL4avjD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from xgboost import XGBRegressor\n","from sklearn.metrics import mean_absolute_error\n","\n","# Define the objective function\n","def objective(trial):\n","    # Define the search space for hyperparameters\n","    params = {\n","        \"learning_rate\": trial.suggest_float(\"learning_rate\", 0.01, 1.0, log=True),\n","        \"n_estimators\": trial.suggest_int(\"n_estimators\", 50, 200),\n","        \"subsample\": trial.suggest_float(\"subsample\", 0.5, 1.0),\n","        \"max_depth\": trial.suggest_int(\"max_depth\", 3, 20),\n","        \"min_child_weight\": trial.suggest_int(\"min_child_weight\", 1, 10),\n","        \"gamma\": trial.suggest_float(\"gamma\", 0.0, 5.0),\n","        \"colsample_bytree\": trial.suggest_float(\"colsample_bytree\", 0.5, 1.0),\n","        \"reg_alpha\": trial.suggest_float(\"reg_alpha\", 0.0, 5.0),\n","        \"reg_lambda\": trial.suggest_float(\"reg_lambda\", 0.0, 5.0),\n","        \"random_state\": trial.suggest_int(\"random_state\", 0, 10),\n","    }\n","\n","    # Create the regressor with the suggested hyperparameters\n","    xgb_reg = XGBRegressor(**params, objective=\"reg:squarederror\")\n","\n","    # Train the model\n","    xgb_reg.fit(X_train_crystal, y_train_crystal)\n","\n","    # Predict on the validation set\n","    y_pred = xgb_reg.predict(X_test_crystal)\n","\n","    # Calculate and return the mean absolute error\n","    mae = mean_absolute_error(y_test_crystal, y_pred)\n","\n","    return mae"],"metadata":{"id":"k_F-v2q1c_Mz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install optuna"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R5CgnaF3dBC-","executionInfo":{"status":"ok","timestamp":1722104954725,"user_tz":-180,"elapsed":6141,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"b8bd83ab-ad60-4cbe-9c3e-0fa790f206cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting optuna\n","  Downloading optuna-3.6.1-py3-none-any.whl.metadata (17 kB)\n","Collecting alembic>=1.5.0 (from optuna)\n","  Downloading alembic-1.13.2-py3-none-any.whl.metadata (7.4 kB)\n","Collecting colorlog (from optuna)\n","  Downloading colorlog-6.8.2-py3-none-any.whl.metadata (10 kB)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from optuna) (1.25.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from optuna) (24.1)\n","Requirement already satisfied: sqlalchemy>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from optuna) (2.0.31)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from optuna) (4.66.4)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.10/dist-packages (from optuna) (6.0.1)\n","Collecting Mako (from alembic>=1.5.0->optuna)\n","  Downloading Mako-1.3.5-py3-none-any.whl.metadata (2.9 kB)\n","Requirement already satisfied: typing-extensions>=4 in /usr/local/lib/python3.10/dist-packages (from alembic>=1.5.0->optuna) (4.12.2)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from sqlalchemy>=1.3.0->optuna) (3.0.3)\n","Requirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.10/dist-packages (from Mako->alembic>=1.5.0->optuna) (2.1.5)\n","Downloading optuna-3.6.1-py3-none-any.whl (380 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m380.1/380.1 kB\u001b[0m \u001b[31m12.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading alembic-1.13.2-py3-none-any.whl (232 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m233.0/233.0 kB\u001b[0m \u001b[31m18.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading colorlog-6.8.2-py3-none-any.whl (11 kB)\n","Downloading Mako-1.3.5-py3-none-any.whl (78 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m78.6/78.6 kB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: Mako, colorlog, alembic, optuna\n","Successfully installed Mako-1.3.5 alembic-1.13.2 colorlog-6.8.2 optuna-3.6.1\n"]}]},{"cell_type":"code","source":["import optuna"],"metadata":{"id":"wqpuwC5udK7z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["study_1 = optuna.create_study(direction='minimize')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"41ANmViOdGiC","executionInfo":{"status":"ok","timestamp":1722104994285,"user_tz":-180,"elapsed":548,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"c9926bb7-1342-4dc8-b2d2-78f8869186ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[I 2024-07-27 18:29:51,740] A new study created in memory with name: no-name-09742aeb-1c6b-4ed8-9d6d-dc5d755bdea2\n"]}]},{"cell_type":"code","source":["study_1.optimize(objective, n_trials = 500)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lajVMrmCdRn4","executionInfo":{"status":"ok","timestamp":1722106092080,"user_tz":-180,"elapsed":923645,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"a6ffa149-9a9c-4bdd-e444-a1c163014915"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[I 2024-07-27 18:32:50,179] Trial 0 finished with value: 215.57922002205842 and parameters: {'learning_rate': 0.06525443031827086, 'n_estimators': 133, 'subsample': 0.8448397495894391, 'max_depth': 13, 'min_child_weight': 5, 'gamma': 4.762264716508874, 'colsample_bytree': 0.6344810839088075, 'reg_alpha': 1.7438725945954374, 'reg_lambda': 2.811322735012393, 'random_state': 4}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:32:51,926] Trial 1 finished with value: 305.24226794314166 and parameters: {'learning_rate': 0.8359459995791844, 'n_estimators': 199, 'subsample': 0.7335283968906987, 'max_depth': 9, 'min_child_weight': 3, 'gamma': 2.976752239327818, 'colsample_bytree': 0.6644254523758508, 'reg_alpha': 4.154054797389638, 'reg_lambda': 2.025970180972896, 'random_state': 0}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:32:53,871] Trial 2 finished with value: 236.67171108937842 and parameters: {'learning_rate': 0.33154592726178295, 'n_estimators': 108, 'subsample': 0.8115933479280106, 'max_depth': 13, 'min_child_weight': 4, 'gamma': 2.4132310615373203, 'colsample_bytree': 0.6658817065273828, 'reg_alpha': 2.4686899970769445, 'reg_lambda': 2.989707463667611, 'random_state': 3}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:00,655] Trial 3 finished with value: 238.31638544858447 and parameters: {'learning_rate': 0.17140432569614275, 'n_estimators': 132, 'subsample': 0.6280539016566173, 'max_depth': 16, 'min_child_weight': 1, 'gamma': 2.5126614778201377, 'colsample_bytree': 0.6594599003910336, 'reg_alpha': 3.0487637032903137, 'reg_lambda': 4.594748097535006, 'random_state': 10}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:03,427] Trial 4 finished with value: 215.64461326323098 and parameters: {'learning_rate': 0.04487748771974087, 'n_estimators': 125, 'subsample': 0.9867984364999105, 'max_depth': 5, 'min_child_weight': 10, 'gamma': 1.3397330676940715, 'colsample_bytree': 0.9286022779062407, 'reg_alpha': 1.2003906329279497, 'reg_lambda': 2.16557333275436, 'random_state': 1}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:03,675] Trial 5 finished with value: 227.95340625976172 and parameters: {'learning_rate': 0.11179464614364383, 'n_estimators': 122, 'subsample': 0.6939790858065982, 'max_depth': 4, 'min_child_weight': 5, 'gamma': 2.8847238711549927, 'colsample_bytree': 0.6975907045413432, 'reg_alpha': 2.4753934711908707, 'reg_lambda': 3.499071178085233, 'random_state': 10}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:04,544] Trial 6 finished with value: 390.4668629687765 and parameters: {'learning_rate': 0.03192578642864529, 'n_estimators': 52, 'subsample': 0.5711835429286151, 'max_depth': 10, 'min_child_weight': 1, 'gamma': 1.9484599586727906, 'colsample_bytree': 0.7866539262677188, 'reg_alpha': 3.8510396691190225, 'reg_lambda': 2.6897699167711355, 'random_state': 3}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:06,620] Trial 7 finished with value: 216.7641379227094 and parameters: {'learning_rate': 0.18049993029726924, 'n_estimators': 120, 'subsample': 0.7555614956109644, 'max_depth': 11, 'min_child_weight': 3, 'gamma': 2.8808286913422703, 'colsample_bytree': 0.87075251527896, 'reg_alpha': 4.355524332532015, 'reg_lambda': 4.583924919444805, 'random_state': 2}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:19,365] Trial 8 finished with value: 219.61215723818842 and parameters: {'learning_rate': 0.03655125419415382, 'n_estimators': 155, 'subsample': 0.6297557339107825, 'max_depth': 12, 'min_child_weight': 6, 'gamma': 1.536826802855427, 'colsample_bytree': 0.8263842513306118, 'reg_alpha': 4.181425551233382, 'reg_lambda': 3.6634355230157882, 'random_state': 1}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:23,763] Trial 9 finished with value: 275.1668639677687 and parameters: {'learning_rate': 0.5477417015179533, 'n_estimators': 110, 'subsample': 0.5936390463990142, 'max_depth': 18, 'min_child_weight': 8, 'gamma': 1.93788895976106, 'colsample_bytree': 0.6424968367129991, 'reg_alpha': 4.438380744480022, 'reg_lambda': 3.390241088112803, 'random_state': 0}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:24,879] Trial 10 finished with value: 629.626177345497 and parameters: {'learning_rate': 0.01243811427921697, 'n_estimators': 72, 'subsample': 0.868125292079572, 'max_depth': 20, 'min_child_weight': 7, 'gamma': 4.593912631401699, 'colsample_bytree': 0.5085088705265313, 'reg_alpha': 0.16274693784577465, 'reg_lambda': 0.42979941674716926, 'random_state': 6}. Best is trial 0 with value: 215.57922002205842.\n","[I 2024-07-27 18:33:25,569] Trial 11 finished with value: 210.6815298272 and parameters: {'learning_rate': 0.04551786466116439, 'n_estimators': 159, 'subsample': 0.9792148906976345, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 0.22231476158338204, 'colsample_bytree': 0.9597983283140337, 'reg_alpha': 1.093095465993468, 'reg_lambda': 1.6376356219722883, 'random_state': 5}. Best is trial 11 with value: 210.6815298272.\n","[I 2024-07-27 18:33:26,464] Trial 12 finished with value: 210.25650743604976 and parameters: {'learning_rate': 0.07199167666433288, 'n_estimators': 167, 'subsample': 0.9804914811766965, 'max_depth': 7, 'min_child_weight': 10, 'gamma': 0.19195276968321578, 'colsample_bytree': 0.9923332192964154, 'reg_alpha': 1.2142880748813532, 'reg_lambda': 1.1554097867414863, 'random_state': 5}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:27,636] Trial 13 finished with value: 261.7017786157304 and parameters: {'learning_rate': 0.014670755068918582, 'n_estimators': 174, 'subsample': 0.9861643220947643, 'max_depth': 7, 'min_child_weight': 10, 'gamma': 0.012769494497817585, 'colsample_bytree': 0.9990863033018552, 'reg_alpha': 0.5896351763447867, 'reg_lambda': 1.0994845522980468, 'random_state': 6}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:32,179] Trial 14 finished with value: 215.02636926842555 and parameters: {'learning_rate': 0.023351363959276165, 'n_estimators': 169, 'subsample': 0.913580809487023, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.06088583723294, 'colsample_bytree': 0.9919231460262318, 'reg_alpha': 1.3739267350159423, 'reg_lambda': 1.3208318811628807, 'random_state': 8}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:32,545] Trial 15 finished with value: 236.87612345785976 and parameters: {'learning_rate': 0.08859174986526226, 'n_estimators': 200, 'subsample': 0.9116575385775354, 'max_depth': 3, 'min_child_weight': 8, 'gamma': 0.768952645811811, 'colsample_bytree': 0.920805324535005, 'reg_alpha': 0.7538595317560732, 'reg_lambda': 0.15579026811159147, 'random_state': 5}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:33,325] Trial 16 finished with value: 210.9165133199101 and parameters: {'learning_rate': 0.058953579711780425, 'n_estimators': 160, 'subsample': 0.5144693475011253, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.7232152662603777, 'colsample_bytree': 0.8930282922568511, 'reg_alpha': 1.8076574313001421, 'reg_lambda': 1.431677960593919, 'random_state': 7}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:34,132] Trial 17 finished with value: 223.21795607050475 and parameters: {'learning_rate': 0.020710796800615074, 'n_estimators': 182, 'subsample': 0.9323387726231479, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 0.6545754235906183, 'colsample_bytree': 0.9593089088462847, 'reg_alpha': 3.0737534690537966, 'reg_lambda': 0.6867726419686998, 'random_state': 8}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:35,225] Trial 18 finished with value: 224.22242377394267 and parameters: {'learning_rate': 0.14538323510712164, 'n_estimators': 146, 'subsample': 0.9695987893126965, 'max_depth': 9, 'min_child_weight': 7, 'gamma': 3.99573463083017, 'colsample_bytree': 0.8040129016356035, 'reg_alpha': 0.33933017639445584, 'reg_lambda': 1.8627221993297387, 'random_state': 5}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:35,523] Trial 19 finished with value: 263.265092088785 and parameters: {'learning_rate': 0.32709617960287796, 'n_estimators': 145, 'subsample': 0.7999644016213235, 'max_depth': 3, 'min_child_weight': 9, 'gamma': 1.1421606286684827, 'colsample_bytree': 0.8648978995336434, 'reg_alpha': 0.9988269187237981, 'reg_lambda': 0.8502955393446139, 'random_state': 4}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:38,011] Trial 20 finished with value: 221.48499549567265 and parameters: {'learning_rate': 0.0696369296122418, 'n_estimators': 185, 'subsample': 0.8743646231996263, 'max_depth': 15, 'min_child_weight': 8, 'gamma': 0.4838091995957808, 'colsample_bytree': 0.742113961321773, 'reg_alpha': 1.8267471043496952, 'reg_lambda': 1.6325622012943575, 'random_state': 7}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:38,920] Trial 21 finished with value: 211.62845245406382 and parameters: {'learning_rate': 0.05001797360178631, 'n_estimators': 161, 'subsample': 0.5054886560547364, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.3789483533747539, 'colsample_bytree': 0.9094829139658824, 'reg_alpha': 1.759108669721553, 'reg_lambda': 1.4676215338680327, 'random_state': 7}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:39,391] Trial 22 finished with value: 216.70997629448286 and parameters: {'learning_rate': 0.0711707753361848, 'n_estimators': 152, 'subsample': 0.5257849389206974, 'max_depth': 5, 'min_child_weight': 10, 'gamma': 0.9311234178706955, 'colsample_bytree': 0.9567229454001994, 'reg_alpha': 2.0797499397549046, 'reg_lambda': 2.2254909658828783, 'random_state': 6}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:40,323] Trial 23 finished with value: 215.58059444440448 and parameters: {'learning_rate': 0.024777332336850325, 'n_estimators': 168, 'subsample': 0.681442514393725, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.32832683660161055, 'colsample_bytree': 0.879006068082923, 'reg_alpha': 1.4356962786971093, 'reg_lambda': 0.018067530138490717, 'random_state': 8}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:40,942] Trial 24 finished with value: 216.5395740812064 and parameters: {'learning_rate': 0.04787373542009436, 'n_estimators': 185, 'subsample': 0.9424712762389519, 'max_depth': 5, 'min_child_weight': 7, 'gamma': 1.6777663213586915, 'colsample_bytree': 0.9611120205992055, 'reg_alpha': 0.9084564496107179, 'reg_lambda': 1.1301249119346657, 'random_state': 4}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:41,915] Trial 25 finished with value: 228.74329363756962 and parameters: {'learning_rate': 0.1369760802178393, 'n_estimators': 142, 'subsample': 0.7731350691118699, 'max_depth': 9, 'min_child_weight': 10, 'gamma': 0.8620089697902176, 'colsample_bytree': 0.8506794919578776, 'reg_alpha': 2.9276155807443063, 'reg_lambda': 1.6643968744073168, 'random_state': 7}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:45,793] Trial 26 finished with value: 222.33603847745562 and parameters: {'learning_rate': 0.22234869736080753, 'n_estimators': 87, 'subsample': 0.8844112692114466, 'max_depth': 6, 'min_child_weight': 8, 'gamma': 0.014684083909523193, 'colsample_bytree': 0.9157013697406553, 'reg_alpha': 2.0831773363754134, 'reg_lambda': 0.909067946651972, 'random_state': 9}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:47,426] Trial 27 finished with value: 222.09462783953506 and parameters: {'learning_rate': 0.0914692947722271, 'n_estimators': 161, 'subsample': 0.9521289315240159, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 1.1486453302917834, 'colsample_bytree': 0.9700759488443016, 'reg_alpha': 0.4173822227640698, 'reg_lambda': 0.5765183507837284, 'random_state': 5}. Best is trial 12 with value: 210.25650743604976.\n","[I 2024-07-27 18:33:48,613] Trial 28 finished with value: 207.76884840560766 and parameters: {'learning_rate': 0.03546914818503615, 'n_estimators': 177, 'subsample': 0.9953065227337818, 'max_depth': 8, 'min_child_weight': 10, 'gamma': 0.42633393446842, 'colsample_bytree': 0.8952113160208892, 'reg_alpha': 1.3679110743604919, 'reg_lambda': 2.3248068219604603, 'random_state': 6}. Best is trial 28 with value: 207.76884840560766.\n","[I 2024-07-27 18:33:50,033] Trial 29 finished with value: 243.98266978367516 and parameters: {'learning_rate': 0.018253081748372355, 'n_estimators': 180, 'subsample': 0.9984030409229341, 'max_depth': 8, 'min_child_weight': 6, 'gamma': 3.6476585821490106, 'colsample_bytree': 0.7573561503513813, 'reg_alpha': 0.014206502203657045, 'reg_lambda': 2.458765876550463, 'random_state': 4}. Best is trial 28 with value: 207.76884840560766.\n","[I 2024-07-27 18:33:51,057] Trial 30 finished with value: 221.1646582643785 and parameters: {'learning_rate': 0.03398006556956032, 'n_estimators': 134, 'subsample': 0.8356018501051246, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 0.24734690698269102, 'colsample_bytree': 0.5904223767786224, 'reg_alpha': 1.3278910329653917, 'reg_lambda': 2.975891204394088, 'random_state': 3}. Best is trial 28 with value: 207.76884840560766.\n","[I 2024-07-27 18:33:52,122] Trial 31 finished with value: 206.18742528483583 and parameters: {'learning_rate': 0.05945038654822551, 'n_estimators': 163, 'subsample': 0.9096547357871009, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.5866115721983419, 'colsample_bytree': 0.8887548495840393, 'reg_alpha': 1.683667404376227, 'reg_lambda': 1.713640833087947, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:33:53,274] Trial 32 finished with value: 212.7928966375952 and parameters: {'learning_rate': 0.07044968454760564, 'n_estimators': 190, 'subsample': 0.9592540595696547, 'max_depth': 8, 'min_child_weight': 10, 'gamma': 0.48782413616566844, 'colsample_bytree': 0.9343720216637773, 'reg_alpha': 1.0527016650460044, 'reg_lambda': 1.9390026560283944, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:33:54,046] Trial 33 finished with value: 215.0774251098974 and parameters: {'learning_rate': 0.028060163188895162, 'n_estimators': 171, 'subsample': 0.9088664936495203, 'max_depth': 6, 'min_child_weight': 9, 'gamma': 1.1656336354154888, 'colsample_bytree': 0.9447520545605678, 'reg_alpha': 2.1122447600739584, 'reg_lambda': 2.476027701685343, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:00,110] Trial 34 finished with value: 219.79473828097852 and parameters: {'learning_rate': 0.04135092207677761, 'n_estimators': 189, 'subsample': 0.9995660995778426, 'max_depth': 13, 'min_child_weight': 8, 'gamma': 0.5036113114410388, 'colsample_bytree': 0.8415980940317914, 'reg_alpha': 1.5926973979781234, 'reg_lambda': 1.7369469291361646, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:01,683] Trial 35 finished with value: 216.4667832489375 and parameters: {'learning_rate': 0.062416840179666165, 'n_estimators': 175, 'subsample': 0.9641349913657733, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 0.8792874077085535, 'colsample_bytree': 0.9788292209605836, 'reg_alpha': 0.7444110255627143, 'reg_lambda': 2.1864206277129106, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:03,081] Trial 36 finished with value: 225.32738864430027 and parameters: {'learning_rate': 0.12599051219477095, 'n_estimators': 194, 'subsample': 0.8427911470360681, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 0.2180330414125955, 'colsample_bytree': 0.9026430342727143, 'reg_alpha': 2.8170302729405337, 'reg_lambda': 2.717913251649698, 'random_state': 4}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:03,445] Trial 37 finished with value: 225.55564886076456 and parameters: {'learning_rate': 0.048751151650517334, 'n_estimators': 132, 'subsample': 0.9346599406134505, 'max_depth': 4, 'min_child_weight': 10, 'gamma': 2.160627257475223, 'colsample_bytree': 0.8160058131920274, 'reg_alpha': 1.1733217192850978, 'reg_lambda': 1.1909585692705833, 'random_state': 3}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:03,854] Trial 38 finished with value: 219.41842410433654 and parameters: {'learning_rate': 0.09442775362508228, 'n_estimators': 150, 'subsample': 0.892179448607753, 'max_depth': 4, 'min_child_weight': 4, 'gamma': 1.429800479072255, 'colsample_bytree': 0.9971015617754436, 'reg_alpha': 3.531679265557957, 'reg_lambda': 2.0510571954299954, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:05,025] Trial 39 finished with value: 269.7879629757093 and parameters: {'learning_rate': 0.016169668168649738, 'n_estimators': 163, 'subsample': 0.9680298451711281, 'max_depth': 8, 'min_child_weight': 7, 'gamma': 3.267913143886971, 'colsample_bytree': 0.7101003762703146, 'reg_alpha': 2.4175671272904324, 'reg_lambda': 3.214240806800651, 'random_state': 7}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:08,366] Trial 40 finished with value: 215.68123341313955 and parameters: {'learning_rate': 0.030433358770036403, 'n_estimators': 177, 'subsample': 0.7138803910411959, 'max_depth': 13, 'min_child_weight': 4, 'gamma': 2.5382232746717506, 'colsample_bytree': 0.9364042742584231, 'reg_alpha': 1.5822359365301615, 'reg_lambda': 2.3149104014207813, 'random_state': 2}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:09,022] Trial 41 finished with value: 212.43988006165844 and parameters: {'learning_rate': 0.056852515919074455, 'n_estimators': 156, 'subsample': 0.6552680827976076, 'max_depth': 6, 'min_child_weight': 9, 'gamma': 0.6641580234425524, 'colsample_bytree': 0.8971511940826713, 'reg_alpha': 4.970648566172914, 'reg_lambda': 1.4873067333445267, 'random_state': 7}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:11,272] Trial 42 finished with value: 208.88678850579763 and parameters: {'learning_rate': 0.03833228442138008, 'n_estimators': 140, 'subsample': 0.9253119700493945, 'max_depth': 7, 'min_child_weight': 8, 'gamma': 1.0997774615561646, 'colsample_bytree': 0.8807651374359473, 'reg_alpha': 2.2704476486401504, 'reg_lambda': 3.9850963173954126, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:13,778] Trial 43 finished with value: 218.391883546473 and parameters: {'learning_rate': 0.03760780601625461, 'n_estimators': 137, 'subsample': 0.9245495309007995, 'max_depth': 5, 'min_child_weight': 2, 'gamma': 1.0297295528148478, 'colsample_bytree': 0.8776919167488993, 'reg_alpha': 2.137537917367489, 'reg_lambda': 3.8588176018310585, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:14,849] Trial 44 finished with value: 216.58558871074996 and parameters: {'learning_rate': 0.08159355900544435, 'n_estimators': 120, 'subsample': 0.9780378965251334, 'max_depth': 10, 'min_child_weight': 8, 'gamma': 1.626194316437645, 'colsample_bytree': 0.7920090988300884, 'reg_alpha': 2.5956461659412065, 'reg_lambda': 4.051329956704562, 'random_state': 4}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:15,674] Trial 45 finished with value: 209.347446041401 and parameters: {'learning_rate': 0.03871061077460394, 'n_estimators': 168, 'subsample': 0.8605345951368577, 'max_depth': 7, 'min_child_weight': 10, 'gamma': 0.175161811764459, 'colsample_bytree': 0.8320187483305286, 'reg_alpha': 1.5399000057784367, 'reg_lambda': 4.286971134781472, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:16,954] Trial 46 finished with value: 372.2585670982582 and parameters: {'learning_rate': 0.010319976251754999, 'n_estimators': 169, 'subsample': 0.8132342379914026, 'max_depth': 8, 'min_child_weight': 6, 'gamma': 1.3220017003093307, 'colsample_bytree': 0.8413564402576043, 'reg_alpha': 2.4061146828676554, 'reg_lambda': 4.997692790674131, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:18,610] Trial 47 finished with value: 228.63441913024238 and parameters: {'learning_rate': 0.025495910278726584, 'n_estimators': 141, 'subsample': 0.8596404742180124, 'max_depth': 11, 'min_child_weight': 8, 'gamma': 0.6146082014822021, 'colsample_bytree': 0.8555045594050823, 'reg_alpha': 1.5387162697676755, 'reg_lambda': 4.336338464998184, 'random_state': 9}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:19,668] Trial 48 finished with value: 215.92657786950576 and parameters: {'learning_rate': 0.03850268839364182, 'n_estimators': 125, 'subsample': 0.8928488108405407, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 4.969423767316395, 'colsample_bytree': 0.8253562671605786, 'reg_alpha': 1.9237996624231735, 'reg_lambda': 4.9976312234186135, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:20,426] Trial 49 finished with value: 214.2085046847452 and parameters: {'learning_rate': 0.10809918696634309, 'n_estimators': 165, 'subsample': 0.9077139442330174, 'max_depth': 7, 'min_child_weight': 10, 'gamma': 0.21944318472651034, 'colsample_bytree': 0.7720687661793991, 'reg_alpha': 1.272034798576364, 'reg_lambda': 4.329484681646512, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:22,154] Trial 50 finished with value: 262.70874250355615 and parameters: {'learning_rate': 0.7017926765140251, 'n_estimators': 151, 'subsample': 0.9472477499702937, 'max_depth': 12, 'min_child_weight': 5, 'gamma': 1.8342713786380918, 'colsample_bytree': 0.8816678824267564, 'reg_alpha': 0.7644153866417271, 'reg_lambda': 4.6884493797222, 'random_state': 8}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:22,853] Trial 51 finished with value: 206.2702588269865 and parameters: {'learning_rate': 0.04253570166213607, 'n_estimators': 156, 'subsample': 0.978336983201896, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 0.008814515007960988, 'colsample_bytree': 0.9245662507233064, 'reg_alpha': 1.140917257257179, 'reg_lambda': 3.6218058559854516, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:23,835] Trial 52 finished with value: 221.12553135294846 and parameters: {'learning_rate': 0.032112879742702896, 'n_estimators': 113, 'subsample': 0.92652684746857, 'max_depth': 7, 'min_child_weight': 10, 'gamma': 0.008057273391338493, 'colsample_bytree': 0.9080510216295763, 'reg_alpha': 1.528329143991262, 'reg_lambda': 3.6610198963825225, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:27,730] Trial 53 finished with value: 215.5752611820505 and parameters: {'learning_rate': 0.05333928588764369, 'n_estimators': 156, 'subsample': 0.9797435670328521, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 0.3971472603688529, 'colsample_bytree': 0.9378415282057495, 'reg_alpha': 1.6780381309278984, 'reg_lambda': 4.0599620931031515, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:28,120] Trial 54 finished with value: 324.67859986208487 and parameters: {'learning_rate': 0.02166959309279164, 'n_estimators': 96, 'subsample': 0.9993584219920068, 'max_depth': 5, 'min_child_weight': 9, 'gamma': 0.1655912036131698, 'colsample_bytree': 0.9238342045962065, 'reg_alpha': 2.2634822223977475, 'reg_lambda': 3.3080231762774845, 'random_state': 7}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:29,235] Trial 55 finished with value: 206.83837236215672 and parameters: {'learning_rate': 0.04113875762119731, 'n_estimators': 173, 'subsample': 0.862027929793637, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.6015325950388237, 'colsample_bytree': 0.8642895593417764, 'reg_alpha': 1.878478468792605, 'reg_lambda': 2.957889927269566, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:30,323] Trial 56 finished with value: 212.42017184912592 and parameters: {'learning_rate': 0.042246326671992795, 'n_estimators': 176, 'subsample': 0.8104545623183746, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.7256308380563039, 'colsample_bytree': 0.858347462642405, 'reg_alpha': 1.9446820803076683, 'reg_lambda': 3.070953363561747, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:33,151] Trial 57 finished with value: 218.2536295815371 and parameters: {'learning_rate': 0.028526542392842868, 'n_estimators': 194, 'subsample': 0.8592112540012662, 'max_depth': 15, 'min_child_weight': 8, 'gamma': 0.5483683264888974, 'colsample_bytree': 0.8326858131098481, 'reg_alpha': 2.6004269277727516, 'reg_lambda': 3.529988890204472, 'random_state': 7}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:33,532] Trial 58 finished with value: 224.07361941390496 and parameters: {'learning_rate': 0.034594817437041486, 'n_estimators': 148, 'subsample': 0.8290907178190757, 'max_depth': 4, 'min_child_weight': 9, 'gamma': 0.9402744046276734, 'colsample_bytree': 0.8846661208982424, 'reg_alpha': 1.7985233467794792, 'reg_lambda': 2.9225249376093596, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:34,982] Trial 59 finished with value: 214.1285797384183 and parameters: {'learning_rate': 0.058153328710410644, 'n_estimators': 181, 'subsample': 0.9010058314675684, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 0.33130572034070466, 'colsample_bytree': 0.8124305407701969, 'reg_alpha': 3.2468090588094154, 'reg_lambda': 3.886407014542125, 'random_state': 8}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:35,789] Trial 60 finished with value: 282.76305422328767 and parameters: {'learning_rate': 0.019021391941215098, 'n_estimators': 126, 'subsample': 0.7792895802722313, 'max_depth': 7, 'min_child_weight': 7, 'gamma': 1.3178156222649853, 'colsample_bytree': 0.8715868528831254, 'reg_alpha': 0.8891084024327733, 'reg_lambda': 4.2756811496314775, 'random_state': 7}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:36,514] Trial 61 finished with value: 208.9091944182494 and parameters: {'learning_rate': 0.04456682232619737, 'n_estimators': 166, 'subsample': 0.9559783859270676, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 0.10399189696233962, 'colsample_bytree': 0.9853107063089652, 'reg_alpha': 1.2194279509145258, 'reg_lambda': 2.6361538834382126, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:37,094] Trial 62 finished with value: 213.33274096408454 and parameters: {'learning_rate': 0.043683764568856684, 'n_estimators': 171, 'subsample': 0.8808954706957, 'max_depth': 5, 'min_child_weight': 10, 'gamma': 0.41072996761704134, 'colsample_bytree': 0.8946403392439908, 'reg_alpha': 1.384703154213052, 'reg_lambda': 2.5983652674354767, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:41,843] Trial 63 finished with value: 208.84386214502393 and parameters: {'learning_rate': 0.04818558019320378, 'n_estimators': 157, 'subsample': 0.9487727607634996, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 0.13580441400689813, 'colsample_bytree': 0.9800305821560967, 'reg_alpha': 0.5461378408012421, 'reg_lambda': 2.811199343406795, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:43,111] Trial 64 finished with value: 210.43885094246428 and parameters: {'learning_rate': 0.07982517258407203, 'n_estimators': 156, 'subsample': 0.9434091053124354, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 0.7885159301739806, 'colsample_bytree': 0.9792264469256424, 'reg_alpha': 0.48799359741911397, 'reg_lambda': 2.7977402247416316, 'random_state': 4}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:44,113] Trial 65 finished with value: 207.03945211552934 and parameters: {'learning_rate': 0.05157708536804302, 'n_estimators': 143, 'subsample': 0.9174514269102735, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.01341172204348702, 'colsample_bytree': 0.9485805189861607, 'reg_alpha': 1.1067546613559265, 'reg_lambda': 3.1656093043519244, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:45,263] Trial 66 finished with value: 210.03001361078435 and parameters: {'learning_rate': 0.06621952041907365, 'n_estimators': 139, 'subsample': 0.9370840220841876, 'max_depth': 9, 'min_child_weight': 8, 'gamma': 0.5913970474350714, 'colsample_bytree': 0.9481178880941126, 'reg_alpha': 0.6466675856804986, 'reg_lambda': 3.0934999039425763, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:46,485] Trial 67 finished with value: 214.80092527317828 and parameters: {'learning_rate': 0.026168764605915436, 'n_estimators': 159, 'subsample': 0.9195374080845158, 'max_depth': 8, 'min_child_weight': 8, 'gamma': 0.327968441691026, 'colsample_bytree': 0.9218700406814413, 'reg_alpha': 0.8772280933499382, 'reg_lambda': 3.4614079583047035, 'random_state': 7}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:47,723] Trial 68 finished with value: 211.69578115177083 and parameters: {'learning_rate': 0.05963981143025432, 'n_estimators': 145, 'subsample': 0.9706362169776387, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 1.0722384496983408, 'colsample_bytree': 0.9685252606736977, 'reg_alpha': 0.30599917601423254, 'reg_lambda': 3.6803329013749098, 'random_state': 6}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:50,186] Trial 69 finished with value: 212.28836986860867 and parameters: {'learning_rate': 0.048915285155808216, 'n_estimators': 128, 'subsample': 0.9881059971518865, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 0.0004141779221303876, 'colsample_bytree': 0.9511202423489203, 'reg_alpha': 1.0844977381625658, 'reg_lambda': 2.3437437276286404, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:50,566] Trial 70 finished with value: 359.8561024883025 and parameters: {'learning_rate': 0.0337562762914206, 'n_estimators': 54, 'subsample': 0.9179920335129352, 'max_depth': 8, 'min_child_weight': 8, 'gamma': 4.220128885047329, 'colsample_bytree': 0.558512873065858, 'reg_alpha': 0.2495517113997398, 'reg_lambda': 3.2828293075003323, 'random_state': 7}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:51,305] Trial 71 finished with value: 209.2595925586217 and parameters: {'learning_rate': 0.04465696492269823, 'n_estimators': 165, 'subsample': 0.9545837381778749, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 0.1182821375980336, 'colsample_bytree': 0.9152498820659972, 'reg_alpha': 1.113541769179671, 'reg_lambda': 2.899744227556646, 'random_state': 5}. Best is trial 31 with value: 206.18742528483583.\n","[I 2024-07-27 18:34:55,584] Trial 72 finished with value: 205.68262947653758 and parameters: {'learning_rate': 0.05176999236540111, 'n_estimators': 145, 'subsample': 0.9558755462049466, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.4683283467820471, 'colsample_bytree': 0.9843357522645761, 'reg_alpha': 1.9349761753149808, 'reg_lambda': 2.59155927397777, 'random_state': 6}. Best is trial 72 with value: 205.68262947653758.\n","[I 2024-07-27 18:34:56,350] Trial 73 finished with value: 204.36200261604804 and parameters: {'learning_rate': 0.07922214398172986, 'n_estimators': 136, 'subsample': 0.9334231786110929, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.4479072492455292, 'colsample_bytree': 0.9695898552446139, 'reg_alpha': 1.9263732953863182, 'reg_lambda': 3.1071678361673043, 'random_state': 6}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:34:57,788] Trial 74 finished with value: 208.28353544123863 and parameters: {'learning_rate': 0.07440249625760431, 'n_estimators': 152, 'subsample': 0.8964685914138583, 'max_depth': 10, 'min_child_weight': 9, 'gamma': 0.48963789144598246, 'colsample_bytree': 0.9677634410534434, 'reg_alpha': 1.7086676977239224, 'reg_lambda': 3.1420619840700086, 'random_state': 6}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:34:59,042] Trial 75 finished with value: 208.97068042635573 and parameters: {'learning_rate': 0.07728379315694561, 'n_estimators': 132, 'subsample': 0.8997705002815952, 'max_depth': 10, 'min_child_weight': 9, 'gamma': 0.5233170397577671, 'colsample_bytree': 0.9655309216029327, 'reg_alpha': 1.7071360671703937, 'reg_lambda': 3.168361270905674, 'random_state': 7}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:34:59,846] Trial 76 finished with value: 228.72415102769594 and parameters: {'learning_rate': 0.16356830256601126, 'n_estimators': 149, 'subsample': 0.8740806750074925, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.8203563251832413, 'colsample_bytree': 0.9981041182601622, 'reg_alpha': 1.9966888900096178, 'reg_lambda': 2.533401502510895, 'random_state': 6}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:35:05,541] Trial 77 finished with value: 210.24214442788144 and parameters: {'learning_rate': 0.11462310379993354, 'n_estimators': 144, 'subsample': 0.9359909626177516, 'max_depth': 18, 'min_child_weight': 3, 'gamma': 0.35322734475715795, 'colsample_bytree': 0.929769517852871, 'reg_alpha': 1.400219459013515, 'reg_lambda': 2.0681862819668773, 'random_state': 6}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:35:11,020] Trial 78 finished with value: 215.88265135968643 and parameters: {'learning_rate': 0.08850209579137298, 'n_estimators': 153, 'subsample': 0.9884162161225953, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 0.6674002374123444, 'colsample_bytree': 0.9551147427833483, 'reg_alpha': 1.823495695119237, 'reg_lambda': 3.568766680179467, 'random_state': 8}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:35:11,820] Trial 79 finished with value: 209.82825151510684 and parameters: {'learning_rate': 0.10215572716211721, 'n_estimators': 114, 'subsample': 0.9628796206066148, 'max_depth': 8, 'min_child_weight': 7, 'gamma': 0.4835997146617405, 'colsample_bytree': 0.9404252815750002, 'reg_alpha': 2.2125941560746414, 'reg_lambda': 3.046597442346672, 'random_state': 0}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:35:13,386] Trial 80 finished with value: 205.21921274882567 and parameters: {'learning_rate': 0.06468086951358207, 'n_estimators': 136, 'subsample': 0.8952994639264754, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.2644359390605717, 'colsample_bytree': 0.9699639045731954, 'reg_alpha': 1.9574095674924414, 'reg_lambda': 3.391218428621282, 'random_state': 7}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:35:14,936] Trial 81 finished with value: 206.91952686172073 and parameters: {'learning_rate': 0.06424643516109367, 'n_estimators': 136, 'subsample': 0.9106985009189532, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.28578228705349756, 'colsample_bytree': 0.9733780509519391, 'reg_alpha': 1.6849221119290598, 'reg_lambda': 3.3538431191871116, 'random_state': 7}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:35:16,456] Trial 82 finished with value: 205.55009025488508 and parameters: {'learning_rate': 0.05301416762173355, 'n_estimators': 135, 'subsample': 0.8813588206472165, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.27715025600315496, 'colsample_bytree': 0.9884796582404936, 'reg_alpha': 1.9330642573279975, 'reg_lambda': 3.3664604568105747, 'random_state': 7}. Best is trial 73 with value: 204.36200261604804.\n","[I 2024-07-27 18:35:17,580] Trial 83 finished with value: 203.2328398185377 and parameters: {'learning_rate': 0.06641026375735225, 'n_estimators': 136, 'subsample': 0.8811645209461044, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2858272428296516, 'colsample_bytree': 0.9838004992853266, 'reg_alpha': 1.9290168596704322, 'reg_lambda': 3.336810133040689, 'random_state': 8}. Best is trial 83 with value: 203.2328398185377.\n","[I 2024-07-27 18:35:18,669] Trial 84 finished with value: 198.47965014026371 and parameters: {'learning_rate': 0.06174634403667822, 'n_estimators': 135, 'subsample': 0.8796488644343785, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3193154889321297, 'colsample_bytree': 0.9869847808259667, 'reg_alpha': 1.9660113139032451, 'reg_lambda': 3.4056408335572814, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:21,499] Trial 85 finished with value: 203.84628227395902 and parameters: {'learning_rate': 0.0562880372267302, 'n_estimators': 132, 'subsample': 0.8503835282788513, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.9380554577481931, 'colsample_bytree': 0.9892006504753221, 'reg_alpha': 2.010902045381831, 'reg_lambda': 3.763709953062462, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:23,360] Trial 86 finished with value: 215.18180967880872 and parameters: {'learning_rate': 0.055406215603863856, 'n_estimators': 131, 'subsample': 0.8446890977092314, 'max_depth': 5, 'min_child_weight': 1, 'gamma': 0.7357218959182719, 'colsample_bytree': 0.9881301470879326, 'reg_alpha': 2.040331551052431, 'reg_lambda': 3.761498943051962, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:24,047] Trial 87 finished with value: 202.6021360777334 and parameters: {'learning_rate': 0.08410941492680005, 'n_estimators': 122, 'subsample': 0.8295226724540494, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.23467386808430757, 'colsample_bytree': 0.9970919117517388, 'reg_alpha': 2.327846755918182, 'reg_lambda': 3.4838460084029736, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:25,031] Trial 88 finished with value: 203.6769454936848 and parameters: {'learning_rate': 0.0878675722505832, 'n_estimators': 119, 'subsample': 0.8268755582020647, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.9645002834292957, 'colsample_bytree': 0.9922079109729153, 'reg_alpha': 2.3764982891692776, 'reg_lambda': 3.402271670187053, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:25,812] Trial 89 finished with value: 208.79006338113518 and parameters: {'learning_rate': 0.08649177444794395, 'n_estimators': 102, 'subsample': 0.7897883437595956, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.9413274200898253, 'colsample_bytree': 0.9990983369245647, 'reg_alpha': 2.748399401586253, 'reg_lambda': 3.509224642027113, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:26,454] Trial 90 finished with value: 211.47440103654816 and parameters: {'learning_rate': 0.09874573623281033, 'n_estimators': 117, 'subsample': 0.8128295077405175, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 1.228986010840191, 'colsample_bytree': 0.9872351095952205, 'reg_alpha': 2.3195118010396696, 'reg_lambda': 3.7571808751264757, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:27,458] Trial 91 finished with value: 204.88028017663146 and parameters: {'learning_rate': 0.06865607830196012, 'n_estimators': 122, 'subsample': 0.7443821951922974, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.21287396872965764, 'colsample_bytree': 0.9779902783479151, 'reg_alpha': 2.5585623851378805, 'reg_lambda': 3.4270459455644118, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:28,465] Trial 92 finished with value: 216.9392532387266 and parameters: {'learning_rate': 0.1257869487329496, 'n_estimators': 121, 'subsample': 0.7429650516990313, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.25143463814026457, 'colsample_bytree': 0.9625248808430699, 'reg_alpha': 2.4074681235067548, 'reg_lambda': 3.4542984623980777, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:29,019] Trial 93 finished with value: 217.15179562195243 and parameters: {'learning_rate': 0.06887581144944277, 'n_estimators': 129, 'subsample': 0.7200251527395953, 'max_depth': 5, 'min_child_weight': 1, 'gamma': 0.38192603348975895, 'colsample_bytree': 0.9767642947897868, 'reg_alpha': 2.682316123250219, 'reg_lambda': 3.3555789811147094, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:29,615] Trial 94 finished with value: 206.51026021200184 and parameters: {'learning_rate': 0.08058110695258541, 'n_estimators': 108, 'subsample': 0.8287062179240887, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.2477528851007249, 'colsample_bytree': 0.9997084408766254, 'reg_alpha': 2.544308966696583, 'reg_lambda': 3.238008081708397, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:30,730] Trial 95 finished with value: 203.2876133989995 and parameters: {'learning_rate': 0.06373770831986444, 'n_estimators': 135, 'subsample': 0.755166394552685, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 3.110563318112987, 'colsample_bytree': 0.988839917626567, 'reg_alpha': 2.1523913558703165, 'reg_lambda': 3.8566473080096624, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:31,098] Trial 96 finished with value: 219.48633862818266 and parameters: {'learning_rate': 0.06547400613840322, 'n_estimators': 123, 'subsample': 0.7586009467669105, 'max_depth': 4, 'min_child_weight': 1, 'gamma': 3.1439583839817327, 'colsample_bytree': 0.961243143689754, 'reg_alpha': 2.1548561264901864, 'reg_lambda': 4.160957304742663, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:31,861] Trial 97 finished with value: 209.24628795021624 and parameters: {'learning_rate': 0.0734037201322773, 'n_estimators': 137, 'subsample': 0.8514842518172833, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 2.7070586264703267, 'colsample_bytree': 0.9882821205554785, 'reg_alpha': 2.9537591105399166, 'reg_lambda': 3.871950598590898, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:32,885] Trial 98 finished with value: 222.28863883306073 and parameters: {'learning_rate': 0.22596527932132085, 'n_estimators': 118, 'subsample': 0.8255150533128783, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 3.496282647451649, 'colsample_bytree': 0.9769408153276387, 'reg_alpha': 2.3888899295020485, 'reg_lambda': 3.4270247061726336, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:36,910] Trial 99 finished with value: 225.0864488188434 and parameters: {'learning_rate': 0.11751506448617209, 'n_estimators': 134, 'subsample': 0.8783257415208874, 'max_depth': 5, 'min_child_weight': 1, 'gamma': 2.302634313437439, 'colsample_bytree': 0.9550168445087286, 'reg_alpha': 2.18599277440339, 'reg_lambda': 3.761162411936269, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:37,599] Trial 100 finished with value: 208.5033264654702 and parameters: {'learning_rate': 0.09480135270670324, 'n_estimators': 125, 'subsample': 0.6782737509793572, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 2.991473858057344, 'colsample_bytree': 0.9900082834518487, 'reg_alpha': 2.0787097653522397, 'reg_lambda': 4.014954566123301, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:38,633] Trial 101 finished with value: 202.2065655265233 and parameters: {'learning_rate': 0.055047377533560385, 'n_estimators': 128, 'subsample': 0.7980884269283036, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.4072170746107836, 'colsample_bytree': 0.9748370567378488, 'reg_alpha': 1.9410875681808595, 'reg_lambda': 3.58526562874322, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:39,682] Trial 102 finished with value: 209.29707791331643 and parameters: {'learning_rate': 0.08514897157567251, 'n_estimators': 127, 'subsample': 0.7651789474189943, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.15282168760823667, 'colsample_bytree': 0.9701271923244638, 'reg_alpha': 2.4856822578420026, 'reg_lambda': 3.615771378590675, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:40,532] Trial 103 finished with value: 208.00584900663978 and parameters: {'learning_rate': 0.061968201771815716, 'n_estimators': 113, 'subsample': 0.7983757058594301, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.6878594202860812, 'colsample_bytree': 0.9756822001339924, 'reg_alpha': 2.298365316558521, 'reg_lambda': 3.374732581394687, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:41,273] Trial 104 finished with value: 205.6644868202011 and parameters: {'learning_rate': 0.05564556162166266, 'n_estimators': 130, 'subsample': 0.7319201168493374, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 3.843928395811846, 'colsample_bytree': 0.9377960161065315, 'reg_alpha': 1.9976115705544621, 'reg_lambda': 3.7596178263436846, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:42,019] Trial 105 finished with value: 206.01821229891664 and parameters: {'learning_rate': 0.06860878490692393, 'n_estimators': 135, 'subsample': 0.8888272618339378, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.3061961428166366, 'colsample_bytree': 0.9591353430367277, 'reg_alpha': 1.9146422082679002, 'reg_lambda': 3.529779834199188, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:42,567] Trial 106 finished with value: 219.1323099850733 and parameters: {'learning_rate': 0.1037187138374606, 'n_estimators': 139, 'subsample': 0.8712172082691528, 'max_depth': 5, 'min_child_weight': 3, 'gamma': 0.881991021079483, 'colsample_bytree': 0.9999738892419887, 'reg_alpha': 2.1187151354165543, 'reg_lambda': 3.262557076488739, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:43,572] Trial 107 finished with value: 205.4906634715271 and parameters: {'learning_rate': 0.07295981909968072, 'n_estimators': 122, 'subsample': 0.7799924735866802, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1205143456136484, 'colsample_bytree': 0.9891942155567381, 'reg_alpha': 1.816053231629224, 'reg_lambda': 3.9377727197860963, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:44,291] Trial 108 finished with value: 207.19867406029633 and parameters: {'learning_rate': 0.07698936326060792, 'n_estimators': 118, 'subsample': 0.7770266573069518, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.10772836439780434, 'colsample_bytree': 0.6332814172440548, 'reg_alpha': 2.663238765409358, 'reg_lambda': 3.932496821183167, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:45,310] Trial 109 finished with value: 207.33825756915738 and parameters: {'learning_rate': 0.14783896015848041, 'n_estimators': 123, 'subsample': 0.793235993493174, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.4195071780350288, 'colsample_bytree': 0.9483204609982607, 'reg_alpha': 2.340855592630178, 'reg_lambda': 4.105945883147025, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:46,316] Trial 110 finished with value: 211.25501955652388 and parameters: {'learning_rate': 0.0909656268968163, 'n_estimators': 123, 'subsample': 0.78380448920831, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 1.50232353891733, 'colsample_bytree': 0.9704865516899609, 'reg_alpha': 1.8196141040289477, 'reg_lambda': 3.6424436506267464, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:50,945] Trial 111 finished with value: 207.05497743431613 and parameters: {'learning_rate': 0.05992144253556668, 'n_estimators': 109, 'subsample': 0.8051941573828846, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.20497756917125312, 'colsample_bytree': 0.9898364059186394, 'reg_alpha': 2.2228473934498485, 'reg_lambda': 3.832577623555436, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:52,306] Trial 112 finished with value: 203.31167348902085 and parameters: {'learning_rate': 0.07338726693683231, 'n_estimators': 133, 'subsample': 0.8200833266369869, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.09566212625496867, 'colsample_bytree': 0.9861155441749303, 'reg_alpha': 2.0038744861069984, 'reg_lambda': 4.435357956054371, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:53,030] Trial 113 finished with value: 209.50404797685184 and parameters: {'learning_rate': 0.07098485776596652, 'n_estimators': 129, 'subsample': 0.8209920096364154, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.11291143860957127, 'colsample_bytree': 0.9802954450642654, 'reg_alpha': 2.8381095547667385, 'reg_lambda': 4.232830289949512, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:54,008] Trial 114 finished with value: 207.64328674009016 and parameters: {'learning_rate': 0.07916421168141513, 'n_estimators': 105, 'subsample': 0.7457663393823946, 'max_depth': 8, 'min_child_weight': 3, 'gamma': 0.6174407468066792, 'colsample_bytree': 0.9614457848079442, 'reg_alpha': 1.6012460323587974, 'reg_lambda': 4.4768332648201, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:54,918] Trial 115 finished with value: 205.37282218519206 and parameters: {'learning_rate': 0.06459354851164362, 'n_estimators': 116, 'subsample': 0.7645541683915923, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.4012178836324607, 'colsample_bytree': 0.9466113551543891, 'reg_alpha': 2.475029458030308, 'reg_lambda': 4.503871892287285, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:55,641] Trial 116 finished with value: 205.55941702581038 and parameters: {'learning_rate': 0.06382639213878158, 'n_estimators': 132, 'subsample': 0.8397665785662615, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.5670860109038871, 'colsample_bytree': 0.9503634102286045, 'reg_alpha': 2.484136027435175, 'reg_lambda': 4.7384730015458585, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:56,865] Trial 117 finished with value: 209.33352440892907 and parameters: {'learning_rate': 0.08584658300064185, 'n_estimators': 117, 'subsample': 0.7669726514014263, 'max_depth': 9, 'min_child_weight': 4, 'gamma': 1.0053936205778198, 'colsample_bytree': 0.9307654060826372, 'reg_alpha': 2.0722604452371782, 'reg_lambda': 4.517538475219751, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:58,226] Trial 118 finished with value: 208.14549771548363 and parameters: {'learning_rate': 0.057238134201742355, 'n_estimators': 140, 'subsample': 0.7147778037922049, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 1.9775146787671432, 'colsample_bytree': 0.9430746044733174, 'reg_alpha': 2.59157473196018, 'reg_lambda': 4.705634620821664, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:59,178] Trial 119 finished with value: 203.66996862401552 and parameters: {'learning_rate': 0.04803832877446599, 'n_estimators': 127, 'subsample': 0.8518020861173231, 'max_depth': 7, 'min_child_weight': 3, 'gamma': 0.3619536137199917, 'colsample_bytree': 0.9751940319943762, 'reg_alpha': 2.2489336444492984, 'reg_lambda': 4.4405153711799725, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:35:59,673] Trial 120 finished with value: 211.45781281337386 and parameters: {'learning_rate': 0.047088407054692756, 'n_estimators': 126, 'subsample': 0.8496324701766692, 'max_depth': 5, 'min_child_weight': 3, 'gamma': 0.48716695212866834, 'colsample_bytree': 0.9717440336359753, 'reg_alpha': 2.2385245459110763, 'reg_lambda': 3.024409108702173, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:00,562] Trial 121 finished with value: 210.13663594594453 and parameters: {'learning_rate': 0.0639020548319942, 'n_estimators': 114, 'subsample': 0.81677042724189, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.3895087751031026, 'colsample_bytree': 0.9798565332961566, 'reg_alpha': 2.0298186115757777, 'reg_lambda': 4.831156503830533, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:05,161] Trial 122 finished with value: 204.74575913546647 and parameters: {'learning_rate': 0.05207805516259777, 'n_estimators': 138, 'subsample': 0.8530417590894194, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.31763890514626525, 'colsample_bytree': 0.9641570082065438, 'reg_alpha': 3.1879626501433935, 'reg_lambda': 4.43897864818862, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:05,947] Trial 123 finished with value: 202.71637760478316 and parameters: {'learning_rate': 0.052479205576509855, 'n_estimators': 138, 'subsample': 0.8356523724567472, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.22219493552058545, 'colsample_bytree': 0.9639361302532758, 'reg_alpha': 3.997720474139619, 'reg_lambda': 3.4742234109812746, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:06,752] Trial 124 finished with value: 207.5111593202202 and parameters: {'learning_rate': 0.0505997977041659, 'n_estimators': 147, 'subsample': 0.8356494024813648, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.7795237833632319, 'colsample_bytree': 0.9601041635018182, 'reg_alpha': 3.8639716912857422, 'reg_lambda': 4.434215976949906, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:07,584] Trial 125 finished with value: 206.74085639122254 and parameters: {'learning_rate': 0.055255285628340395, 'n_estimators': 142, 'subsample': 0.8546065647688502, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.19934429970081285, 'colsample_bytree': 0.9933474522199516, 'reg_alpha': 3.528733852562612, 'reg_lambda': 4.5898048167846275, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:08,658] Trial 126 finished with value: 204.39288514294404 and parameters: {'learning_rate': 0.04771941505583891, 'n_estimators': 132, 'subsample': 0.8374256101434692, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.06936954583131139, 'colsample_bytree': 0.9792064688126938, 'reg_alpha': 4.755476188071176, 'reg_lambda': 4.189616943199145, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:09,467] Trial 127 finished with value: 206.91749116001597 and parameters: {'learning_rate': 0.0403762785710469, 'n_estimators': 138, 'subsample': 0.864813362464993, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.061394433272914745, 'colsample_bytree': 0.9655606908871468, 'reg_alpha': 4.822112922096932, 'reg_lambda': 4.322380362534851, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:10,216] Trial 128 finished with value: 208.46285334107654 and parameters: {'learning_rate': 0.046542877358960025, 'n_estimators': 133, 'subsample': 0.8351217998490618, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.36220289812458684, 'colsample_bytree': 0.999967894332497, 'reg_alpha': 4.847785930497817, 'reg_lambda': 4.177750887206461, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:10,756] Trial 129 finished with value: 214.3435462091955 and parameters: {'learning_rate': 0.04875658923227846, 'n_estimators': 129, 'subsample': 0.8051186839270595, 'max_depth': 5, 'min_child_weight': 1, 'gamma': 0.5232473992300439, 'colsample_bytree': 0.9821030729709711, 'reg_alpha': 4.511448614722651, 'reg_lambda': 4.381443504978872, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:11,620] Trial 130 finished with value: 208.24952910737932 and parameters: {'learning_rate': 0.03723712608248054, 'n_estimators': 132, 'subsample': 0.848223243667277, 'max_depth': 7, 'min_child_weight': 5, 'gamma': 2.5890180864259458, 'colsample_bytree': 0.9542627628416401, 'reg_alpha': 4.121268841367485, 'reg_lambda': 4.031470492093702, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:12,724] Trial 131 finished with value: 200.5326633786857 and parameters: {'learning_rate': 0.05860705597221899, 'n_estimators': 142, 'subsample': 0.8228614472643295, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2186739251739907, 'colsample_bytree': 0.9783365114772148, 'reg_alpha': 3.18183710936183, 'reg_lambda': 3.557115533690754, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:13,850] Trial 132 finished with value: 202.7441637360042 and parameters: {'learning_rate': 0.05387282025193322, 'n_estimators': 140, 'subsample': 0.8227941069286964, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.04562487216256875, 'colsample_bytree': 0.9888550632134012, 'reg_alpha': 3.245263964531091, 'reg_lambda': 3.575681888725213, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:18,453] Trial 133 finished with value: 207.0842465924072 and parameters: {'learning_rate': 0.043959612352761135, 'n_estimators': 143, 'subsample': 0.8233488480081163, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.059559897381536775, 'colsample_bytree': 0.984131702359597, 'reg_alpha': 3.575030920580451, 'reg_lambda': 3.6852169685129352, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:24,591] Trial 134 finished with value: 223.63015037139058 and parameters: {'learning_rate': 0.05622053899698119, 'n_estimators': 141, 'subsample': 0.8329907981180573, 'max_depth': 14, 'min_child_weight': 1, 'gamma': 3.3911876077136616, 'colsample_bytree': 0.9959882605440767, 'reg_alpha': 4.522350443589139, 'reg_lambda': 3.582666609797778, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:25,214] Trial 135 finished with value: 203.0921053081697 and parameters: {'learning_rate': 0.059512509621294625, 'n_estimators': 126, 'subsample': 0.8419747629647878, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.01265482508826897, 'colsample_bytree': 0.7115848678780151, 'reg_alpha': 3.8366551539723535, 'reg_lambda': 3.539309662662001, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:25,602] Trial 136 finished with value: 222.3215185078131 and parameters: {'learning_rate': 0.059778381073961585, 'n_estimators': 127, 'subsample': 0.81556337284238, 'max_depth': 4, 'min_child_weight': 3, 'gamma': 0.22873463461520244, 'colsample_bytree': 0.9866438206504984, 'reg_alpha': 3.9499955049211892, 'reg_lambda': 3.5116896422460147, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:26,233] Trial 137 finished with value: 211.54692627229235 and parameters: {'learning_rate': 0.0747624943971526, 'n_estimators': 134, 'subsample': 0.8662862159364726, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.14003691955787462, 'colsample_bytree': 0.7298264277900791, 'reg_alpha': 4.324224522665207, 'reg_lambda': 3.228960052265459, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:27,567] Trial 138 finished with value: 244.61854223246246 and parameters: {'learning_rate': 0.43618659116780234, 'n_estimators': 147, 'subsample': 0.8029707060646692, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.30748476486407844, 'colsample_bytree': 0.7036376944282905, 'reg_alpha': 3.734745966208856, 'reg_lambda': 3.7073790089835486, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:28,052] Trial 139 finished with value: 208.92416271481926 and parameters: {'learning_rate': 0.09159672079022721, 'n_estimators': 125, 'subsample': 0.8435250218254727, 'max_depth': 5, 'min_child_weight': 2, 'gamma': 0.4482637680238801, 'colsample_bytree': 0.7452636048664553, 'reg_alpha': 3.419337725702449, 'reg_lambda': 3.8503653469002277, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:32,116] Trial 140 finished with value: 216.51030224104466 and parameters: {'learning_rate': 0.08132431579516596, 'n_estimators': 129, 'subsample': 0.8221120165727054, 'max_depth': 6, 'min_child_weight': 3, 'gamma': 2.8764945455746034, 'colsample_bytree': 0.6828933845179246, 'reg_alpha': 4.025220668785409, 'reg_lambda': 3.5736180934529314, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:33,029] Trial 141 finished with value: 212.06690325813057 and parameters: {'learning_rate': 0.053605493983035754, 'n_estimators': 136, 'subsample': 0.8372380227126532, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.048351296724099595, 'colsample_bytree': 0.7313060999545704, 'reg_alpha': 3.694343123240509, 'reg_lambda': 3.48181869629845, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:33,851] Trial 142 finished with value: 207.78171296125493 and parameters: {'learning_rate': 0.06063658634366685, 'n_estimators': 120, 'subsample': 0.7941733658941847, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.01915764339210849, 'colsample_bytree': 0.7639945907944722, 'reg_alpha': 4.275913048508702, 'reg_lambda': 3.2968708887601847, 'random_state': 1}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:34,487] Trial 143 finished with value: 208.4830527338397 and parameters: {'learning_rate': 0.06922681521944253, 'n_estimators': 131, 'subsample': 0.8304384154000237, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.1833115401728873, 'colsample_bytree': 0.6778428195312891, 'reg_alpha': 2.155599230667886, 'reg_lambda': 3.131926495320676, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:36,034] Trial 144 finished with value: 206.82359866618071 and parameters: {'learning_rate': 0.0482254883939966, 'n_estimators': 138, 'subsample': 0.859752985154773, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.007416601355734187, 'colsample_bytree': 0.9727010922706727, 'reg_alpha': 4.716394855336295, 'reg_lambda': 3.78885902874091, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:36,877] Trial 145 finished with value: 207.70835645024437 and parameters: {'learning_rate': 0.04420785197161094, 'n_estimators': 134, 'subsample': 0.8093236910889136, 'max_depth': 7, 'min_child_weight': 6, 'gamma': 4.525851243695312, 'colsample_bytree': 0.9783114464694418, 'reg_alpha': 3.115641087836293, 'reg_lambda': 3.647062094577966, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:37,679] Trial 146 finished with value: 207.04417522156064 and parameters: {'learning_rate': 0.09906963603690458, 'n_estimators': 141, 'subsample': 0.8461044579836623, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.2919796769288609, 'colsample_bytree': 0.9927452697048728, 'reg_alpha': 2.993379915506837, 'reg_lambda': 3.428158672636701, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:39,188] Trial 147 finished with value: 201.54869169761608 and parameters: {'learning_rate': 0.05250028239097787, 'n_estimators': 131, 'subsample': 0.8674276079869359, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.15812356132720598, 'colsample_bytree': 0.9672805070477428, 'reg_alpha': 2.3140961308212993, 'reg_lambda': 3.5805643142360832, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:41,009] Trial 148 finished with value: 214.44477346322526 and parameters: {'learning_rate': 0.0748088100248506, 'n_estimators': 127, 'subsample': 0.8718793647763383, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.5635183917078509, 'colsample_bytree': 0.63046377028979, 'reg_alpha': 2.3073503741653094, 'reg_lambda': 3.318596796588015, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:42,015] Trial 149 finished with value: 209.48691910094973 and parameters: {'learning_rate': 0.05724990396102697, 'n_estimators': 124, 'subsample': 0.8244640657181244, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.16097787534840713, 'colsample_bytree': 0.6567348964693193, 'reg_alpha': 1.8857649290518008, 'reg_lambda': 3.558386693433797, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:47,224] Trial 150 finished with value: 211.29208212367013 and parameters: {'learning_rate': 0.06589706658063985, 'n_estimators': 120, 'subsample': 0.881682141700509, 'max_depth': 9, 'min_child_weight': 1, 'gamma': 0.6590092739322833, 'colsample_bytree': 0.9997926199929336, 'reg_alpha': 2.3669789506278756, 'reg_lambda': 3.7001791344566084, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:48,250] Trial 151 finished with value: 214.30387096675247 and parameters: {'learning_rate': 0.0400830889811981, 'n_estimators': 131, 'subsample': 0.5869778660138045, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.23812288829763478, 'colsample_bytree': 0.9695498102504293, 'reg_alpha': 2.155485286745991, 'reg_lambda': 3.4671221838926525, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:49,368] Trial 152 finished with value: 205.06453323387325 and parameters: {'learning_rate': 0.05056480586937836, 'n_estimators': 136, 'subsample': 0.8584077862365865, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.11368294964495082, 'colsample_bytree': 0.9827703171550126, 'reg_alpha': 3.277163277764999, 'reg_lambda': 3.9495093385042845, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:50,431] Trial 153 finished with value: 201.77686283173566 and parameters: {'learning_rate': 0.05387594290107814, 'n_estimators': 133, 'subsample': 0.8404307752747707, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3440525662026187, 'colsample_bytree': 0.9592708289425262, 'reg_alpha': 3.3196306796163557, 'reg_lambda': 3.597976160269844, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:51,165] Trial 154 finished with value: 203.44598122953397 and parameters: {'learning_rate': 0.06084511601915698, 'n_estimators': 128, 'subsample': 0.8680870194199197, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.4202794255852735, 'colsample_bytree': 0.9539849372143915, 'reg_alpha': 3.359534183726043, 'reg_lambda': 3.6265180748459773, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:51,900] Trial 155 finished with value: 206.27331709886727 and parameters: {'learning_rate': 0.05331670730929803, 'n_estimators': 126, 'subsample': 0.8675239289464984, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.3621125032004035, 'colsample_bytree': 0.9563142292646585, 'reg_alpha': 3.7031711337010087, 'reg_lambda': 3.617036986726688, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:52,692] Trial 156 finished with value: 208.21785176852737 and parameters: {'learning_rate': 0.05998159298856559, 'n_estimators': 144, 'subsample': 0.885375477267521, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.4124184966402733, 'colsample_bytree': 0.9387289222431168, 'reg_alpha': 3.5645840249811216, 'reg_lambda': 3.828855222236961, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:53,217] Trial 157 finished with value: 214.8226970334409 and parameters: {'learning_rate': 0.06850035727151967, 'n_estimators': 129, 'subsample': 0.847160499651935, 'max_depth': 5, 'min_child_weight': 2, 'gamma': 0.25237008834850855, 'colsample_bytree': 0.960139444928379, 'reg_alpha': 3.28874109153654, 'reg_lambda': 3.52967274575567, 'random_state': 2}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:53,805] Trial 158 finished with value: 210.58456401777596 and parameters: {'learning_rate': 0.06034537756927907, 'n_estimators': 140, 'subsample': 0.872174481845106, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.5328343524249403, 'colsample_bytree': 0.5244696469928929, 'reg_alpha': 3.3578554573179495, 'reg_lambda': 3.7441377702614065, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:54,113] Trial 159 finished with value: 245.65093024237 and parameters: {'learning_rate': 0.05630929863252699, 'n_estimators': 134, 'subsample': 0.5447519861913068, 'max_depth': 3, 'min_child_weight': 1, 'gamma': 0.30285651803248737, 'colsample_bytree': 0.9883207833899798, 'reg_alpha': 3.0717039064701295, 'reg_lambda': 3.3780431601459515, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:54,886] Trial 160 finished with value: 205.14146064204988 and parameters: {'learning_rate': 0.051675363012674815, 'n_estimators': 120, 'subsample': 0.8121447099210862, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.16251225865653735, 'colsample_bytree': 0.7182866563456916, 'reg_alpha': 2.8558733829433796, 'reg_lambda': 3.2217399912765843, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:36:56,055] Trial 161 finished with value: 209.11723596367992 and parameters: {'learning_rate': 0.07760893835949906, 'n_estimators': 137, 'subsample': 0.8271336365916304, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.4530866614472808, 'colsample_bytree': 0.9680768453579766, 'reg_alpha': 1.9876314679866764, 'reg_lambda': 3.452083512507297, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:00,991] Trial 162 finished with value: 210.19585727710242 and parameters: {'learning_rate': 0.08320148576129584, 'n_estimators': 130, 'subsample': 0.8541630138045407, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.38913931688883346, 'colsample_bytree': 0.9740731420863745, 'reg_alpha': 3.1625463876974305, 'reg_lambda': 3.6218584267503333, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:02,022] Trial 163 finished with value: 205.55771480568018 and parameters: {'learning_rate': 0.0712680343593132, 'n_estimators': 127, 'subsample': 0.8365670151760057, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.32647990660610143, 'colsample_bytree': 0.949550507397312, 'reg_alpha': 2.076713746077953, 'reg_lambda': 3.3182543428373914, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:02,731] Trial 164 finished with value: 209.04888927606035 and parameters: {'learning_rate': 0.06467676233435586, 'n_estimators': 134, 'subsample': 0.8168709053784393, 'max_depth': 6, 'min_child_weight': 4, 'gamma': 0.7278326775616453, 'colsample_bytree': 0.9889446643428021, 'reg_alpha': 3.406514349189875, 'reg_lambda': 3.5572796350805196, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:03,321] Trial 165 finished with value: 209.71856754480362 and parameters: {'learning_rate': 0.04524798304078097, 'n_estimators': 139, 'subsample': 0.8603000879382051, 'max_depth': 5, 'min_child_weight': 2, 'gamma': 1.792226022448284, 'colsample_bytree': 0.9658392034341463, 'reg_alpha': 1.7247568749646924, 'reg_lambda': 3.682801006166156, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:04,551] Trial 166 finished with value: 207.35576042229735 and parameters: {'learning_rate': 0.05886387868166596, 'n_estimators': 124, 'subsample': 0.8425113923806214, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.19432337430236163, 'colsample_bytree': 0.7866242017031877, 'reg_alpha': 3.8150949549138327, 'reg_lambda': 3.138633902115801, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:05,263] Trial 167 finished with value: 205.1874565798481 and parameters: {'learning_rate': 0.0869244766576299, 'n_estimators': 81, 'subsample': 0.7982999419529898, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.6037465077356754, 'colsample_bytree': 0.9779027347651059, 'reg_alpha': 4.078467078788578, 'reg_lambda': 3.407039752619737, 'random_state': 8}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:06,135] Trial 168 finished with value: 319.5149376690928 and parameters: {'learning_rate': 0.9996329661651855, 'n_estimators': 144, 'subsample': 0.7861708870287164, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.46131897765793517, 'colsample_bytree': 0.9908835934657625, 'reg_alpha': 2.2721473270580588, 'reg_lambda': 3.9320978730511897, 'random_state': 7}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:06,991] Trial 169 finished with value: 204.5213646430529 and parameters: {'learning_rate': 0.05284448120036473, 'n_estimators': 133, 'subsample': 0.830903765790466, 'max_depth': 7, 'min_child_weight': 5, 'gamma': 0.14452772516585816, 'colsample_bytree': 0.9550017810944901, 'reg_alpha': 1.8862594927893952, 'reg_lambda': 3.2574701559061694, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:08,635] Trial 170 finished with value: 206.05066815332 and parameters: {'learning_rate': 0.071215426742876, 'n_estimators': 150, 'subsample': 0.8525503186075548, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.26799940436974906, 'colsample_bytree': 0.9412359790459323, 'reg_alpha': 2.2072770603455796, 'reg_lambda': 3.5398202320579135, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:09,423] Trial 171 finished with value: 206.2999619840496 and parameters: {'learning_rate': 0.0470221127684764, 'n_estimators': 132, 'subsample': 0.8416029412458668, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.07614286874799486, 'colsample_bytree': 0.9809169789992793, 'reg_alpha': 3.4941626789492175, 'reg_lambda': 4.140294046935728, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:13,992] Trial 172 finished with value: 208.33281620416412 and parameters: {'learning_rate': 0.04105897141861898, 'n_estimators': 129, 'subsample': 0.8207005773821155, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.08446802051224687, 'colsample_bytree': 0.9993891211324554, 'reg_alpha': 2.014920309833852, 'reg_lambda': 3.837750129903014, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:15,151] Trial 173 finished with value: 206.45292768785663 and parameters: {'learning_rate': 0.06251056711294165, 'n_estimators': 137, 'subsample': 0.8354695356871066, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3383970948980841, 'colsample_bytree': 0.9746435215091213, 'reg_alpha': 1.760717060770783, 'reg_lambda': 3.7407302245292846, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:16,302] Trial 174 finished with value: 203.6840739364827 and parameters: {'learning_rate': 0.049511140287368784, 'n_estimators': 142, 'subsample': 0.8768705821928181, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.21154297490325186, 'colsample_bytree': 0.9645135684213666, 'reg_alpha': 4.191577141905954, 'reg_lambda': 3.4711813788016816, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:17,452] Trial 175 finished with value: 203.45402961492917 and parameters: {'learning_rate': 0.053372512934353765, 'n_estimators': 143, 'subsample': 0.8918514331691697, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.4934236942580575, 'colsample_bytree': 0.963446991637546, 'reg_alpha': 3.9855061575210744, 'reg_lambda': 3.459680066870419, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:18,275] Trial 176 finished with value: 205.43140802304666 and parameters: {'learning_rate': 0.053583816688816926, 'n_estimators': 148, 'subsample': 0.8936350390378345, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.21146609858226678, 'colsample_bytree': 0.9576623968121103, 'reg_alpha': 4.016079208884354, 'reg_lambda': 3.4832629676397113, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:19,367] Trial 177 finished with value: 207.68014347917685 and parameters: {'learning_rate': 0.03603762533743458, 'n_estimators': 140, 'subsample': 0.8782745018571175, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.5282300695865296, 'colsample_bytree': 0.926675869302309, 'reg_alpha': 4.198968176095346, 'reg_lambda': 3.6699232158874713, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:20,511] Trial 178 finished with value: 199.42518292288835 and parameters: {'learning_rate': 0.04964930808396437, 'n_estimators': 143, 'subsample': 0.9029693972031737, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.38592237497897175, 'colsample_bytree': 0.9871146132851069, 'reg_alpha': 4.197576462605791, 'reg_lambda': 3.36116599561066, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:21,987] Trial 179 finished with value: 205.73662209033333 and parameters: {'learning_rate': 0.04303707066000622, 'n_estimators': 145, 'subsample': 0.889051451888238, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.015839495667801053, 'colsample_bytree': 0.9639508074108227, 'reg_alpha': 3.875621546784091, 'reg_lambda': 3.3538141430727784, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:23,526] Trial 180 finished with value: 212.66297820601883 and parameters: {'learning_rate': 0.05022465570431226, 'n_estimators': 142, 'subsample': 0.89995939170638, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.3716451501454717, 'colsample_bytree': 0.946933057064714, 'reg_alpha': 4.1977516988312935, 'reg_lambda': 3.4359541005846466, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:27,993] Trial 181 finished with value: 203.3953812905567 and parameters: {'learning_rate': 0.057721586182439784, 'n_estimators': 141, 'subsample': 0.9017443779873411, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2060836877662518, 'colsample_bytree': 0.9864364169226159, 'reg_alpha': 3.9584210549453225, 'reg_lambda': 3.5753408343963606, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:29,185] Trial 182 finished with value: 201.30860123390576 and parameters: {'learning_rate': 0.0578949771664654, 'n_estimators': 147, 'subsample': 0.9041706539397312, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.24597192134361495, 'colsample_bytree': 0.9825144443195172, 'reg_alpha': 4.397003522222722, 'reg_lambda': 3.5888857126743376, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:30,424] Trial 183 finished with value: 204.31575079892164 and parameters: {'learning_rate': 0.06207058639397347, 'n_estimators': 152, 'subsample': 0.9140309016012813, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2571549677956884, 'colsample_bytree': 0.9847093425059834, 'reg_alpha': 3.913984349745141, 'reg_lambda': 3.580333435799069, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:31,934] Trial 184 finished with value: 207.70116022393947 and parameters: {'learning_rate': 0.05721396910009089, 'n_estimators': 139, 'subsample': 0.8998690627433517, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 3.692942303223532, 'colsample_bytree': 0.9917068246765229, 'reg_alpha': 4.00128887187601, 'reg_lambda': 3.317311465106333, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:33,113] Trial 185 finished with value: 201.58030684182313 and parameters: {'learning_rate': 0.06553531355494258, 'n_estimators': 147, 'subsample': 0.892399028413227, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.4409588327408621, 'colsample_bytree': 0.9753170292610074, 'reg_alpha': 3.727640494725017, 'reg_lambda': 3.609002999152681, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:33,964] Trial 186 finished with value: 207.6149467475564 and parameters: {'learning_rate': 0.06618575232834875, 'n_estimators': 151, 'subsample': 0.9082625806078389, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.42908498191217503, 'colsample_bytree': 0.9739475603734704, 'reg_alpha': 3.650637233665077, 'reg_lambda': 3.6679280698993098, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:35,124] Trial 187 finished with value: 202.66294661711268 and parameters: {'learning_rate': 0.05625256863169235, 'n_estimators': 144, 'subsample': 0.927258556238761, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0013786451165435643, 'colsample_bytree': 0.9806793970888098, 'reg_alpha': 4.400708568587736, 'reg_lambda': 3.5862801244015508, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:36,338] Trial 188 finished with value: 204.39724561180313 and parameters: {'learning_rate': 0.05587688547429543, 'n_estimators': 148, 'subsample': 0.8902573486815071, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.13167759741706525, 'colsample_bytree': 0.9817340504130446, 'reg_alpha': 4.466520799511452, 'reg_lambda': 3.5878287475440094, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:42,051] Trial 189 finished with value: 212.27247911813058 and parameters: {'learning_rate': 0.060670931405251274, 'n_estimators': 147, 'subsample': 0.909311036413944, 'max_depth': 9, 'min_child_weight': 1, 'gamma': 0.01337647314102891, 'colsample_bytree': 0.9987142002859697, 'reg_alpha': 4.346218486498404, 'reg_lambda': 3.8075688955011326, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:52,378] Trial 190 finished with value: 226.13056533408755 and parameters: {'learning_rate': 0.07260414635581006, 'n_estimators': 154, 'subsample': 0.9053537234995386, 'max_depth': 17, 'min_child_weight': 1, 'gamma': 0.13571664747264736, 'colsample_bytree': 0.9676587390857528, 'reg_alpha': 4.417021891044259, 'reg_lambda': 3.5209091195790463, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:56,386] Trial 191 finished with value: 203.2546505978385 and parameters: {'learning_rate': 0.05363800862737686, 'n_estimators': 145, 'subsample': 0.9248883701354672, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2999015555231362, 'colsample_bytree': 0.9776533006121894, 'reg_alpha': 4.626162095179705, 'reg_lambda': 3.624802869753539, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:57,612] Trial 192 finished with value: 202.63072244366765 and parameters: {'learning_rate': 0.05345754281547962, 'n_estimators': 146, 'subsample': 0.9274128850815049, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2414919826815214, 'colsample_bytree': 0.9831601686466266, 'reg_alpha': 3.7602578325132443, 'reg_lambda': 3.629327332271723, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:58,471] Trial 193 finished with value: 210.9684957943914 and parameters: {'learning_rate': 0.06530888541007568, 'n_estimators': 146, 'subsample': 0.9239594668055036, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.2855364786970158, 'colsample_bytree': 0.9829953040710337, 'reg_alpha': 3.7907912895238, 'reg_lambda': 3.6361767613629, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:37:59,630] Trial 194 finished with value: 203.2737101171089 and parameters: {'learning_rate': 0.059490748858510765, 'n_estimators': 145, 'subsample': 0.9293904504457592, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1861199081690007, 'colsample_bytree': 0.9880105089784869, 'reg_alpha': 4.647607580187151, 'reg_lambda': 3.7493302638636363, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:01,298] Trial 195 finished with value: 203.4444550078116 and parameters: {'learning_rate': 0.05653068253721904, 'n_estimators': 145, 'subsample': 0.9185287806145536, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.18669774216060436, 'colsample_bytree': 0.990399033437499, 'reg_alpha': 4.737308729644299, 'reg_lambda': 3.71945254332746, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:02,535] Trial 196 finished with value: 201.18957257224753 and parameters: {'learning_rate': 0.04632993995284186, 'n_estimators': 151, 'subsample': 0.9291869178517977, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.11906724572921287, 'colsample_bytree': 0.9812655327252776, 'reg_alpha': 4.682194496195592, 'reg_lambda': 3.83809816401168, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:03,753] Trial 197 finished with value: 204.57648204106405 and parameters: {'learning_rate': 0.04412678908196222, 'n_estimators': 150, 'subsample': 0.9343210850470791, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.08877804988159427, 'colsample_bytree': 0.9755068882103878, 'reg_alpha': 4.691344073334803, 'reg_lambda': 3.8663103682738824, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:05,513] Trial 198 finished with value: 207.3018936523746 and parameters: {'learning_rate': 0.04940790907927381, 'n_estimators': 153, 'subsample': 0.9391423163666383, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.30769539590387673, 'colsample_bytree': 0.998192024249289, 'reg_alpha': 4.555177842380356, 'reg_lambda': 4.023974677906771, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:10,175] Trial 199 finished with value: 203.82850925739098 and parameters: {'learning_rate': 0.0452690894799752, 'n_estimators': 149, 'subsample': 0.9269398636694978, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.10503888801312403, 'colsample_bytree': 0.9813365116224322, 'reg_alpha': 4.565458855708109, 'reg_lambda': 3.7739977937463944, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:11,427] Trial 200 finished with value: 202.6663120667504 and parameters: {'learning_rate': 0.05122640185109895, 'n_estimators': 159, 'subsample': 0.9217468023256099, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.017046390658561367, 'colsample_bytree': 0.9740219980353918, 'reg_alpha': 4.935782722656195, 'reg_lambda': 3.9627233477903503, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:12,710] Trial 201 finished with value: 201.5339838357295 and parameters: {'learning_rate': 0.05334520575252347, 'n_estimators': 156, 'subsample': 0.9246830649927437, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0684862959666277, 'colsample_bytree': 0.973463535309971, 'reg_alpha': 4.860899671974254, 'reg_lambda': 3.912520645982972, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:14,021] Trial 202 finished with value: 202.582661778332 and parameters: {'learning_rate': 0.05126462813352418, 'n_estimators': 157, 'subsample': 0.9427088869305545, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.05597167125836128, 'colsample_bytree': 0.9708424482661364, 'reg_alpha': 4.6164622028249775, 'reg_lambda': 3.9405964727105567, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:15,292] Trial 203 finished with value: 203.05911584227832 and parameters: {'learning_rate': 0.05070913507195037, 'n_estimators': 157, 'subsample': 0.9461046892788152, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.002165667494947482, 'colsample_bytree': 0.9680111378808431, 'reg_alpha': 4.6569378965766, 'reg_lambda': 3.9668884691391453, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:16,558] Trial 204 finished with value: 202.1789999048009 and parameters: {'learning_rate': 0.04163244507728824, 'n_estimators': 157, 'subsample': 0.9456687263954545, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.024029242844972754, 'colsample_bytree': 0.9712096008956328, 'reg_alpha': 4.926468817373997, 'reg_lambda': 3.975981587734313, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:17,471] Trial 205 finished with value: 210.0469850139301 and parameters: {'learning_rate': 0.03892623490569392, 'n_estimators': 161, 'subsample': 0.9492611013567749, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.015838577333802, 'colsample_bytree': 0.968247771174254, 'reg_alpha': 4.977193319330856, 'reg_lambda': 4.081098208347428, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:18,701] Trial 206 finished with value: 201.03367645965645 and parameters: {'learning_rate': 0.041344106334351, 'n_estimators': 158, 'subsample': 0.9479517269451463, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.013318485576601154, 'colsample_bytree': 0.9587777965940248, 'reg_alpha': 4.927180222571376, 'reg_lambda': 3.911276273112197, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:27,604] Trial 207 finished with value: 223.62331862337686 and parameters: {'learning_rate': 0.043200811793669705, 'n_estimators': 163, 'subsample': 0.9417014196558308, 'max_depth': 12, 'min_child_weight': 1, 'gamma': 0.0005627121803952085, 'colsample_bytree': 0.9572150350109163, 'reg_alpha': 4.861138185857112, 'reg_lambda': 3.9981816262046665, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:28,861] Trial 208 finished with value: 200.81714189809787 and parameters: {'learning_rate': 0.03659082562828232, 'n_estimators': 158, 'subsample': 0.9465821937505593, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.00424135768136609, 'colsample_bytree': 0.9493733661918781, 'reg_alpha': 4.999881776604513, 'reg_lambda': 3.9545605883315713, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:30,109] Trial 209 finished with value: 207.03508781841484 and parameters: {'learning_rate': 0.030736628321367223, 'n_estimators': 158, 'subsample': 0.9577399982112786, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.12672798432834517, 'colsample_bytree': 0.9519495054550917, 'reg_alpha': 4.892143712169173, 'reg_lambda': 3.953012626744416, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:31,392] Trial 210 finished with value: 203.45266755502942 and parameters: {'learning_rate': 0.03317283832953583, 'n_estimators': 158, 'subsample': 0.9456888601099964, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.010207218098541013, 'colsample_bytree': 0.9658928986541473, 'reg_alpha': 4.992778197748719, 'reg_lambda': 3.9254468681043835, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:32,667] Trial 211 finished with value: 201.69764329672563 and parameters: {'learning_rate': 0.03687031121945839, 'n_estimators': 156, 'subsample': 0.9698309355225587, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.008250163230554386, 'colsample_bytree': 0.9704633484585375, 'reg_alpha': 4.801515708251308, 'reg_lambda': 3.9951048042843698, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:37,299] Trial 212 finished with value: 203.52974618035975 and parameters: {'learning_rate': 0.03844190441144654, 'n_estimators': 155, 'subsample': 0.9635899679723352, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.006000496724800732, 'colsample_bytree': 0.971478342085726, 'reg_alpha': 4.810870062254535, 'reg_lambda': 4.074394182721461, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:38,583] Trial 213 finished with value: 203.10358432563615 and parameters: {'learning_rate': 0.03556491050046261, 'n_estimators': 161, 'subsample': 0.9744477717274791, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1037214732158978, 'colsample_bytree': 0.9454057211240813, 'reg_alpha': 4.968530297379295, 'reg_lambda': 3.930703036511916, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:40,260] Trial 214 finished with value: 205.77112917566632 and parameters: {'learning_rate': 0.04141493671216994, 'n_estimators': 157, 'subsample': 0.9401647967443058, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.14916657179177542, 'colsample_bytree': 0.959450194258044, 'reg_alpha': 4.887194208988222, 'reg_lambda': 4.110796625706899, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:41,545] Trial 215 finished with value: 203.32727627488498 and parameters: {'learning_rate': 0.04681930825509927, 'n_estimators': 163, 'subsample': 0.9516896520298727, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.11146182029900205, 'colsample_bytree': 0.9726193970204859, 'reg_alpha': 4.7527551091865226, 'reg_lambda': 3.867725705743588, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:42,741] Trial 216 finished with value: 199.463432235677 and parameters: {'learning_rate': 0.03701464416536109, 'n_estimators': 155, 'subsample': 0.9322109684400349, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0008260887308187484, 'colsample_bytree': 0.9609636366793213, 'reg_alpha': 4.621688138139211, 'reg_lambda': 4.229258959168792, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:44,495] Trial 217 finished with value: 208.57408029424107 and parameters: {'learning_rate': 0.03336577609716221, 'n_estimators': 154, 'subsample': 0.917531940594764, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.22133654016655985, 'colsample_bytree': 0.9519962629679812, 'reg_alpha': 4.872686563630227, 'reg_lambda': 4.121991277106936, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:45,745] Trial 218 finished with value: 205.93329552561045 and parameters: {'learning_rate': 0.029490467760235062, 'n_estimators': 161, 'subsample': 0.9298822309437853, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.10927619398579927, 'colsample_bytree': 0.9394450351194025, 'reg_alpha': 4.390028379096964, 'reg_lambda': 3.8351051678303327, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:47,010] Trial 219 finished with value: 203.03664401118252 and parameters: {'learning_rate': 0.03808804828217802, 'n_estimators': 154, 'subsample': 0.9663777238232902, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.20110420270006904, 'colsample_bytree': 0.9756971358270713, 'reg_alpha': 4.799297077625569, 'reg_lambda': 4.048230510069606, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:51,384] Trial 220 finished with value: 205.71371709618825 and parameters: {'learning_rate': 0.036087462878099774, 'n_estimators': 158, 'subsample': 0.9342891240114061, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.1023548022555219, 'colsample_bytree': 0.9599496189610472, 'reg_alpha': 4.924633672911151, 'reg_lambda': 4.1913107380863375, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:52,614] Trial 221 finished with value: 205.08503759638205 and parameters: {'learning_rate': 0.03931679030980007, 'n_estimators': 154, 'subsample': 0.9658185381940236, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.21925498905983987, 'colsample_bytree': 0.9778350393147683, 'reg_alpha': 4.784089394017275, 'reg_lambda': 4.017641085272679, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:53,846] Trial 222 finished with value: 200.75692416458605 and parameters: {'learning_rate': 0.041132250457285524, 'n_estimators': 152, 'subsample': 0.9613538778601044, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.20407941883521227, 'colsample_bytree': 0.9737689196611317, 'reg_alpha': 4.615845559718807, 'reg_lambda': 4.287981984554794, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:55,173] Trial 223 finished with value: 203.5595398472413 and parameters: {'learning_rate': 0.042596541615659234, 'n_estimators': 165, 'subsample': 0.9495412983132934, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0029753384748137353, 'colsample_bytree': 0.9660658318763675, 'reg_alpha': 4.595939279873277, 'reg_lambda': 3.903459359229561, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:56,959] Trial 224 finished with value: 205.15838719011904 and parameters: {'learning_rate': 0.04649131776841308, 'n_estimators': 152, 'subsample': 0.9562086044151156, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.27062207756470547, 'colsample_bytree': 0.9739352200755826, 'reg_alpha': 4.463306406674124, 'reg_lambda': 4.234068283535241, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:58,174] Trial 225 finished with value: 199.8578217383069 and parameters: {'learning_rate': 0.04140179798856173, 'n_estimators': 151, 'subsample': 0.9218813650519122, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.11322372283336737, 'colsample_bytree': 0.9577180961486715, 'reg_alpha': 4.980782171699211, 'reg_lambda': 4.243477723341253, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:38:59,438] Trial 226 finished with value: 204.19081700848335 and parameters: {'learning_rate': 0.03329692070809637, 'n_estimators': 159, 'subsample': 0.9155585740614499, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1790019119453634, 'colsample_bytree': 0.9354621139895779, 'reg_alpha': 4.979461640123737, 'reg_lambda': 4.301772442161457, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:00,268] Trial 227 finished with value: 208.73473311837026 and parameters: {'learning_rate': 0.040590872429323396, 'n_estimators': 150, 'subsample': 0.9263086091979545, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.33042342262105934, 'colsample_bytree': 0.9507102265003424, 'reg_alpha': 4.724709244811048, 'reg_lambda': 4.271407851485395, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:05,467] Trial 228 finished with value: 204.56917124848638 and parameters: {'learning_rate': 0.036293161917533664, 'n_estimators': 156, 'subsample': 0.93780598613043, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.12205544194742404, 'colsample_bytree': 0.9602974424715637, 'reg_alpha': 4.893465340479931, 'reg_lambda': 4.176330800865945, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:06,666] Trial 229 finished with value: 204.28448119661027 and parameters: {'learning_rate': 0.04497614274229207, 'n_estimators': 150, 'subsample': 0.9182831762834622, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.24572702383653686, 'colsample_bytree': 0.9610256215156355, 'reg_alpha': 4.266992093590514, 'reg_lambda': 3.8062545426038, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:07,877] Trial 230 finished with value: 201.34714180015135 and parameters: {'learning_rate': 0.04113564729914063, 'n_estimators': 153, 'subsample': 0.93079541417908, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0948885844604748, 'colsample_bytree': 0.9473305202796527, 'reg_alpha': 4.656570793511832, 'reg_lambda': 4.009289319211454, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:09,083] Trial 231 finished with value: 199.99260083126222 and parameters: {'learning_rate': 0.04062303357425453, 'n_estimators': 153, 'subsample': 0.9322980556608913, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1106694183539836, 'colsample_bytree': 0.9435276643192094, 'reg_alpha': 4.59611285973371, 'reg_lambda': 4.021483021896111, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:10,312] Trial 232 finished with value: 200.76759754510198 and parameters: {'learning_rate': 0.04084192545325525, 'n_estimators': 153, 'subsample': 0.9302218144326405, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.00032480217171537706, 'colsample_bytree': 0.9314887567740755, 'reg_alpha': 4.5972346733982326, 'reg_lambda': 4.0698543705656585, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:11,536] Trial 233 finished with value: 202.68397730324364 and parameters: {'learning_rate': 0.03789754092792233, 'n_estimators': 154, 'subsample': 0.9388902263115827, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1178546626784, 'colsample_bytree': 0.9235586110061557, 'reg_alpha': 4.596425552076965, 'reg_lambda': 4.227132545415997, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:12,750] Trial 234 finished with value: 203.12953140848464 and parameters: {'learning_rate': 0.04138328117633642, 'n_estimators': 152, 'subsample': 0.9306685947070403, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.10240402489619901, 'colsample_bytree': 0.9149439582790436, 'reg_alpha': 4.659462841428856, 'reg_lambda': 4.147538360779175, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:14,522] Trial 235 finished with value: 209.99673131529403 and parameters: {'learning_rate': 0.030659522953149002, 'n_estimators': 155, 'subsample': 0.9471815942405121, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.1762979747348825, 'colsample_bytree': 0.9329016631653172, 'reg_alpha': 4.507615924140193, 'reg_lambda': 4.05083286101226, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:19,157] Trial 236 finished with value: 202.05049373441634 and parameters: {'learning_rate': 0.03562260397346501, 'n_estimators': 148, 'subsample': 0.9112456272954723, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3445866437277417, 'colsample_bytree': 0.9452256575656451, 'reg_alpha': 4.446575035988107, 'reg_lambda': 4.095995603559656, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:20,346] Trial 237 finished with value: 203.8550286407488 and parameters: {'learning_rate': 0.03460055195689525, 'n_estimators': 149, 'subsample': 0.911755768776205, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3188746929411632, 'colsample_bytree': 0.9425928697024717, 'reg_alpha': 4.668455143925046, 'reg_lambda': 4.271381196019003, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:21,537] Trial 238 finished with value: 204.44296661369245 and parameters: {'learning_rate': 0.04053286095832124, 'n_estimators': 150, 'subsample': 0.9064211254157634, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.382189602222504, 'colsample_bytree': 0.9330034546795014, 'reg_alpha': 4.793929209147455, 'reg_lambda': 4.068608022935972, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:22,780] Trial 239 finished with value: 205.26660143369403 and parameters: {'learning_rate': 0.03570285122313406, 'n_estimators': 156, 'subsample': 0.9587541040085631, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.24289547232214215, 'colsample_bytree': 0.9444120743441611, 'reg_alpha': 4.516017601595839, 'reg_lambda': 4.348155682668047, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:24,543] Trial 240 finished with value: 215.191482571912 and parameters: {'learning_rate': 0.028438182326743305, 'n_estimators': 153, 'subsample': 0.9772874090509561, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.18162514514789685, 'colsample_bytree': 0.9503070451962433, 'reg_alpha': 4.582356985298257, 'reg_lambda': 4.1264221531894965, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:25,728] Trial 241 finished with value: 201.5927185381955 and parameters: {'learning_rate': 0.04311301119628462, 'n_estimators': 148, 'subsample': 0.9316474126221982, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.11309184638371335, 'colsample_bytree': 0.9558466276099604, 'reg_alpha': 4.384136786630154, 'reg_lambda': 3.99704445592915, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:26,922] Trial 242 finished with value: 201.55248014979483 and parameters: {'learning_rate': 0.0438391789555573, 'n_estimators': 147, 'subsample': 0.9361819288520887, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.09632578122146039, 'colsample_bytree': 0.949470256402585, 'reg_alpha': 4.456668431741842, 'reg_lambda': 3.993939469645784, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:28,124] Trial 243 finished with value: 199.67111345153788 and parameters: {'learning_rate': 0.04294918431663218, 'n_estimators': 152, 'subsample': 0.9414388332849313, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.10678726522003185, 'colsample_bytree': 0.9422002633428601, 'reg_alpha': 4.422532797698465, 'reg_lambda': 4.002505529463506, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:32,799] Trial 244 finished with value: 202.31333838745385 and parameters: {'learning_rate': 0.04312052324359241, 'n_estimators': 148, 'subsample': 0.9410958157732252, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.14078480813816976, 'colsample_bytree': 0.9397698424568935, 'reg_alpha': 4.412129700176036, 'reg_lambda': 4.004947660863022, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:33,978] Trial 245 finished with value: 203.87321589982636 and parameters: {'learning_rate': 0.04238295696146748, 'n_estimators': 148, 'subsample': 0.9354778915442216, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.10594982488316816, 'colsample_bytree': 0.9372087455604559, 'reg_alpha': 4.298520316372676, 'reg_lambda': 4.033586425402024, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:35,205] Trial 246 finished with value: 201.64332618234693 and parameters: {'learning_rate': 0.037415160352450516, 'n_estimators': 151, 'subsample': 0.9558545499545045, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.00017268910231692247, 'colsample_bytree': 0.943179988910818, 'reg_alpha': 4.438807220779818, 'reg_lambda': 4.172271225586041, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:36,433] Trial 247 finished with value: 203.58999574026498 and parameters: {'learning_rate': 0.03232862056969363, 'n_estimators': 152, 'subsample': 0.9531510640276537, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.002867571801791105, 'colsample_bytree': 0.9252520921775513, 'reg_alpha': 4.411498576519427, 'reg_lambda': 4.169733309454308, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:38,124] Trial 248 finished with value: 207.21391243760246 and parameters: {'learning_rate': 0.03578558489848643, 'n_estimators': 151, 'subsample': 0.9691573247576054, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.10992283900954795, 'colsample_bytree': 0.9468162942469164, 'reg_alpha': 4.479572745535251, 'reg_lambda': 4.090650575777482, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:39,315] Trial 249 finished with value: 204.07942651108286 and parameters: {'learning_rate': 0.039169521696634874, 'n_estimators': 152, 'subsample': 0.9890690798646755, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.08935457373608752, 'colsample_bytree': 0.9112620030388513, 'reg_alpha': 4.292530564718991, 'reg_lambda': 4.329723709354406, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:40,990] Trial 250 finished with value: 209.29384862536403 and parameters: {'learning_rate': 0.03793669413999262, 'n_estimators': 155, 'subsample': 0.9130549957541234, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.30678461128298684, 'colsample_bytree': 0.9558324027807, 'reg_alpha': 4.707593197852824, 'reg_lambda': 4.2145119173828425, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:42,187] Trial 251 finished with value: 200.4909477248599 and parameters: {'learning_rate': 0.04488878350935284, 'n_estimators': 149, 'subsample': 0.9580992241454621, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1889455801707159, 'colsample_bytree': 0.9504762545457655, 'reg_alpha': 4.530393488927873, 'reg_lambda': 3.909888563992779, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:46,796] Trial 252 finished with value: 201.2450039049381 and parameters: {'learning_rate': 0.044412189073770994, 'n_estimators': 148, 'subsample': 0.9604318934875242, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18684362895035614, 'colsample_bytree': 0.9295461415777957, 'reg_alpha': 4.511343665977679, 'reg_lambda': 3.935078705722, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:47,940] Trial 253 finished with value: 200.40549206338903 and parameters: {'learning_rate': 0.045572811628310596, 'n_estimators': 148, 'subsample': 0.9615980336976861, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2092418991664813, 'colsample_bytree': 0.9214401073323476, 'reg_alpha': 4.521377343138428, 'reg_lambda': 3.871203856531954, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:49,074] Trial 254 finished with value: 202.77132755077605 and parameters: {'learning_rate': 0.04512500935092246, 'n_estimators': 147, 'subsample': 0.9607661805525913, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18397870740534084, 'colsample_bytree': 0.920703053143568, 'reg_alpha': 4.62320492880712, 'reg_lambda': 3.872411045017508, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:50,739] Trial 255 finished with value: 205.06196593077166 and parameters: {'learning_rate': 0.047139685413300034, 'n_estimators': 151, 'subsample': 0.9690685571591633, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.1854467995635111, 'colsample_bytree': 0.9332076715908323, 'reg_alpha': 4.504620155088693, 'reg_lambda': 3.8921136564242795, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:51,582] Trial 256 finished with value: 208.6548073731086 and parameters: {'learning_rate': 0.045946517656149655, 'n_estimators': 149, 'subsample': 0.9781689417877506, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.1054435188051972, 'colsample_bytree': 0.9008438564613118, 'reg_alpha': 4.339059147295055, 'reg_lambda': 3.9789183149216547, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:52,785] Trial 257 finished with value: 202.46323144002616 and parameters: {'learning_rate': 0.04001548244149533, 'n_estimators': 152, 'subsample': 0.9592408798777772, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.25786021919523794, 'colsample_bytree': 0.9338732542257324, 'reg_alpha': 4.579199110773154, 'reg_lambda': 3.8247621100739297, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:53,949] Trial 258 finished with value: 200.6252722474274 and parameters: {'learning_rate': 0.04409210455364169, 'n_estimators': 148, 'subsample': 0.9528307764813609, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0017431337229002475, 'colsample_bytree': 0.920409108962835, 'reg_alpha': 4.753847600829052, 'reg_lambda': 3.9105104651499145, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:39:55,100] Trial 259 finished with value: 202.5912938785159 and parameters: {'learning_rate': 0.0431221225362855, 'n_estimators': 147, 'subsample': 0.9515896650407644, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.08279778386863092, 'colsample_bytree': 0.9164736212095508, 'reg_alpha': 4.764708967884094, 'reg_lambda': 3.9914033722125146, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:00,324] Trial 260 finished with value: 209.3963982730807 and parameters: {'learning_rate': 0.039313649903438136, 'n_estimators': 160, 'subsample': 0.9559556807850215, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.012856645279270716, 'colsample_bytree': 0.9061680737911411, 'reg_alpha': 4.541456058785526, 'reg_lambda': 3.8915056827910757, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:01,218] Trial 261 finished with value: 208.98855374629974 and parameters: {'learning_rate': 0.04595467741054132, 'n_estimators': 154, 'subsample': 0.9863626973350339, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.17170405968919553, 'colsample_bytree': 0.9252045705631655, 'reg_alpha': 4.696509274042477, 'reg_lambda': 4.097667663158884, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:02,421] Trial 262 finished with value: 205.6459178885688 and parameters: {'learning_rate': 0.03375189757973495, 'n_estimators': 146, 'subsample': 0.934568538201976, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.003214127486412277, 'colsample_bytree': 0.9267274134903982, 'reg_alpha': 4.388534623043238, 'reg_lambda': 3.9231022664013553, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:03,628] Trial 263 finished with value: 204.0484834697327 and parameters: {'learning_rate': 0.04204401170693985, 'n_estimators': 150, 'subsample': 0.9728494968310091, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.11111648329152576, 'colsample_bytree': 0.9446741075831516, 'reg_alpha': 4.772211934204925, 'reg_lambda': 4.24099820560368, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:05,314] Trial 264 finished with value: 226.2158791060033 and parameters: {'learning_rate': 0.02609755820380572, 'n_estimators': 143, 'subsample': 0.9479367879995735, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.2203954045494216, 'colsample_bytree': 0.9508558672691081, 'reg_alpha': 4.530439404553247, 'reg_lambda': 3.8170466056323855, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:06,202] Trial 265 finished with value: 207.84830772890237 and parameters: {'learning_rate': 0.03803699968210496, 'n_estimators': 153, 'subsample': 0.9232427526479983, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.09720698130748355, 'colsample_bytree': 0.9353641190030254, 'reg_alpha': 4.839283860133767, 'reg_lambda': 4.0252364852298825, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:07,351] Trial 266 finished with value: 201.7627841998533 and parameters: {'learning_rate': 0.04754870359964684, 'n_estimators': 149, 'subsample': 0.9359672171098581, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2180956364616487, 'colsample_bytree': 0.9183371125044918, 'reg_alpha': 4.237074756343108, 'reg_lambda': 4.1558789648727155, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:08,501] Trial 267 finished with value: 207.05736756265378 and parameters: {'learning_rate': 0.0321934884414555, 'n_estimators': 146, 'subsample': 0.9641800847623512, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.10070430799163003, 'colsample_bytree': 0.9524407116608421, 'reg_alpha': 4.692440805016109, 'reg_lambda': 3.765484638932192, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:09,727] Trial 268 finished with value: 199.22123500365305 and parameters: {'learning_rate': 0.04368342335147409, 'n_estimators': 156, 'subsample': 0.9526218048102723, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0034904824723784866, 'colsample_bytree': 0.9412285633427255, 'reg_alpha': 4.432100651071887, 'reg_lambda': 4.365617082500877, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:14,085] Trial 269 finished with value: 207.601110214818 and parameters: {'learning_rate': 0.0477581450054923, 'n_estimators': 161, 'subsample': 0.9451772330399573, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.2767052722837219, 'colsample_bytree': 0.9324663439588211, 'reg_alpha': 4.466081254506172, 'reg_lambda': 4.36356272467736, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:25,971] Trial 270 finished with value: 225.97662842354865 and parameters: {'learning_rate': 0.04283230517351327, 'n_estimators': 151, 'subsample': 0.9544410265498983, 'max_depth': 20, 'min_child_weight': 1, 'gamma': 0.1741456880888566, 'colsample_bytree': 0.9416587548121125, 'reg_alpha': 4.434774214645694, 'reg_lambda': 4.428502007993586, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:29,331] Trial 271 finished with value: 209.82337765472576 and parameters: {'learning_rate': 0.04509379412244721, 'n_estimators': 144, 'subsample': 0.9290819590116391, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.1092971813997348, 'colsample_bytree': 0.9463166173566071, 'reg_alpha': 4.332468340776022, 'reg_lambda': 4.273452827741366, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:29,871] Trial 272 finished with value: 281.9297664382689 and parameters: {'learning_rate': 0.039419019829763105, 'n_estimators': 59, 'subsample': 0.8998165615354504, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.007288370855353443, 'colsample_bytree': 0.9265779786613368, 'reg_alpha': 4.594037160214093, 'reg_lambda': 4.159567902002306, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:30,742] Trial 273 finished with value: 204.74951820950102 and parameters: {'learning_rate': 0.04779620851763407, 'n_estimators': 155, 'subsample': 0.9407314707320252, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.2839661503598661, 'colsample_bytree': 0.9548755997627757, 'reg_alpha': 4.521209062498, 'reg_lambda': 4.496937159871202, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:31,922] Trial 274 finished with value: 201.8266404198206 and parameters: {'learning_rate': 0.041712157262117786, 'n_estimators': 148, 'subsample': 0.9211137616822199, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18223677658940055, 'colsample_bytree': 0.9380688398142849, 'reg_alpha': 4.123442600052865, 'reg_lambda': 4.6098194940274215, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:33,620] Trial 275 finished with value: 210.66040421586376 and parameters: {'learning_rate': 0.04918437906696849, 'n_estimators': 159, 'subsample': 0.9342007882007244, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.0009791519927692394, 'colsample_bytree': 0.9094340309151562, 'reg_alpha': 4.33770100586136, 'reg_lambda': 3.9162386694451583, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:34,840] Trial 276 finished with value: 201.5045193263728 and parameters: {'learning_rate': 0.044078925944029596, 'n_estimators': 152, 'subsample': 0.952261573266588, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.38675179661920367, 'colsample_bytree': 0.9559468579021668, 'reg_alpha': 4.682183306844716, 'reg_lambda': 3.744634516557794, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:36,042] Trial 277 finished with value: 200.83919847984055 and parameters: {'learning_rate': 0.04400543282295646, 'n_estimators': 155, 'subsample': 0.9461827024531198, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3932849502988105, 'colsample_bytree': 0.9556636268986164, 'reg_alpha': 4.667901787973768, 'reg_lambda': 3.7601843190425264, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:37,733] Trial 278 finished with value: 209.18681513588282 and parameters: {'learning_rate': 0.04944954501167806, 'n_estimators': 157, 'subsample': 0.9496034231105135, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.4197061621267867, 'colsample_bytree': 0.9585707756717732, 'reg_alpha': 4.656845696662785, 'reg_lambda': 3.726840407103927, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:42,039] Trial 279 finished with value: 204.3912171610307 and parameters: {'learning_rate': 0.04552537463636095, 'n_estimators': 154, 'subsample': 0.9635531213155788, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.4201705608262224, 'colsample_bytree': 0.9609516257819941, 'reg_alpha': 4.670097552611442, 'reg_lambda': 3.7633003580951, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:43,300] Trial 280 finished with value: 199.0492631355503 and parameters: {'learning_rate': 0.040552660706026325, 'n_estimators': 159, 'subsample': 0.9451589409067435, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3488998998613187, 'colsample_bytree': 0.9321626986943672, 'reg_alpha': 4.8020115442309965, 'reg_lambda': 3.7830273357449316, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:44,600] Trial 281 finished with value: 204.38386940958816 and parameters: {'learning_rate': 0.04120864304228225, 'n_estimators': 163, 'subsample': 0.9429697879069326, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.34211296202015473, 'colsample_bytree': 0.9300433128773042, 'reg_alpha': 4.998174435421189, 'reg_lambda': 3.883095557025021, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:45,291] Trial 282 finished with value: 211.9578452551977 and parameters: {'learning_rate': 0.03886406315077847, 'n_estimators': 161, 'subsample': 0.9520594985922887, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.2814690767915842, 'colsample_bytree': 0.6046409639434802, 'reg_alpha': 4.788644730596997, 'reg_lambda': 3.800364561064018, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:48,058] Trial 283 finished with value: 210.01163905435342 and parameters: {'learning_rate': 0.04462732514194746, 'n_estimators': 159, 'subsample': 0.9217609215365979, 'max_depth': 14, 'min_child_weight': 6, 'gamma': 0.33160304680263997, 'colsample_bytree': 0.9195569160004248, 'reg_alpha': 4.859774982582729, 'reg_lambda': 3.7462483993284157, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:49,247] Trial 284 finished with value: 206.67234365575933 and parameters: {'learning_rate': 0.035244484793474896, 'n_estimators': 156, 'subsample': 0.6225499764712936, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.5086511639530171, 'colsample_bytree': 0.897141771585078, 'reg_alpha': 4.717075338897266, 'reg_lambda': 3.8541921048954464, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:51,053] Trial 285 finished with value: 212.25733631392907 and parameters: {'learning_rate': 0.04890767226442817, 'n_estimators': 167, 'subsample': 0.9416393144938283, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.20461775782986394, 'colsample_bytree': 0.9468030708233824, 'reg_alpha': 4.607734475565709, 'reg_lambda': 3.71675653108202, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:53,366] Trial 286 finished with value: 204.856081361852 and parameters: {'learning_rate': 0.041540648065754936, 'n_estimators': 153, 'subsample': 0.9612287777076435, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2431053962819954, 'colsample_bytree': 0.9321203629817642, 'reg_alpha': 4.814868022438775, 'reg_lambda': 3.8913932916089973, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:57,403] Trial 287 finished with value: 206.82038155302703 and parameters: {'learning_rate': 0.04479137694276221, 'n_estimators': 158, 'subsample': 0.9322380272317341, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.3733947896571241, 'colsample_bytree': 0.9406129073754129, 'reg_alpha': 4.555255740876199, 'reg_lambda': 4.0541846680252895, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:58,606] Trial 288 finished with value: 201.4424198977666 and parameters: {'learning_rate': 0.039122847619217305, 'n_estimators': 153, 'subsample': 0.9504118480720296, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.15925947096350732, 'colsample_bytree': 0.9540550109972803, 'reg_alpha': 4.89583647205033, 'reg_lambda': 3.94012546190402, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:40:59,525] Trial 289 finished with value: 204.62239782753792 and parameters: {'learning_rate': 0.034662297023223154, 'n_estimators': 164, 'subsample': 0.9488430881716418, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.2822437344449638, 'colsample_bytree': 0.9226573043426269, 'reg_alpha': 4.89377476363329, 'reg_lambda': 0.1976868983875315, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:00,744] Trial 290 finished with value: 202.64763085391587 and parameters: {'learning_rate': 0.0379143005623788, 'n_estimators': 155, 'subsample': 0.9747440860561404, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.16089870316946991, 'colsample_bytree': 0.9547172137994782, 'reg_alpha': 4.714548420905002, 'reg_lambda': 3.744626423203421, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:02,003] Trial 291 finished with value: 207.20560650559872 and parameters: {'learning_rate': 0.03106378061900079, 'n_estimators': 152, 'subsample': 0.9584028518832277, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.19382181390356412, 'colsample_bytree': 0.9622028034953182, 'reg_alpha': 4.851296867949035, 'reg_lambda': 3.825911658726298, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:03,286] Trial 292 finished with value: 204.38105604742262 and parameters: {'learning_rate': 0.04959746723095363, 'n_estimators': 160, 'subsample': 0.9485777739359892, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.35896204158278355, 'colsample_bytree': 0.9449933260730822, 'reg_alpha': 4.980423962477798, 'reg_lambda': 3.9209709361371523, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:04,972] Trial 293 finished with value: 206.7722599119137 and parameters: {'learning_rate': 0.039889148725571956, 'n_estimators': 155, 'subsample': 0.9827363898317549, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.49101010168819453, 'colsample_bytree': 0.9356433696138011, 'reg_alpha': 4.754238424424305, 'reg_lambda': 4.339818443491427, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:05,839] Trial 294 finished with value: 209.3557189287132 and parameters: {'learning_rate': 0.03652668829866199, 'n_estimators': 151, 'subsample': 0.9676079422284023, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.17585486781102141, 'colsample_bytree': 0.9615121285469965, 'reg_alpha': 4.645787642396817, 'reg_lambda': 3.7073064662331485, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:10,248] Trial 295 finished with value: 203.0178131096679 and parameters: {'learning_rate': 0.04136309959283275, 'n_estimators': 157, 'subsample': 0.9215884934131874, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.32625320840477046, 'colsample_bytree': 0.9521630230434902, 'reg_alpha': 4.8997683241095995, 'reg_lambda': 0.9225859308502842, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:11,444] Trial 296 finished with value: 201.97621015475497 and parameters: {'learning_rate': 0.050006624596160724, 'n_estimators': 153, 'subsample': 0.9416526996016795, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 2.1873705464415276, 'colsample_bytree': 0.908258340246984, 'reg_alpha': 4.752041643331521, 'reg_lambda': 3.8540470737547907, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:12,304] Trial 297 finished with value: 209.28730431979224 and parameters: {'learning_rate': 0.03319085785215974, 'n_estimators': 150, 'subsample': 0.957762012917267, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.10650595199726233, 'colsample_bytree': 0.9300389585050953, 'reg_alpha': 4.5988703366575, 'reg_lambda': 4.037853527584837, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:13,614] Trial 298 finished with value: 202.82471204698896 and parameters: {'learning_rate': 0.044336109552618234, 'n_estimators': 162, 'subsample': 0.9137528716192319, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.24630893611958715, 'colsample_bytree': 0.9656906841667124, 'reg_alpha': 4.8600490481649015, 'reg_lambda': 3.952397690383149, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:15,191] Trial 299 finished with value: 209.0739356614447 and parameters: {'learning_rate': 0.038450729253039384, 'n_estimators': 158, 'subsample': 0.9292708480689257, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 4.276794077071793, 'colsample_bytree': 0.9396666508852674, 'reg_alpha': 4.992181052727422, 'reg_lambda': 4.117288263054323, 'random_state': 1}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:16,067] Trial 300 finished with value: 204.36025526707965 and parameters: {'learning_rate': 0.046003809615251, 'n_estimators': 153, 'subsample': 0.9423194818905096, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.09355991409988978, 'colsample_bytree': 0.9162551803005056, 'reg_alpha': 4.666174781296175, 'reg_lambda': 3.80019939684334, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:17,213] Trial 301 finished with value: 206.8177900492666 and parameters: {'learning_rate': 0.05034226814772761, 'n_estimators': 144, 'subsample': 0.9650546578208855, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.42170167614769394, 'colsample_bytree': 0.9546874031154855, 'reg_alpha': 4.544244969960545, 'reg_lambda': 4.264889087619911, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:24,794] Trial 302 finished with value: 240.2704947355365 and parameters: {'learning_rate': 0.3121372243220819, 'n_estimators': 155, 'subsample': 0.90593932306808, 'max_depth': 11, 'min_child_weight': 1, 'gamma': 0.2506995671807744, 'colsample_bytree': 0.9429643229397541, 'reg_alpha': 4.792402340039953, 'reg_lambda': 3.9491863307181174, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:26,009] Trial 303 finished with value: 297.73784625110665 and parameters: {'learning_rate': 0.014622477394479173, 'n_estimators': 150, 'subsample': 0.9493874473071126, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.09948610003992617, 'colsample_bytree': 0.9278472974987505, 'reg_alpha': 4.694448198953974, 'reg_lambda': 3.6865688880095577, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:27,399] Trial 304 finished with value: 201.5470624448735 and parameters: {'learning_rate': 0.040857769192522285, 'n_estimators': 158, 'subsample': 0.9255154670159328, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.5659728234794363, 'colsample_bytree': 0.9665338074450682, 'reg_alpha': 4.894255062701767, 'reg_lambda': 4.072914592624476, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:28,695] Trial 305 finished with value: 201.39962448561025 and parameters: {'learning_rate': 0.03659523584229999, 'n_estimators': 166, 'subsample': 0.9256007605841007, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.5442789799764972, 'colsample_bytree': 0.9511370654641729, 'reg_alpha': 4.889243669577229, 'reg_lambda': 4.092212844850133, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:29,948] Trial 306 finished with value: 208.2376671342881 and parameters: {'learning_rate': 0.030416876646919493, 'n_estimators': 167, 'subsample': 0.9360111130864797, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.4463298008593245, 'colsample_bytree': 0.9483342916395237, 'reg_alpha': 4.851923904232404, 'reg_lambda': 4.205667510005819, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:31,305] Trial 307 finished with value: 203.0996211072079 and parameters: {'learning_rate': 0.03446162352098101, 'n_estimators': 170, 'subsample': 0.9176606338265697, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.35236025449795805, 'colsample_bytree': 0.937035611625195, 'reg_alpha': 4.99360278870851, 'reg_lambda': 4.074313489412401, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:32,597] Trial 308 finished with value: 202.08441032570502 and parameters: {'learning_rate': 0.036704969726534774, 'n_estimators': 164, 'subsample': 0.957084696294534, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.23548827452403848, 'colsample_bytree': 0.9534102111374116, 'reg_alpha': 4.73290116361456, 'reg_lambda': 3.8938339586916784, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:37,634] Trial 309 finished with value: 209.6375082638317 and parameters: {'learning_rate': 0.04090930072976628, 'n_estimators': 149, 'subsample': 0.9307091326548302, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.6195848095597514, 'colsample_bytree': 0.929016593113442, 'reg_alpha': 4.579467475203638, 'reg_lambda': 4.417679207612139, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:39,003] Trial 310 finished with value: 209.0754534755226 and parameters: {'learning_rate': 0.027304603233880516, 'n_estimators': 175, 'subsample': 0.9746424032288998, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3077409082065723, 'colsample_bytree': 0.8898586682343146, 'reg_alpha': 4.8039927206250645, 'reg_lambda': 3.9794069539367856, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:39,891] Trial 311 finished with value: 209.4843242177065 and parameters: {'learning_rate': 0.03295076576664598, 'n_estimators': 153, 'subsample': 0.9433993249432557, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.09231142704438403, 'colsample_bytree': 0.9589567233230408, 'reg_alpha': 4.621751357345677, 'reg_lambda': 4.154172179306348, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:41,095] Trial 312 finished with value: 205.0442826872543 and parameters: {'learning_rate': 0.03675014385014639, 'n_estimators': 146, 'subsample': 0.952861540462251, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.010017699698318637, 'colsample_bytree': 0.9496875641035382, 'reg_alpha': 4.518739864916886, 'reg_lambda': 4.283731566421097, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:42,852] Trial 313 finished with value: 210.3113126187059 and parameters: {'learning_rate': 0.04429836608135211, 'n_estimators': 161, 'subsample': 0.9197282900315958, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.4692327190622274, 'colsample_bytree': 0.9184842100634841, 'reg_alpha': 4.8965301472464215, 'reg_lambda': 4.5517705386222564, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:44,092] Trial 314 finished with value: 202.5440331707334 and parameters: {'learning_rate': 0.03905269355413045, 'n_estimators': 155, 'subsample': 0.9372467010943679, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1852091444031823, 'colsample_bytree': 0.9377755738078607, 'reg_alpha': 4.732091361147124, 'reg_lambda': 3.8412813815392615, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:44,903] Trial 315 finished with value: 205.08835778396875 and parameters: {'learning_rate': 0.04527099153933373, 'n_estimators': 143, 'subsample': 0.9053740558714138, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.28349932567373004, 'colsample_bytree': 0.9687041338659159, 'reg_alpha': 4.487161481968117, 'reg_lambda': 4.025035136778733, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:41:58,893] Trial 316 finished with value: 223.01521604539207 and parameters: {'learning_rate': 0.04148890631464305, 'n_estimators': 151, 'subsample': 0.9622358122059458, 'max_depth': 19, 'min_child_weight': 1, 'gamma': 0.16314899138982702, 'colsample_bytree': 0.9809513914758327, 'reg_alpha': 4.80305037565051, 'reg_lambda': 3.9271853139292388, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:00,146] Trial 317 finished with value: 203.8445398069368 and parameters: {'learning_rate': 0.047166630669571226, 'n_estimators': 157, 'subsample': 0.9295956204717742, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0018348353261437994, 'colsample_bytree': 0.9482372592641739, 'reg_alpha': 4.650775225033021, 'reg_lambda': 4.099549121309421, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:05,249] Trial 318 finished with value: 207.49996981753603 and parameters: {'learning_rate': 0.03672689587841207, 'n_estimators': 149, 'subsample': 0.946872492807774, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.4078607046428905, 'colsample_bytree': 0.9609896674138563, 'reg_alpha': 4.856060494357378, 'reg_lambda': 3.799939289298742, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:06,124] Trial 319 finished with value: 210.95613044670418 and parameters: {'learning_rate': 0.04224672090813681, 'n_estimators': 153, 'subsample': 0.9176265540370195, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.09080961673487431, 'colsample_bytree': 0.9245605576666283, 'reg_alpha': 4.597920372007975, 'reg_lambda': 4.352720546638981, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:07,166] Trial 320 finished with value: 206.3881010885985 and parameters: {'learning_rate': 0.05104347784259857, 'n_estimators': 160, 'subsample': 0.9369597373880155, 'max_depth': 7, 'min_child_weight': 4, 'gamma': 0.19386802574460066, 'colsample_bytree': 0.9411953967387323, 'reg_alpha': 4.392229708876854, 'reg_lambda': 3.702030026977134, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:08,349] Trial 321 finished with value: 208.00558145031118 and parameters: {'learning_rate': 0.03165310357821572, 'n_estimators': 147, 'subsample': 0.9823980721527877, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.34406200752738136, 'colsample_bytree': 0.9554274628814174, 'reg_alpha': 4.937689499779315, 'reg_lambda': 4.235890096171097, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:09,772] Trial 322 finished with value: 212.6970404565395 and parameters: {'learning_rate': 0.03820554738221461, 'n_estimators': 165, 'subsample': 0.9686447793791528, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.5150041035920131, 'colsample_bytree': 0.7990424900331314, 'reg_alpha': 4.996566671126327, 'reg_lambda': 3.8975501263803456, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:10,684] Trial 323 finished with value: 202.2746478107461 and parameters: {'learning_rate': 0.047515631882570734, 'n_estimators': 156, 'subsample': 0.9535008956370518, 'max_depth': 7, 'min_child_weight': 7, 'gamma': 0.08811222981364655, 'colsample_bytree': 0.9076046743234868, 'reg_alpha': 4.705688286790394, 'reg_lambda': 4.009278079837342, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:11,590] Trial 324 finished with value: 206.82033563347912 and parameters: {'learning_rate': 0.042676996633692295, 'n_estimators': 151, 'subsample': 0.9299134012756406, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.24779203258315685, 'colsample_bytree': 0.9664890490373366, 'reg_alpha': 4.511751396269209, 'reg_lambda': 4.100619528886536, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:12,745] Trial 325 finished with value: 209.31142300469935 and parameters: {'learning_rate': 0.039193237085080185, 'n_estimators': 142, 'subsample': 0.6998365105506967, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1706299295695885, 'colsample_bytree': 0.9808386709864116, 'reg_alpha': 4.212194304023432, 'reg_lambda': 3.8013693471173124, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:13,628] Trial 326 finished with value: 219.6040126527997 and parameters: {'learning_rate': 0.034006131576607486, 'n_estimators': 154, 'subsample': 0.9445196643411147, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.00969489650115081, 'colsample_bytree': 0.5007622062310555, 'reg_alpha': 4.772980409074288, 'reg_lambda': 4.2011108181526735, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:14,803] Trial 327 finished with value: 204.88810686951342 and parameters: {'learning_rate': 0.04575792371387667, 'n_estimators': 145, 'subsample': 0.9113729585852083, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 1.4259185670035373, 'colsample_bytree': 0.9353408732745755, 'reg_alpha': 4.636347469438651, 'reg_lambda': 3.9656060169401846, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:19,143] Trial 328 finished with value: 206.69008006719767 and parameters: {'learning_rate': 0.054287762312672426, 'n_estimators': 150, 'subsample': 0.9610125449110157, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.35880544478729237, 'colsample_bytree': 0.9478579623195726, 'reg_alpha': 4.321071895355014, 'reg_lambda': 1.3456440694476268, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:20,972] Trial 329 finished with value: 212.30249699769354 and parameters: {'learning_rate': 0.034577888728874, 'n_estimators': 159, 'subsample': 0.926833592116485, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.2622625570922478, 'colsample_bytree': 0.9703121204286709, 'reg_alpha': 4.4433092156345735, 'reg_lambda': 2.3935301600218084, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:33,749] Trial 330 finished with value: 229.84671726789506 and parameters: {'learning_rate': 0.05095435698194423, 'n_estimators': 156, 'subsample': 0.9416986325603307, 'max_depth': 16, 'min_child_weight': 1, 'gamma': 0.10727759314249323, 'colsample_bytree': 0.9904172015731555, 'reg_alpha': 4.829293265070571, 'reg_lambda': 3.8675078264169716, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:34,938] Trial 331 finished with value: 202.08972497414325 and parameters: {'learning_rate': 0.040246203356799536, 'n_estimators': 147, 'subsample': 0.9533721116476398, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1714647970954809, 'colsample_bytree': 0.958843326333624, 'reg_alpha': 4.561866526353708, 'reg_lambda': 3.7209430555554057, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:36,189] Trial 332 finished with value: 208.91206622420663 and parameters: {'learning_rate': 0.04365190214486237, 'n_estimators': 171, 'subsample': 0.9726903846625112, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.39089630509804196, 'colsample_bytree': 0.923328470032203, 'reg_alpha': 4.904553498915221, 'reg_lambda': 1.7750020948697705, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:37,077] Trial 333 finished with value: 206.5907242699 and parameters: {'learning_rate': 0.0479476533688028, 'n_estimators': 152, 'subsample': 0.9237936201745487, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.08049707553948926, 'colsample_bytree': 0.9419117984955935, 'reg_alpha': 4.711363189744436, 'reg_lambda': 4.048573980734344, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:38,949] Trial 334 finished with value: 212.12452157630005 and parameters: {'learning_rate': 0.028809927780894123, 'n_estimators': 162, 'subsample': 0.9368215706085213, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.25964288526828283, 'colsample_bytree': 0.9777368404821931, 'reg_alpha': 4.48029753757124, 'reg_lambda': 4.379039569727042, 'random_state': 10}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:40,120] Trial 335 finished with value: 207.09835228321236 and parameters: {'learning_rate': 0.03666682950548676, 'n_estimators': 148, 'subsample': 0.9512390885139462, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0034531645549595452, 'colsample_bytree': 0.9335046637851515, 'reg_alpha': 4.6590805739936565, 'reg_lambda': 4.146753392011424, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:41,807] Trial 336 finished with value: 205.19966651035298 and parameters: {'learning_rate': 0.0427116053527499, 'n_estimators': 154, 'subsample': 0.9958893622566547, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.5495135826855635, 'colsample_bytree': 0.952762284840183, 'reg_alpha': 4.791626727634039, 'reg_lambda': 3.9049835565269375, 'random_state': 0}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:43,164] Trial 337 finished with value: 198.92372160400197 and parameters: {'learning_rate': 0.03848385964036978, 'n_estimators': 159, 'subsample': 0.9065293627145398, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18429715358951865, 'colsample_bytree': 0.9664781585739816, 'reg_alpha': 4.910517666530829, 'reg_lambda': 3.8014023354831123, 'random_state': 4}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:47,635] Trial 338 finished with value: 203.12209577658686 and parameters: {'learning_rate': 0.038140042708416755, 'n_estimators': 142, 'subsample': 0.9137512251279218, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.31551619494927097, 'colsample_bytree': 0.9623433383612138, 'reg_alpha': 4.577407374078872, 'reg_lambda': 3.681935834304897, 'random_state': 4}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:49,964] Trial 339 finished with value: 217.5573295819222 and parameters: {'learning_rate': 0.035657194726207556, 'n_estimators': 159, 'subsample': 0.8960295892367783, 'max_depth': 9, 'min_child_weight': 1, 'gamma': 0.46011058716726116, 'colsample_bytree': 0.8462684605226151, 'reg_alpha': 4.907346672804231, 'reg_lambda': 3.7840822336325775, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:50,890] Trial 340 finished with value: 208.4482773779419 and parameters: {'learning_rate': 0.031409303834707886, 'n_estimators': 166, 'subsample': 0.9005740576881578, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.17833764623502374, 'colsample_bytree': 0.9175141508333746, 'reg_alpha': 4.991388725665661, 'reg_lambda': 3.799099187598183, 'random_state': 4}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:52,114] Trial 341 finished with value: 198.75233818113338 and parameters: {'learning_rate': 0.040662964010946295, 'n_estimators': 150, 'subsample': 0.9643480948916816, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.26204998859261747, 'colsample_bytree': 0.9437316725501662, 'reg_alpha': 4.347963691335379, 'reg_lambda': 4.001093510059579, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:53,765] Trial 342 finished with value: 206.79456327611283 and parameters: {'learning_rate': 0.03956920102861195, 'n_estimators': 145, 'subsample': 0.9806660848947487, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 4.886816993564178, 'colsample_bytree': 0.9313113727986204, 'reg_alpha': 4.252281855135111, 'reg_lambda': 4.018158723134498, 'random_state': 2}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:54,968] Trial 343 finished with value: 207.36691456676826 and parameters: {'learning_rate': 0.0335347193752111, 'n_estimators': 149, 'subsample': 0.9659315321048593, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.23652117555528285, 'colsample_bytree': 0.9371054045271638, 'reg_alpha': 4.44127833915179, 'reg_lambda': 4.283631444306415, 'random_state': 4}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:55,313] Trial 344 finished with value: 321.90651023627004 and parameters: {'learning_rate': 0.6482964078437375, 'n_estimators': 158, 'subsample': 0.9073877983924641, 'max_depth': 3, 'min_child_weight': 2, 'gamma': 0.1785247525038323, 'colsample_bytree': 0.945532417739271, 'reg_alpha': 4.35370673169199, 'reg_lambda': 4.158061480607366, 'random_state': 4}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:42:56,235] Trial 345 finished with value: 206.7083305360756 and parameters: {'learning_rate': 0.04010234613838416, 'n_estimators': 162, 'subsample': 0.9642762406655196, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.11537886932612412, 'colsample_bytree': 0.9129353492341912, 'reg_alpha': 4.511372854590804, 'reg_lambda': 3.9776118717204083, 'random_state': 4}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:01,005] Trial 346 finished with value: 200.7194410820181 and parameters: {'learning_rate': 0.03602033964224093, 'n_estimators': 145, 'subsample': 0.9439705487080995, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.30864450943227056, 'colsample_bytree': 0.9433740142487991, 'reg_alpha': 4.3356574608479335, 'reg_lambda': 4.0917856678766915, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:02,152] Trial 347 finished with value: 203.78619433172804 and parameters: {'learning_rate': 0.03541659528636573, 'n_estimators': 141, 'subsample': 0.9370171795915032, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3093152761621263, 'colsample_bytree': 0.9296459754483362, 'reg_alpha': 4.287229186824223, 'reg_lambda': 4.132261627733735, 'random_state': 5}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:03,339] Trial 348 finished with value: 209.88974209194598 and parameters: {'learning_rate': 0.030017452018847215, 'n_estimators': 145, 'subsample': 0.9439870036376559, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2841054274044868, 'colsample_bytree': 0.9421061676980363, 'reg_alpha': 4.363178505806192, 'reg_lambda': 4.263895380735351, 'random_state': 2}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:04,194] Trial 349 finished with value: 228.84284605582556 and parameters: {'learning_rate': 0.02427532062227348, 'n_estimators': 144, 'subsample': 0.8857172225213963, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.4055609362516047, 'colsample_bytree': 0.9245088440772324, 'reg_alpha': 4.169202490163109, 'reg_lambda': 4.189928057297847, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:05,835] Trial 350 finished with value: 210.3488592143724 and parameters: {'learning_rate': 0.03263666488650302, 'n_estimators': 148, 'subsample': 0.9179743777765342, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.0036802149538803786, 'colsample_bytree': 0.8996407173363393, 'reg_alpha': 4.267275829408718, 'reg_lambda': 4.0575299875448385, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:10,984] Trial 351 finished with value: 215.77188217303163 and parameters: {'learning_rate': 0.04535194017715224, 'n_estimators': 150, 'subsample': 0.9333854373390233, 'max_depth': 12, 'min_child_weight': 1, 'gamma': 2.021997005941768, 'colsample_bytree': 0.9866868955129457, 'reg_alpha': 4.39235590162389, 'reg_lambda': 4.083577138704502, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:15,312] Trial 352 finished with value: 209.46666711836082 and parameters: {'learning_rate': 0.03581819429567017, 'n_estimators': 141, 'subsample': 0.9704485794220189, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.239039173922829, 'colsample_bytree': 0.8142723407050485, 'reg_alpha': 4.490672855956495, 'reg_lambda': 4.441018142655899, 'random_state': 9}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:16,511] Trial 353 finished with value: 200.45678183290622 and parameters: {'learning_rate': 0.04169769001463538, 'n_estimators': 146, 'subsample': 0.9561759472164362, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.09974794372449172, 'colsample_bytree': 0.9459336323888976, 'reg_alpha': 4.13100003571558, 'reg_lambda': 3.988278794314545, 'random_state': 5}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:18,095] Trial 354 finished with value: 207.37428112353024 and parameters: {'learning_rate': 0.048670943710045635, 'n_estimators': 146, 'subsample': 0.9607004375138989, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.10519516252226094, 'colsample_bytree': 0.9429338237437007, 'reg_alpha': 4.189575661641436, 'reg_lambda': 3.8732874220348195, 'random_state': 5}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:19,191] Trial 355 finished with value: 204.1169352734907 and parameters: {'learning_rate': 0.04278162781833159, 'n_estimators': 143, 'subsample': 0.9592534140391635, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.09968910573533056, 'colsample_bytree': 0.9670549856517945, 'reg_alpha': 4.07207644255411, 'reg_lambda': 3.964250755611825, 'random_state': 2}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:20,050] Trial 356 finished with value: 207.13155249089164 and parameters: {'learning_rate': 0.04231148787068832, 'n_estimators': 146, 'subsample': 0.9746051294684777, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.1835316616797643, 'colsample_bytree': 0.9351736417602707, 'reg_alpha': 4.278774751531475, 'reg_lambda': 4.615028881139841, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:29,550] Trial 357 finished with value: 220.92216182181753 and parameters: {'learning_rate': 0.047414402649237006, 'n_estimators': 150, 'subsample': 0.9463612210939601, 'max_depth': 13, 'min_child_weight': 1, 'gamma': 1.69046935129817, 'colsample_bytree': 0.9222207562892654, 'reg_alpha': 4.147437143981787, 'reg_lambda': 2.178915331895703, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:30,371] Trial 358 finished with value: 222.22249105183974 and parameters: {'learning_rate': 0.040251164212435, 'n_estimators': 88, 'subsample': 0.9561320847592092, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0059729613148198635, 'colsample_bytree': 0.9764102651738799, 'reg_alpha': 4.366244817136789, 'reg_lambda': 3.8252780439183227, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:31,955] Trial 359 finished with value: 214.45385062579484 and parameters: {'learning_rate': 0.054551867956210254, 'n_estimators': 140, 'subsample': 0.9855321436844785, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.10018526919162972, 'colsample_bytree': 0.9924560350309992, 'reg_alpha': 4.432643842591784, 'reg_lambda': 2.7411112585333304, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:32,817] Trial 360 finished with value: 212.7728165474862 and parameters: {'learning_rate': 0.04638948827090641, 'n_estimators': 148, 'subsample': 0.9418474143750406, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 2.768973800990217, 'colsample_bytree': 0.549889163066557, 'reg_alpha': 4.527216653660195, 'reg_lambda': 3.658627557725326, 'random_state': 4}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:33,717] Trial 361 finished with value: 209.47368082185477 and parameters: {'learning_rate': 0.03863510475547962, 'n_estimators': 155, 'subsample': 0.9672942650982612, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 2.415448604288147, 'colsample_bytree': 0.9602947748784008, 'reg_alpha': 4.322327486629098, 'reg_lambda': 4.339609852974585, 'random_state': 2}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:34,805] Trial 362 finished with value: 206.7446725380074 and parameters: {'learning_rate': 0.051399281799202265, 'n_estimators': 152, 'subsample': 0.953384564886349, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.25615622041385755, 'colsample_bytree': 0.8732131495901905, 'reg_alpha': 1.4836623987249726, 'reg_lambda': 3.997739696296035, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:36,024] Trial 363 finished with value: 227.49331983579341 and parameters: {'learning_rate': 0.19661760856312696, 'n_estimators': 144, 'subsample': 0.8991388148008898, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18442019277158284, 'colsample_bytree': 0.9479695349006702, 'reg_alpha': 4.562535827311853, 'reg_lambda': 4.195136707571577, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:36,958] Trial 364 finished with value: 211.80562058697868 and parameters: {'learning_rate': 0.04304503969855626, 'n_estimators': 151, 'subsample': 0.6645457982965264, 'max_depth': 7, 'min_child_weight': 6, 'gamma': 0.3307040061056735, 'colsample_bytree': 0.9679917072664693, 'reg_alpha': 4.173717927634954, 'reg_lambda': 3.8515623904634513, 'random_state': 2}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:38,772] Trial 365 finished with value: 206.6783745756113 and parameters: {'learning_rate': 0.046302748432256874, 'n_estimators': 157, 'subsample': 0.9341127251873034, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.089238377621986, 'colsample_bytree': 0.9316477044299156, 'reg_alpha': 4.4074279073393585, 'reg_lambda': 4.013356330586273, 'random_state': 3}. Best is trial 84 with value: 198.47965014026371.\n","[I 2024-07-27 18:43:43,348] Trial 366 finished with value: 198.0573249814249 and parameters: {'learning_rate': 0.03890003019848595, 'n_estimators': 147, 'subsample': 0.9444304167762075, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.17652255608071013, 'colsample_bytree': 0.9410157376623337, 'reg_alpha': 4.614871326677428, 'reg_lambda': 3.8902859140325208, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:44,522] Trial 367 finished with value: 204.32910212452617 and parameters: {'learning_rate': 0.0331086344836548, 'n_estimators': 147, 'subsample': 0.976242749102735, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.26365592605281324, 'colsample_bytree': 0.9117025749595519, 'reg_alpha': 4.598007148643559, 'reg_lambda': 3.6786924347750074, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:45,349] Trial 368 finished with value: 208.9924094753367 and parameters: {'learning_rate': 0.037181387217249395, 'n_estimators': 141, 'subsample': 0.9599208299568579, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.3652937407609538, 'colsample_bytree': 0.9395277384174678, 'reg_alpha': 4.465418765984416, 'reg_lambda': 3.802819337400759, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:47,023] Trial 369 finished with value: 206.75554790391007 and parameters: {'learning_rate': 0.040495043008689974, 'n_estimators': 145, 'subsample': 0.9462636724155817, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.003063489182610995, 'colsample_bytree': 0.981006675701347, 'reg_alpha': 4.25436770873291, 'reg_lambda': 3.8922937693030413, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:47,890] Trial 370 finished with value: 203.20631097670832 and parameters: {'learning_rate': 0.049799349043104214, 'n_estimators': 149, 'subsample': 0.945509125267435, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.18135270570824963, 'colsample_bytree': 0.9241862228828566, 'reg_alpha': 4.723561617147872, 'reg_lambda': 3.7106980382603174, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:49,084] Trial 371 finished with value: 200.51031121301153 and parameters: {'learning_rate': 0.04423454743142831, 'n_estimators': 143, 'subsample': 0.9598478339171483, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.19086492983919784, 'colsample_bytree': 0.9987464919810853, 'reg_alpha': 4.093152329643392, 'reg_lambda': 3.9552152750984364, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:50,287] Trial 372 finished with value: 202.07047712229246 and parameters: {'learning_rate': 0.043455095548739955, 'n_estimators': 142, 'subsample': 0.9642747408821584, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.1803151655256333, 'colsample_bytree': 0.9975517727336232, 'reg_alpha': 4.072303663488964, 'reg_lambda': 3.9229418415838078, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:51,465] Trial 373 finished with value: 206.53740968649694 and parameters: {'learning_rate': 0.037255538687104496, 'n_estimators': 139, 'subsample': 0.9903382961987909, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.08264470933730333, 'colsample_bytree': 0.9997672403526815, 'reg_alpha': 4.102549370055829, 'reg_lambda': 4.090179031564051, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:55,040] Trial 374 finished with value: 214.0291051592246 and parameters: {'learning_rate': 0.0350506710703419, 'n_estimators': 144, 'subsample': 0.95468708982022, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.3208652748252543, 'colsample_bytree': 0.7828904908710079, 'reg_alpha': 4.601113987266019, 'reg_lambda': 4.244606397648544, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:57,509] Trial 375 finished with value: 201.1338308049413 and parameters: {'learning_rate': 0.04515314567290738, 'n_estimators': 138, 'subsample': 0.972065320333691, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.005835965895611098, 'colsample_bytree': 0.9549830427429101, 'reg_alpha': 4.76880275001261, 'reg_lambda': 3.884505668266737, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:58,307] Trial 376 finished with value: 210.07389421549126 and parameters: {'learning_rate': 0.04033509797034532, 'n_estimators': 138, 'subsample': 0.9810190001872917, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.006789449795513018, 'colsample_bytree': 0.957588314925546, 'reg_alpha': 4.764543149336752, 'reg_lambda': 3.8242442144328144, 'random_state': 1}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:43:59,390] Trial 377 finished with value: 203.2460653002718 and parameters: {'learning_rate': 0.04578113108670204, 'n_estimators': 138, 'subsample': 0.9769180329876135, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.0037430745177716024, 'colsample_bytree': 0.9699800225358063, 'reg_alpha': 4.74257647839503, 'reg_lambda': 4.835699249882337, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:00,476] Trial 378 finished with value: 207.6152732402518 and parameters: {'learning_rate': 0.031086379437960377, 'n_estimators': 141, 'subsample': 0.9726964464368952, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.10375967794854099, 'colsample_bytree': 0.9510133549758699, 'reg_alpha': 4.642838837672841, 'reg_lambda': 3.959879352602826, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:01,325] Trial 379 finished with value: 205.0373539266082 and parameters: {'learning_rate': 0.0384307421977486, 'n_estimators': 138, 'subsample': 0.9417917096310652, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.09786675642396594, 'colsample_bytree': 0.9894873815000204, 'reg_alpha': 4.800375047014732, 'reg_lambda': 4.064932226895901, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:03,122] Trial 380 finished with value: 202.6955450554064 and parameters: {'learning_rate': 0.04899404043719628, 'n_estimators': 160, 'subsample': 0.9507956476878725, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.15205236207114978, 'colsample_bytree': 0.9617911619139451, 'reg_alpha': 4.692807148935714, 'reg_lambda': 4.1469748680608065, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:04,341] Trial 381 finished with value: 205.09436014541964 and parameters: {'learning_rate': 0.04223612837436289, 'n_estimators': 155, 'subsample': 0.9675894277126688, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.24141708651685695, 'colsample_bytree': 0.9439920428541623, 'reg_alpha': 4.204746362933413, 'reg_lambda': 4.398742749340618, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:05,144] Trial 382 finished with value: 211.9134606891514 and parameters: {'learning_rate': 0.03378661700352791, 'n_estimators': 143, 'subsample': 0.9590285915253327, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.006364622537367054, 'colsample_bytree': 0.9745974314944669, 'reg_alpha': 4.78670817474437, 'reg_lambda': 3.871695298248613, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:06,501] Trial 383 finished with value: 206.1485982040564 and parameters: {'learning_rate': 0.02785262539296816, 'n_estimators': 157, 'subsample': 0.9344720159768648, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.4522608125832806, 'colsample_bytree': 0.9877324332255702, 'reg_alpha': 4.902146144773817, 'reg_lambda': 3.7663874787239564, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:11,596] Trial 384 finished with value: 206.9851455818187 and parameters: {'learning_rate': 0.03830102852033493, 'n_estimators': 151, 'subsample': 0.9460477695845639, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.1572702555198395, 'colsample_bytree': 0.9541713816962348, 'reg_alpha': 4.995119718028611, 'reg_lambda': 3.962894273438541, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:12,814] Trial 385 finished with value: 200.8358677470942 and parameters: {'learning_rate': 0.044860248182478954, 'n_estimators': 146, 'subsample': 0.992149860760213, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.280367280237567, 'colsample_bytree': 0.9642425193672077, 'reg_alpha': 4.007038078113483, 'reg_lambda': 4.245209758594381, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:13,800] Trial 386 finished with value: 205.49095502812955 and parameters: {'learning_rate': 0.04256371407220664, 'n_estimators': 142, 'subsample': 0.983677146483045, 'max_depth': 7, 'min_child_weight': 4, 'gamma': 0.3862703760654744, 'colsample_bytree': 0.9419672610489512, 'reg_alpha': 4.012249288327632, 'reg_lambda': 4.269487273479824, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:14,692] Trial 387 finished with value: 209.6237768307227 and parameters: {'learning_rate': 0.05246645622980713, 'n_estimators': 146, 'subsample': 0.9936104035751667, 'max_depth': 7, 'min_child_weight': 5, 'gamma': 0.28794314816734085, 'colsample_bytree': 0.8297082971353363, 'reg_alpha': 3.931412679502274, 'reg_lambda': 4.333976648289766, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:15,919] Trial 388 finished with value: 206.01504111511335 and parameters: {'learning_rate': 0.035662029185281933, 'n_estimators': 146, 'subsample': 0.9873539468212786, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.32440763141548645, 'colsample_bytree': 0.9631901192895056, 'reg_alpha': 4.223896655454707, 'reg_lambda': 4.501389247465197, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:17,449] Trial 389 finished with value: 204.18298252293016 and parameters: {'learning_rate': 0.04042132978964819, 'n_estimators': 136, 'subsample': 0.9761452198123085, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.451956037415594, 'colsample_bytree': 0.9511574322606281, 'reg_alpha': 1.2931659793105643, 'reg_lambda': 4.20761694403763, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:18,283] Trial 390 finished with value: 206.92779191900584 and parameters: {'learning_rate': 0.04586060091011788, 'n_estimators': 139, 'subsample': 0.9984569892578014, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.2158545061207014, 'colsample_bytree': 0.9374247193626409, 'reg_alpha': 4.294180958320733, 'reg_lambda': 4.066359132638403, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:19,472] Trial 391 finished with value: 204.55529477100387 and parameters: {'learning_rate': 0.04943625727837269, 'n_estimators': 143, 'subsample': 0.9700159240144623, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.6164342506528335, 'colsample_bytree': 0.9621873015953335, 'reg_alpha': 3.974872329251034, 'reg_lambda': 4.198587728248393, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:20,348] Trial 392 finished with value: 207.11162811072975 and parameters: {'learning_rate': 0.03806538307301176, 'n_estimators': 149, 'subsample': 0.9630385609456695, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.0933434116783005, 'colsample_bytree': 0.9506956269699431, 'reg_alpha': 2.7377536561775204, 'reg_lambda': 4.368005889248897, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:25,461] Trial 393 finished with value: 208.84359527313475 and parameters: {'learning_rate': 0.04447598631662874, 'n_estimators': 162, 'subsample': 0.9537728485807798, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.25893871692635073, 'colsample_bytree': 0.9705381975078207, 'reg_alpha': 4.1237262754878, 'reg_lambda': 1.9409749171130826, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:26,763] Trial 394 finished with value: 203.42952486124915 and parameters: {'learning_rate': 0.03320834559921897, 'n_estimators': 159, 'subsample': 0.9695508357390596, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0004927963951644188, 'colsample_bytree': 0.9334319645406597, 'reg_alpha': 4.089662808426856, 'reg_lambda': 4.122744749386798, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:34,273] Trial 395 finished with value: 222.77115863446227 and parameters: {'learning_rate': 0.04170997387849247, 'n_estimators': 154, 'subsample': 0.9832325709161199, 'max_depth': 14, 'min_child_weight': 1, 'gamma': 0.35664741041539877, 'colsample_bytree': 0.9573520451137351, 'reg_alpha': 4.397808817092114, 'reg_lambda': 4.020525001451062, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:38,735] Trial 396 finished with value: 210.56532814054063 and parameters: {'learning_rate': 0.03699820511740218, 'n_estimators': 146, 'subsample': 0.9562993908603441, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18131360719495634, 'colsample_bytree': 0.7569928350367331, 'reg_alpha': 4.138915016336908, 'reg_lambda': 4.297741715007105, 'random_state': 5}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:39,332] Trial 397 finished with value: 217.71866022503895 and parameters: {'learning_rate': 0.053938463654874674, 'n_estimators': 70, 'subsample': 0.9485593467036719, 'max_depth': 7, 'min_child_weight': 3, 'gamma': 0.09145688352154752, 'colsample_bytree': 0.9433863689927889, 'reg_alpha': 4.316745149017254, 'reg_lambda': 4.51484923938703, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:41,078] Trial 398 finished with value: 211.834790852961 and parameters: {'learning_rate': 0.04815085398721755, 'n_estimators': 154, 'subsample': 0.9376949432914048, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.4390490707913093, 'colsample_bytree': 0.9710840248940034, 'reg_alpha': 4.569949033533108, 'reg_lambda': 4.138261902415918, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:42,166] Trial 399 finished with value: 209.34040882339679 and parameters: {'learning_rate': 0.041200510312463155, 'n_estimators': 196, 'subsample': 0.9632586934782997, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.22812099893523122, 'colsample_bytree': 0.9160138409333486, 'reg_alpha': 4.834207149861466, 'reg_lambda': 3.969736365010805, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:43,371] Trial 400 finished with value: 200.79369447862922 and parameters: {'learning_rate': 0.04482204483882249, 'n_estimators': 149, 'subsample': 0.944513804201828, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.08723163592102115, 'colsample_bytree': 0.9455743998426884, 'reg_alpha': 4.527984626950869, 'reg_lambda': 2.8830989737475523, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:44,619] Trial 401 finished with value: 208.43129943926698 and parameters: {'learning_rate': 0.03061812610612405, 'n_estimators': 150, 'subsample': 0.9384570889144513, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3033128524396268, 'colsample_bytree': 0.9253182434903435, 'reg_alpha': 2.9603945614686604, 'reg_lambda': 2.9082242743528783, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:45,812] Trial 402 finished with value: 205.65964655408743 and parameters: {'learning_rate': 0.039396758300437415, 'n_estimators': 152, 'subsample': 0.9244432483203499, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.21164649121645304, 'colsample_bytree': 0.940258984121611, 'reg_alpha': 4.487663752990139, 'reg_lambda': 4.261392793200872, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:47,523] Trial 403 finished with value: 212.19397506263593 and parameters: {'learning_rate': 0.03482666414888844, 'n_estimators': 149, 'subsample': 0.9439783675374713, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.362522190845615, 'colsample_bytree': 0.9330840214902397, 'reg_alpha': 4.335558984672856, 'reg_lambda': 3.005714542656321, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:51,898] Trial 404 finished with value: 207.4069845164667 and parameters: {'learning_rate': 0.0436278039733883, 'n_estimators': 158, 'subsample': 0.9233458181331642, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.48982095715205365, 'colsample_bytree': 0.9477864327235453, 'reg_alpha': 4.473256932449558, 'reg_lambda': 3.2393430197037656, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:53,122] Trial 405 finished with value: 203.82672014836967 and parameters: {'learning_rate': 0.04807719770695477, 'n_estimators': 148, 'subsample': 0.9355452867359974, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.14008833832596856, 'colsample_bytree': 0.9640046799455398, 'reg_alpha': 4.245430544130572, 'reg_lambda': 3.3779800472521906, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:54,397] Trial 406 finished with value: 203.32726690280452 and parameters: {'learning_rate': 0.037161465910006325, 'n_estimators': 153, 'subsample': 0.9497794633876613, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2863856884722752, 'colsample_bytree': 0.9793292559233738, 'reg_alpha': 0.019041730197432827, 'reg_lambda': 4.059895104594737, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:55,573] Trial 407 finished with value: 205.99807278926997 and parameters: {'learning_rate': 0.055158322351595825, 'n_estimators': 145, 'subsample': 0.9302737127700139, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.10603772120270781, 'colsample_bytree': 0.9424360652714312, 'reg_alpha': 3.8585967144271955, 'reg_lambda': 4.229219658418907, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:57,324] Trial 408 finished with value: 208.56989245975146 and parameters: {'learning_rate': 0.04154505864412591, 'n_estimators': 155, 'subsample': 0.9520655442375637, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 1.2058403831512914, 'colsample_bytree': 0.9063366979966803, 'reg_alpha': 4.577755694235196, 'reg_lambda': 2.6983979814088253, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:58,217] Trial 409 finished with value: 205.94270043437106 and parameters: {'learning_rate': 0.05006103356048561, 'n_estimators': 163, 'subsample': 0.733265018812358, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.17326326746928522, 'colsample_bytree': 0.859479408909454, 'reg_alpha': 4.475745945817753, 'reg_lambda': 2.5826974259639837, 'random_state': 5}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:44:59,452] Trial 410 finished with value: 407.18538210357445 and parameters: {'learning_rate': 0.010091478821763585, 'n_estimators': 151, 'subsample': 0.9135828146357412, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.38368079091459945, 'colsample_bytree': 0.9286460751196779, 'reg_alpha': 4.380588733898194, 'reg_lambda': 4.418525991965874, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:05,846] Trial 411 finished with value: 217.30160386170652 and parameters: {'learning_rate': 0.0330016675729326, 'n_estimators': 157, 'subsample': 0.9426165566488712, 'max_depth': 10, 'min_child_weight': 1, 'gamma': 0.08684517526744497, 'colsample_bytree': 0.9569882875769292, 'reg_alpha': 4.062566054681475, 'reg_lambda': 4.1454739788565105, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:06,745] Trial 412 finished with value: 207.9729832975005 and parameters: {'learning_rate': 0.03892265296444563, 'n_estimators': 147, 'subsample': 0.9574970637278039, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.25421865755440753, 'colsample_bytree': 0.9983265768562705, 'reg_alpha': 4.639766225076897, 'reg_lambda': 3.523035888128144, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:07,953] Trial 413 finished with value: 204.5090177655878 and parameters: {'learning_rate': 0.04417255536541459, 'n_estimators': 143, 'subsample': 0.9390353225819975, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.6591654046800203, 'colsample_bytree': 0.9835309323026659, 'reg_alpha': 4.538684902520914, 'reg_lambda': 3.1319452587449836, 'random_state': 1}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:09,754] Trial 414 finished with value: 210.79935022597402 and parameters: {'learning_rate': 0.035683388002666794, 'n_estimators': 160, 'subsample': 0.9194864062230067, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.18777197770474457, 'colsample_bytree': 0.9482547046472538, 'reg_alpha': 4.997082723784859, 'reg_lambda': 2.300303002760501, 'random_state': 7}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:10,733] Trial 415 finished with value: 210.33720421265352 and parameters: {'learning_rate': 0.04682647621549142, 'n_estimators': 152, 'subsample': 0.9313283684509094, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.09260706328888052, 'colsample_bytree': 0.691120548972187, 'reg_alpha': 4.177470861928503, 'reg_lambda': 3.663377213154926, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:11,944] Trial 416 finished with value: 203.1849781731616 and parameters: {'learning_rate': 0.040575283230158375, 'n_estimators': 148, 'subsample': 0.948302529359064, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.5143209162250992, 'colsample_bytree': 0.9190030423494705, 'reg_alpha': 4.644401432845365, 'reg_lambda': 3.7690392987692367, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:14,413] Trial 417 finished with value: 206.0654267916402 and parameters: {'learning_rate': 0.05163174034344871, 'n_estimators': 156, 'subsample': 0.9560643003586197, 'max_depth': 9, 'min_child_weight': 1, 'gamma': 0.0026047382150990554, 'colsample_bytree': 0.9664920823108324, 'reg_alpha': 4.398197534520548, 'reg_lambda': 3.9946522671018596, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:19,564] Trial 418 finished with value: 220.85711628868097 and parameters: {'learning_rate': 0.029659189964764323, 'n_estimators': 145, 'subsample': 0.9618733212851778, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.3018724250206154, 'colsample_bytree': 0.9400124815641925, 'reg_alpha': 4.314246153379768, 'reg_lambda': 2.496016088466408, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:21,045] Trial 419 finished with value: 203.25189725771475 and parameters: {'learning_rate': 0.04375344008981649, 'n_estimators': 184, 'subsample': 0.9407061119209077, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.17973227214626364, 'colsample_bytree': 0.9733346399011141, 'reg_alpha': 4.545468442228337, 'reg_lambda': 3.8929348109578763, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:21,738] Trial 420 finished with value: 213.1857806164029 and parameters: {'learning_rate': 0.037778182113481835, 'n_estimators': 153, 'subsample': 0.5090241699990103, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 4.104390721444213, 'colsample_bytree': 0.611381005151719, 'reg_alpha': 4.887574421091972, 'reg_lambda': 0.5195854275991136, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:22,732] Trial 421 finished with value: 204.09464710681408 and parameters: {'learning_rate': 0.05847968088760961, 'n_estimators': 150, 'subsample': 0.9473440225279594, 'max_depth': 7, 'min_child_weight': 5, 'gamma': 0.4020849436570708, 'colsample_bytree': 0.9318493972254758, 'reg_alpha': 4.661272368647086, 'reg_lambda': 4.0838681096733165, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:24,012] Trial 422 finished with value: 210.78760930433978 and parameters: {'learning_rate': 0.13739123067942308, 'n_estimators': 156, 'subsample': 0.9259614638093633, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.09224360816798066, 'colsample_bytree': 0.9547366541432426, 'reg_alpha': 4.73695616512987, 'reg_lambda': 4.356893071313054, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:25,729] Trial 423 finished with value: 208.31614505434814 and parameters: {'learning_rate': 0.033448653358996217, 'n_estimators': 142, 'subsample': 0.9059447622764388, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.24875238443042644, 'colsample_bytree': 0.9493396744492081, 'reg_alpha': 4.221853243188942, 'reg_lambda': 3.7971351349052833, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:26,961] Trial 424 finished with value: 202.8031794178718 and parameters: {'learning_rate': 0.04627913331908966, 'n_estimators': 148, 'subsample': 0.9643287375477163, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0020211780085774844, 'colsample_bytree': 0.9854725452686318, 'reg_alpha': 4.463845931906158, 'reg_lambda': 3.940324272695522, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:27,795] Trial 425 finished with value: 217.49273015678847 and parameters: {'learning_rate': 0.03983159683598764, 'n_estimators': 159, 'subsample': 0.542107935369745, 'max_depth': 6, 'min_child_weight': 7, 'gamma': 0.16404519384023433, 'colsample_bytree': 0.9637253584750997, 'reg_alpha': 4.824844552834384, 'reg_lambda': 4.148954823669426, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:29,018] Trial 426 finished with value: 201.89162454852647 and parameters: {'learning_rate': 0.0517696587803579, 'n_estimators': 151, 'subsample': 0.9152901410056496, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3231740934061246, 'colsample_bytree': 0.9346335988705111, 'reg_alpha': 0.9624624810244131, 'reg_lambda': 4.000526622882826, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:34,180] Trial 427 finished with value: 235.8295308161473 and parameters: {'learning_rate': 0.022543126700289455, 'n_estimators': 145, 'subsample': 0.9995339986862545, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.10164879159165027, 'colsample_bytree': 0.9202423282718071, 'reg_alpha': 4.053879228050197, 'reg_lambda': 4.274745028820904, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:35,119] Trial 428 finished with value: 207.5508431721212 and parameters: {'learning_rate': 0.042003977143528486, 'n_estimators': 154, 'subsample': 0.9353453319299757, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.2230149213761039, 'colsample_bytree': 0.9764804473815055, 'reg_alpha': 4.559169975301095, 'reg_lambda': 3.681595759026635, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:36,445] Trial 429 finished with value: 203.16516686344275 and parameters: {'learning_rate': 0.03537074771058105, 'n_estimators': 163, 'subsample': 0.9529862147122885, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.44903601283697037, 'colsample_bytree': 0.9589995118139584, 'reg_alpha': 1.618956316478932, 'reg_lambda': 3.862507025964252, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:37,676] Trial 430 finished with value: 203.19499063171932 and parameters: {'learning_rate': 0.04517208572508337, 'n_estimators': 149, 'subsample': 0.9264341392114406, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 3.50222765104422, 'colsample_bytree': 0.9436646386533974, 'reg_alpha': 4.406221269941042, 'reg_lambda': 4.050215764711452, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:39,324] Trial 431 finished with value: 211.20997186320955 and parameters: {'learning_rate': 0.03933386863544411, 'n_estimators': 141, 'subsample': 0.9729032897014661, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.3098159657121637, 'colsample_bytree': 0.9921315155937954, 'reg_alpha': 4.8977338312364305, 'reg_lambda': 3.4456047816835187, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:40,546] Trial 432 finished with value: 203.25638170359468 and parameters: {'learning_rate': 0.0492847477824144, 'n_estimators': 160, 'subsample': 0.8875862904894398, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.0024910527965977163, 'colsample_bytree': 0.9704340984632295, 'reg_alpha': 4.696222620533494, 'reg_lambda': 4.18966635505789, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:41,190] Trial 433 finished with value: 213.70191245416072 and parameters: {'learning_rate': 0.04290087776443839, 'n_estimators': 153, 'subsample': 0.9435325405721305, 'max_depth': 5, 'min_child_weight': 1, 'gamma': 0.15277287850018467, 'colsample_bytree': 0.9492209449560879, 'reg_alpha': 2.8565713715925134, 'reg_lambda': 4.469174852074341, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:42,057] Trial 434 finished with value: 373.3261167208354 and parameters: {'learning_rate': 0.011696929769483945, 'n_estimators': 146, 'subsample': 0.9560448396422755, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.09997349600767158, 'colsample_bytree': 0.9272294750186093, 'reg_alpha': 4.295051057590005, 'reg_lambda': 3.7831762438779957, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:45,481] Trial 435 finished with value: 208.313008710769 and parameters: {'learning_rate': 0.031463447980168875, 'n_estimators': 155, 'subsample': 0.9346031072798496, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.24826016774155377, 'colsample_bytree': 0.9633051548438718, 'reg_alpha': 4.998495679450262, 'reg_lambda': 3.9103793494197436, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:48,438] Trial 436 finished with value: 207.9376988930331 and parameters: {'learning_rate': 0.03635614262998856, 'n_estimators': 150, 'subsample': 0.968490526698488, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.38349010477520495, 'colsample_bytree': 0.9372467559653345, 'reg_alpha': 4.640641443409703, 'reg_lambda': 2.8364750730534545, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:48,874] Trial 437 finished with value: 223.58804898527518 and parameters: {'learning_rate': 0.05401344845176152, 'n_estimators': 145, 'subsample': 0.918434952304386, 'max_depth': 4, 'min_child_weight': 1, 'gamma': 0.5774896491399774, 'colsample_bytree': 0.9572195386814132, 'reg_alpha': 3.611889778612797, 'reg_lambda': 3.5970530767739386, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:50,158] Trial 438 finished with value: 206.20709181495982 and parameters: {'learning_rate': 0.046517902793213495, 'n_estimators': 156, 'subsample': 0.6098310862650577, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18465055410594913, 'colsample_bytree': 0.9786762802371857, 'reg_alpha': 4.455146145295497, 'reg_lambda': 4.089495478050012, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:51,291] Trial 439 finished with value: 200.93972094678253 and parameters: {'learning_rate': 0.03960588774475455, 'n_estimators': 149, 'subsample': 0.947521496259858, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.09418148634574151, 'colsample_bytree': 0.9445101969680461, 'reg_alpha': 4.8007868145040815, 'reg_lambda': 3.9753239589500287, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:52,128] Trial 440 finished with value: 240.12626308684216 and parameters: {'learning_rate': 0.43913156609268894, 'n_estimators': 148, 'subsample': 0.981987462792829, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.3019071375679631, 'colsample_bytree': 0.9188679441731776, 'reg_alpha': 4.577015099534098, 'reg_lambda': 4.024430710327368, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:53,215] Trial 441 finished with value: 207.23828125217983 and parameters: {'learning_rate': 0.037196481408579264, 'n_estimators': 143, 'subsample': 0.940875237804509, 'max_depth': 7, 'min_child_weight': 2, 'gamma': 0.17541801489092032, 'colsample_bytree': 0.9309996764631197, 'reg_alpha': 4.748784878560791, 'reg_lambda': 4.310823453730655, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:54,300] Trial 442 finished with value: 216.4066990458447 and parameters: {'learning_rate': 0.027239811974160335, 'n_estimators': 147, 'subsample': 0.9612662810774097, 'max_depth': 7, 'min_child_weight': 3, 'gamma': 0.38765545009727365, 'colsample_bytree': 0.8978771271209527, 'reg_alpha': 3.928972769006961, 'reg_lambda': 4.193398682820786, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:55,158] Trial 443 finished with value: 209.49965369085902 and parameters: {'learning_rate': 0.03426440498287075, 'n_estimators': 152, 'subsample': 0.9536914625185492, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.10367487592773036, 'colsample_bytree': 0.9402966254610274, 'reg_alpha': 4.146913214052657, 'reg_lambda': 1.5414279082465145, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:45:56,726] Trial 444 finished with value: 209.99273981363174 and parameters: {'learning_rate': 0.04039894372592748, 'n_estimators': 140, 'subsample': 0.9273166236384744, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 4.412546829120482, 'colsample_bytree': 0.9471757458055332, 'reg_alpha': 4.5079776989385065, 'reg_lambda': 3.958785071496645, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:01,307] Trial 445 finished with value: 210.1608252592412 and parameters: {'learning_rate': 0.04347066206343772, 'n_estimators': 149, 'subsample': 0.9101408927649935, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.25569714818437583, 'colsample_bytree': 0.6644898049000924, 'reg_alpha': 4.350191309212379, 'reg_lambda': 4.114769498156161, 'random_state': 8}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:02,475] Trial 446 finished with value: 203.90584116926428 and parameters: {'learning_rate': 0.0497007575847274, 'n_estimators': 144, 'subsample': 0.9477072325799377, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 3.088111739200559, 'colsample_bytree': 0.9103738538848812, 'reg_alpha': 4.703752721781706, 'reg_lambda': 3.3284950936077204, 'random_state': 9}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:03,745] Trial 447 finished with value: 200.9212999701689 and parameters: {'learning_rate': 0.038753915359992494, 'n_estimators': 151, 'subsample': 0.9370169958761473, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.08351089915704876, 'colsample_bytree': 0.9987321206056428, 'reg_alpha': 4.62170360739715, 'reg_lambda': 3.751040762249291, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:04,666] Trial 448 finished with value: 206.9343832658867 and parameters: {'learning_rate': 0.05777988658540481, 'n_estimators': 152, 'subsample': 0.9332953120033013, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.5161448665137902, 'colsample_bytree': 0.9851221856911031, 'reg_alpha': 4.552448065013872, 'reg_lambda': 3.5212160947672553, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:05,973] Trial 449 finished with value: 200.42149507562442 and parameters: {'learning_rate': 0.036134245434915814, 'n_estimators': 152, 'subsample': 0.9251767636055356, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.7852089684322645, 'colsample_bytree': 0.9991545473679091, 'reg_alpha': 4.460356017330738, 'reg_lambda': 3.6861567842812915, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:07,793] Trial 450 finished with value: 214.03974534970695 and parameters: {'learning_rate': 0.030297441921115394, 'n_estimators': 154, 'subsample': 0.8952960675138598, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.4559096716237248, 'colsample_bytree': 0.9980872150627205, 'reg_alpha': 4.391976480314818, 'reg_lambda': 3.623828218574491, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:09,031] Trial 451 finished with value: 204.19105236788374 and parameters: {'learning_rate': 0.03477585171980511, 'n_estimators': 147, 'subsample': 0.9183862347996875, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.7032834373181371, 'colsample_bytree': 0.9908537137698228, 'reg_alpha': 4.257754349933135, 'reg_lambda': 3.6536396037331906, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:10,359] Trial 452 finished with value: 203.91434735267597 and parameters: {'learning_rate': 0.032539442770258296, 'n_estimators': 157, 'subsample': 0.9217044103630615, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.7476476802591618, 'colsample_bytree': 0.9999777441189407, 'reg_alpha': 4.4412533009560295, 'reg_lambda': 3.5145514821599115, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:15,365] Trial 453 finished with value: 206.58998988358562 and parameters: {'learning_rate': 0.046266740030935706, 'n_estimators': 141, 'subsample': 0.9023818599184108, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.34620881434453166, 'colsample_bytree': 0.9879232836057649, 'reg_alpha': 4.30554295918217, 'reg_lambda': 3.7440099209032685, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:16,242] Trial 454 finished with value: 207.35760480145237 and parameters: {'learning_rate': 0.04278536683398995, 'n_estimators': 145, 'subsample': 0.9906629705680924, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.26335698774079375, 'colsample_bytree': 0.9783088009301668, 'reg_alpha': 4.191653849012307, 'reg_lambda': 3.822383820114846, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:17,503] Trial 455 finished with value: 200.69470701727045 and parameters: {'learning_rate': 0.03495976758411516, 'n_estimators': 152, 'subsample': 0.9068613937790763, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.47128959747815197, 'colsample_bytree': 0.9902851728196406, 'reg_alpha': 4.47801138523739, 'reg_lambda': 3.0457703828012157, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:19,269] Trial 456 finished with value: 208.80337000213078 and parameters: {'learning_rate': 0.03175190031702444, 'n_estimators': 151, 'subsample': 0.9045470561997309, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.577459858830941, 'colsample_bytree': 0.9885559838645905, 'reg_alpha': 4.427398627484727, 'reg_lambda': 3.192538311202528, 'random_state': 5}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:20,530] Trial 457 finished with value: 217.4463374292937 and parameters: {'learning_rate': 0.025225699484468848, 'n_estimators': 147, 'subsample': 0.8797806444606513, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 1.1232021628163964, 'colsample_bytree': 0.9900720408399879, 'reg_alpha': 4.361186920499396, 'reg_lambda': 3.064871652130744, 'random_state': 5}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:21,427] Trial 458 finished with value: 216.9886670389037 and parameters: {'learning_rate': 0.029019849394290625, 'n_estimators': 150, 'subsample': 0.9073163616772689, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.47185026469253477, 'colsample_bytree': 0.9838960284331597, 'reg_alpha': 4.4882176403957335, 'reg_lambda': 2.9336498293456565, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:22,630] Trial 459 finished with value: 202.52310770215547 and parameters: {'learning_rate': 0.03513970103510118, 'n_estimators': 143, 'subsample': 0.88985892486435, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.21007753377713534, 'colsample_bytree': 0.9976073828553359, 'reg_alpha': 4.248992182930618, 'reg_lambda': 3.03801289288664, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:35,916] Trial 460 finished with value: 225.50718624018592 and parameters: {'learning_rate': 0.03635675382176599, 'n_estimators': 154, 'subsample': 0.9105194648429561, 'max_depth': 17, 'min_child_weight': 1, 'gamma': 0.2946872767169678, 'colsample_bytree': 0.9730077785165766, 'reg_alpha': 4.060132420020035, 'reg_lambda': 2.7409245332300816, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:37,191] Trial 461 finished with value: 204.80545636700413 and parameters: {'learning_rate': 0.033424018730606894, 'n_estimators': 147, 'subsample': 0.916372101546781, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.18112578097431603, 'colsample_bytree': 0.9916807887006048, 'reg_alpha': 2.6394444843975657, 'reg_lambda': 2.838956394908099, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:40,507] Trial 462 finished with value: 217.88661224767566 and parameters: {'learning_rate': 0.037531177569636504, 'n_estimators': 137, 'subsample': 0.8973921374760495, 'max_depth': 9, 'min_child_weight': 1, 'gamma': 0.8648900902981582, 'colsample_bytree': 0.9795106879079873, 'reg_alpha': 3.0639178290873095, 'reg_lambda': 3.381071449522617, 'random_state': 0}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:44,010] Trial 463 finished with value: 208.17163631668907 and parameters: {'learning_rate': 0.03139880967883137, 'n_estimators': 152, 'subsample': 0.923181128311222, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3779320690601455, 'colsample_bytree': 0.9829524509210839, 'reg_alpha': 4.519215191257074, 'reg_lambda': 3.2001135124189046, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:45,667] Trial 464 finished with value: 208.2382077453523 and parameters: {'learning_rate': 0.03881887222650399, 'n_estimators': 143, 'subsample': 0.929074634776584, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 3.836125055566873, 'colsample_bytree': 0.9988833338146695, 'reg_alpha': 4.375258796641178, 'reg_lambda': 3.242635144446982, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:46,594] Trial 465 finished with value: 210.57131712462592 and parameters: {'learning_rate': 0.03522986939552131, 'n_estimators': 149, 'subsample': 0.9773975560911572, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.000495862484781976, 'colsample_bytree': 0.9718134566321166, 'reg_alpha': 4.572366350175377, 'reg_lambda': 4.625753214703037, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:47,874] Trial 466 finished with value: 201.3285628316276 and parameters: {'learning_rate': 0.04201716522826815, 'n_estimators': 157, 'subsample': 0.9152280715742287, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.17296647821574287, 'colsample_bytree': 0.9271898215420914, 'reg_alpha': 4.15598204865967, 'reg_lambda': 4.401209370321587, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:49,140] Trial 467 finished with value: 201.13744969828264 and parameters: {'learning_rate': 0.05003574384616905, 'n_estimators': 153, 'subsample': 0.9296990629028145, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.3105161039440675, 'colsample_bytree': 0.9656635036706117, 'reg_alpha': 4.4613140709621435, 'reg_lambda': 2.9404192048039635, 'random_state': 6}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:50,746] Trial 468 finished with value: 215.7644040359427 and parameters: {'learning_rate': 0.03778137602718494, 'n_estimators': 140, 'subsample': 0.9616631462517363, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 0.5197298635320071, 'colsample_bytree': 0.8867103361010338, 'reg_alpha': 4.295401676302244, 'reg_lambda': 3.4461172417842683, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:58,106] Trial 469 finished with value: 216.5930175893401 and parameters: {'learning_rate': 0.054957076516774526, 'n_estimators': 145, 'subsample': 0.8938387211403671, 'max_depth': 11, 'min_child_weight': 1, 'gamma': 0.08687420507121374, 'colsample_bytree': 0.986751915068621, 'reg_alpha': 4.59636311064888, 'reg_lambda': 4.256571689376751, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:46:59,434] Trial 470 finished with value: 206.68428582287785 and parameters: {'learning_rate': 0.02858764694144088, 'n_estimators': 161, 'subsample': 0.9393817926292702, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2427265934027511, 'colsample_bytree': 0.9731452978937275, 'reg_alpha': 3.452456981437285, 'reg_lambda': 4.171685012359187, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:00,308] Trial 471 finished with value: 206.71185243822822 and parameters: {'learning_rate': 0.04753588149657929, 'n_estimators': 150, 'subsample': 0.9248169301170166, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.3788180999671171, 'colsample_bytree': 0.9358141034599616, 'reg_alpha': 3.9897612887391087, 'reg_lambda': 4.328140205541021, 'random_state': 5}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:01,522] Trial 472 finished with value: 207.58604146365036 and parameters: {'learning_rate': 0.041199174788215887, 'n_estimators': 147, 'subsample': 0.9673069448220352, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.6427563214043475, 'colsample_bytree': 0.9647128303404777, 'reg_alpha': 4.373027080143863, 'reg_lambda': 4.063346251460334, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:02,752] Trial 473 finished with value: 202.66536228394514 and parameters: {'learning_rate': 0.037069858041515295, 'n_estimators': 155, 'subsample': 0.9099913683319507, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 1.3377394960881313, 'colsample_bytree': 0.9138411767410566, 'reg_alpha': 4.510229297677186, 'reg_lambda': 3.118068867292104, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:04,025] Trial 474 finished with value: 203.01871485319123 and parameters: {'learning_rate': 0.03333745052061435, 'n_estimators': 159, 'subsample': 0.7712440367619712, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.15977491480786246, 'colsample_bytree': 0.9526149897548021, 'reg_alpha': 4.2657402228450465, 'reg_lambda': 3.3224482917994633, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:04,726] Trial 475 finished with value: 213.6093547816854 and parameters: {'learning_rate': 0.045541872988112964, 'n_estimators': 152, 'subsample': 0.9532265804006137, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.07425999740769246, 'colsample_bytree': 0.64323296072674, 'reg_alpha': 4.443369902762635, 'reg_lambda': 3.8445349966476723, 'random_state': 7}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:06,408] Trial 476 finished with value: 208.65560842021975 and parameters: {'learning_rate': 0.041301280053005394, 'n_estimators': 144, 'subsample': 0.9361983437228133, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 1.5436509429572438, 'colsample_bytree': 0.9798922194792921, 'reg_alpha': 4.6256313705588985, 'reg_lambda': 4.191062586464959, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:11,088] Trial 477 finished with value: 200.32475532877152 and parameters: {'learning_rate': 0.05087862004007243, 'n_estimators': 149, 'subsample': 0.973524653309866, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.22649137142081444, 'colsample_bytree': 0.99909766593361, 'reg_alpha': 4.110134831219826, 'reg_lambda': 3.583191144419604, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:12,375] Trial 478 finished with value: 200.31168358557034 and parameters: {'learning_rate': 0.05589022659126148, 'n_estimators': 156, 'subsample': 0.9659668109843805, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.0032241069778069092, 'colsample_bytree': 0.9939770324438256, 'reg_alpha': 4.127434494413262, 'reg_lambda': 3.524194588462112, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:13,904] Trial 479 finished with value: 208.22340095940254 and parameters: {'learning_rate': 0.06014286810870308, 'n_estimators': 151, 'subsample': 0.9764644162158681, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.19570887921273955, 'colsample_bytree': 0.9989666367869646, 'reg_alpha': 4.133631922925441, 'reg_lambda': 3.4893353303308974, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:15,198] Trial 480 finished with value: 205.68503415008223 and parameters: {'learning_rate': 0.0602137462817012, 'n_estimators': 154, 'subsample': 0.9578658217274076, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.07491572495920573, 'colsample_bytree': 0.9990385974165243, 'reg_alpha': 4.108304612561247, 'reg_lambda': 3.4237696792844523, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:15,865] Trial 481 finished with value: 213.77481831815365 and parameters: {'learning_rate': 0.05777233755163167, 'n_estimators': 97, 'subsample': 0.9712791473773977, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.1621963367100967, 'colsample_bytree': 0.9918104295136205, 'reg_alpha': 0.6667151477815829, 'reg_lambda': 3.521567563547536, 'random_state': 3}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:27,531] Trial 482 finished with value: 231.04563833759218 and parameters: {'learning_rate': 0.05274041537921616, 'n_estimators': 148, 'subsample': 0.9787676750975851, 'max_depth': 15, 'min_child_weight': 1, 'gamma': 0.28116773472134216, 'colsample_bytree': 0.9864400480170539, 'reg_alpha': 4.178359582689845, 'reg_lambda': 3.5795467387188005, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:28,865] Trial 483 finished with value: 200.53518956246367 and parameters: {'learning_rate': 0.06239446446954413, 'n_estimators': 155, 'subsample': 0.965198314225623, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 1.8481168644316397, 'colsample_bytree': 0.9912089526788058, 'reg_alpha': 3.9252858980991068, 'reg_lambda': 3.3039087266141407, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:30,190] Trial 484 finished with value: 201.34576271011062 and parameters: {'learning_rate': 0.06993865770760747, 'n_estimators': 156, 'subsample': 0.9767164604131603, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.7939072023869854, 'colsample_bytree': 0.9915521132318541, 'reg_alpha': 4.069289950465845, 'reg_lambda': 3.3328420636735996, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:31,186] Trial 485 finished with value: 208.68128522658262 and parameters: {'learning_rate': 0.06462940818788686, 'n_estimators': 164, 'subsample': 0.9675572985770867, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 2.5260903956216545, 'colsample_bytree': 0.9915285844438425, 'reg_alpha': 3.823841459707381, 'reg_lambda': 3.4361757718901815, 'random_state': 1}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:32,994] Trial 486 finished with value: 209.08025963819904 and parameters: {'learning_rate': 0.06200304546295892, 'n_estimators': 159, 'subsample': 0.963428982039018, 'max_depth': 8, 'min_child_weight': 1, 'gamma': 1.7007175464127164, 'colsample_bytree': 0.9895113843694616, 'reg_alpha': 3.9081855789456927, 'reg_lambda': 3.59354963030584, 'random_state': 1}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:47,204] Trial 487 finished with value: 220.90660765753938 and parameters: {'learning_rate': 0.05596200937265176, 'n_estimators': 154, 'subsample': 0.9675457542391438, 'max_depth': 19, 'min_child_weight': 1, 'gamma': 3.2944068515435325, 'colsample_bytree': 0.9959043735013297, 'reg_alpha': 3.9351296539242506, 'reg_lambda': 3.302187004636304, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:48,480] Trial 488 finished with value: 208.1626054726008 and parameters: {'learning_rate': 0.0694941903985775, 'n_estimators': 153, 'subsample': 0.9597239957492951, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 2.398078063371945, 'colsample_bytree': 0.9834200284340371, 'reg_alpha': 4.021128521136185, 'reg_lambda': 3.5188869485684005, 'random_state': 5}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:53,185] Trial 489 finished with value: 204.04652202972954 and parameters: {'learning_rate': 0.05491058217476054, 'n_estimators': 157, 'subsample': 0.9851454711899261, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 2.2764863953289742, 'colsample_bytree': 0.9997364384171458, 'reg_alpha': 4.267265620640616, 'reg_lambda': 3.384444970204391, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:54,551] Trial 490 finished with value: 206.40488575483195 and parameters: {'learning_rate': 0.06600441655152883, 'n_estimators': 157, 'subsample': 0.8771547940088735, 'max_depth': 8, 'min_child_weight': 4, 'gamma': 0.45214139865477143, 'colsample_bytree': 0.9988512924943158, 'reg_alpha': 4.202618557115547, 'reg_lambda': 3.6716414716257426, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:55,862] Trial 491 finished with value: 206.24847849960392 and parameters: {'learning_rate': 0.06115515215987274, 'n_estimators': 161, 'subsample': 0.9719561095743544, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 1.9485247125962528, 'colsample_bytree': 0.9799709784381869, 'reg_alpha': 4.098429760851273, 'reg_lambda': 3.5895357642101895, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:57,115] Trial 492 finished with value: 205.08096637411475 and parameters: {'learning_rate': 0.05296125898238054, 'n_estimators': 150, 'subsample': 0.9566185223463151, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 1.440304803989275, 'colsample_bytree': 0.9999938839422494, 'reg_alpha': 3.7740116143659233, 'reg_lambda': 3.425986113077354, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:57,967] Trial 493 finished with value: 257.4720608600672 and parameters: {'learning_rate': 0.020497681807916276, 'n_estimators': 135, 'subsample': 0.9827087508887961, 'max_depth': 6, 'min_child_weight': 1, 'gamma': 0.37191368601770414, 'colsample_bytree': 0.986085961828047, 'reg_alpha': 4.196631305214299, 'reg_lambda': 3.668917583796815, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:47:59,605] Trial 494 finished with value: 207.77879740059396 and parameters: {'learning_rate': 0.04923077780862799, 'n_estimators': 155, 'subsample': 0.9000622699135298, 'max_depth': 8, 'min_child_weight': 2, 'gamma': 0.5454839540036226, 'colsample_bytree': 0.9795363634309715, 'reg_alpha': 4.328071040680588, 'reg_lambda': 3.275674422499089, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:48:00,869] Trial 495 finished with value: 202.70071726787052 and parameters: {'learning_rate': 0.056877659711454184, 'n_estimators': 152, 'subsample': 0.9653496112752729, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.2427836657557925, 'colsample_bytree': 0.9888924732155041, 'reg_alpha': 4.001095277165211, 'reg_lambda': 3.5482106428272986, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:48:02,124] Trial 496 finished with value: 203.37957677963877 and parameters: {'learning_rate': 0.051379474731281856, 'n_estimators': 150, 'subsample': 0.95501773305859, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 2.673781879553138, 'colsample_bytree': 0.9761054805854753, 'reg_alpha': 4.1164829158874, 'reg_lambda': 3.6970835419607178, 'random_state': 4}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:48:08,003] Trial 497 finished with value: 212.5011678059751 and parameters: {'learning_rate': 0.04999311339281674, 'n_estimators': 154, 'subsample': 0.9733279187293342, 'max_depth': 9, 'min_child_weight': 1, 'gamma': 0.32745259748446104, 'colsample_bytree': 0.9895725989789758, 'reg_alpha': 4.237707963296549, 'reg_lambda': 3.5194867907092626, 'random_state': 1}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:48:08,636] Trial 498 finished with value: 248.463735350063 and parameters: {'learning_rate': 0.25922129814428757, 'n_estimators': 140, 'subsample': 0.9167123734672146, 'max_depth': 5, 'min_child_weight': 1, 'gamma': 0.0067820734641299936, 'colsample_bytree': 0.9819378285028079, 'reg_alpha': 4.361524667610432, 'reg_lambda': 3.388703961668765, 'random_state': 10}. Best is trial 366 with value: 198.0573249814249.\n","[I 2024-07-27 18:48:09,466] Trial 499 finished with value: 203.25431757308272 and parameters: {'learning_rate': 0.057457936027551476, 'n_estimators': 147, 'subsample': 0.950750096816434, 'max_depth': 6, 'min_child_weight': 2, 'gamma': 0.1637459471375369, 'colsample_bytree': 0.9895516378917171, 'reg_alpha': 3.182756439941188, 'reg_lambda': 3.631969551151342, 'random_state': 2}. Best is trial 366 with value: 198.0573249814249.\n"]}]},{"cell_type":"code","source":["# Access the best params\n","best_params = study_1.best_params\n","print(best_params)\n","\n","# Access the best score\n","best_score = study_1.best_value\n","print(\"Best score:\", best_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_GnUhtsUdXkn","executionInfo":{"status":"ok","timestamp":1722116560051,"user_tz":-180,"elapsed":454,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"e681a02d-0cf3-4fa8-d383-abaee980318f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'learning_rate': 0.03890003019848595, 'n_estimators': 147, 'subsample': 0.9444304167762075, 'max_depth': 7, 'min_child_weight': 1, 'gamma': 0.17652255608071013, 'colsample_bytree': 0.9410157376623337, 'reg_alpha': 4.614871326677428, 'reg_lambda': 3.8902859140325208, 'random_state': 3}\n","Best score: 198.0573249814249\n"]}]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n","\n","# Initialize the XGBRegressor\n","xgb_reg = xgb.XGBRegressor(**best_params)\n","\n","# Train the model\n","xgb_reg.fit(X_train_crystal, y_train_crystal)\n","\n","# Predict on the test set\n","y_pred = xgb_reg.predict(X_test_crystal)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_crystal, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_crystal, y_pred)\n","mae = mean_absolute_error(y_test_crystal, y_pred)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"Root Mean Squared Error: {rmse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Mean Absolute Error: {mae}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xkOV1Emvdcx6","executionInfo":{"status":"ok","timestamp":1722116563374,"user_tz":-180,"elapsed":1525,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"7f220307-3d96-4362-d8dd-590557b0956d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error: 200427.76646555873\n","Root Mean Squared Error: 447.6915974926922\n","R² Score: 0.9107939722013602\n","Mean Absolute Error: 198.0573249814249\n"]}]},{"cell_type":"code","source":["type(X_test_crystal)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"Dnz4NTJbpJa8","executionInfo":{"status":"ok","timestamp":1722108664204,"user_tz":-180,"elapsed":830,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"1ac367bb-6245-4448-b5a4-4463bd7d3cd2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame</b><br/>def __init__(data=None, index: Axes | None=None, columns: Axes | None=None, dtype: Dtype | None=None, copy: bool | None=None) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py</a>Two-dimensional, size-mutable, potentially heterogeneous tabular data.\n","\n","Data structure also contains labeled axes (rows and columns).\n","Arithmetic operations align on both row and column labels. Can be\n","thought of as a dict-like container for Series objects. The primary\n","pandas data structure.\n","\n","Parameters\n","----------\n","data : ndarray (structured or homogeneous), Iterable, dict, or DataFrame\n","    Dict can contain Series, arrays, constants, dataclass or list-like objects. If\n","    data is a dict, column order follows insertion-order. If a dict contains Series\n","    which have an index defined, it is aligned by its index. This alignment also\n","    occurs if data is a Series or a DataFrame itself. Alignment is done on\n","    Series/DataFrame inputs.\n","\n","    If data is a list of dicts, column order follows insertion-order.\n","\n","index : Index or array-like\n","    Index to use for resulting frame. Will default to RangeIndex if\n","    no indexing information part of input data and no index provided.\n","columns : Index or array-like\n","    Column labels to use for resulting frame when data does not have them,\n","    defaulting to RangeIndex(0, 1, 2, ..., n). If data contains column labels,\n","    will perform column selection instead.\n","dtype : dtype, default None\n","    Data type to force. Only a single dtype is allowed. If None, infer.\n","copy : bool or None, default None\n","    Copy data from inputs.\n","    For dict data, the default of None behaves like ``copy=True``.  For DataFrame\n","    or 2d ndarray input, the default of None behaves like ``copy=False``.\n","    If data is a dict containing one or more Series (possibly of different dtypes),\n","    ``copy=False`` will ensure that these inputs are not copied.\n","\n","    .. versionchanged:: 1.3.0\n","\n","See Also\n","--------\n","DataFrame.from_records : Constructor from tuples, also record arrays.\n","DataFrame.from_dict : From dicts of Series, arrays, or dicts.\n","read_csv : Read a comma-separated values (csv) file into DataFrame.\n","read_table : Read general delimited file into DataFrame.\n","read_clipboard : Read text from clipboard into DataFrame.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.dataframe&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing DataFrame from a dictionary.\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [1, 2], &#x27;col2&#x27;: [3, 4]}\n","&gt;&gt;&gt; df = pd.DataFrame(data=d)\n","&gt;&gt;&gt; df\n","   col1  col2\n","0     1     3\n","1     2     4\n","\n","Notice that the inferred dtype is int64.\n","\n","&gt;&gt;&gt; df.dtypes\n","col1    int64\n","col2    int64\n","dtype: object\n","\n","To enforce a single dtype:\n","\n","&gt;&gt;&gt; df = pd.DataFrame(data=d, dtype=np.int8)\n","&gt;&gt;&gt; df.dtypes\n","col1    int8\n","col2    int8\n","dtype: object\n","\n","Constructing DataFrame from a dictionary including Series:\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [0, 1, 2, 3], &#x27;col2&#x27;: pd.Series([2, 3], index=[2, 3])}\n","&gt;&gt;&gt; pd.DataFrame(data=d, index=[0, 1, 2, 3])\n","   col1  col2\n","0     0   NaN\n","1     1   NaN\n","2     2   2.0\n","3     3   3.0\n","\n","Constructing DataFrame from numpy ndarray:\n","\n","&gt;&gt;&gt; df2 = pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]),\n","...                    columns=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; df2\n","   a  b  c\n","0  1  2  3\n","1  4  5  6\n","2  7  8  9\n","\n","Constructing DataFrame from a numpy ndarray that has labeled columns:\n","\n","&gt;&gt;&gt; data = np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)],\n","...                 dtype=[(&quot;a&quot;, &quot;i4&quot;), (&quot;b&quot;, &quot;i4&quot;), (&quot;c&quot;, &quot;i4&quot;)])\n","&gt;&gt;&gt; df3 = pd.DataFrame(data, columns=[&#x27;c&#x27;, &#x27;a&#x27;])\n","...\n","&gt;&gt;&gt; df3\n","   c  a\n","0  3  1\n","1  6  4\n","2  9  7\n","\n","Constructing DataFrame from dataclass:\n","\n","&gt;&gt;&gt; from dataclasses import make_dataclass\n","&gt;&gt;&gt; Point = make_dataclass(&quot;Point&quot;, [(&quot;x&quot;, int), (&quot;y&quot;, int)])\n","&gt;&gt;&gt; pd.DataFrame([Point(0, 0), Point(0, 3), Point(2, 3)])\n","   x  y\n","0  0  0\n","1  0  3\n","2  2  3\n","\n","Constructing DataFrame from Series/DataFrame:\n","\n","&gt;&gt;&gt; ser = pd.Series([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df = pd.DataFrame(data=ser, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df\n","   0\n","a  1\n","c  3\n","\n","&gt;&gt;&gt; df1 = pd.DataFrame([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], columns=[&quot;x&quot;])\n","&gt;&gt;&gt; df2 = pd.DataFrame(data=df1, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df2\n","   x\n","a  1\n","c  3</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 490);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":190}]},{"cell_type":"code","source":["type(y_test_crystal)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"Ha200SOspAn4","executionInfo":{"status":"ok","timestamp":1722108672405,"user_tz":-180,"elapsed":1060,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"837b2fe1-2165-4f67-c895-ad54afc6c123"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.series.Series"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.series.Series</b><br/>def __init__(data=None, index=None, dtype: Dtype | None=None, name=None, copy: bool | None=None, fastpath: bool=False) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/series.py</a>One-dimensional ndarray with axis labels (including time series).\n","\n","Labels need not be unique but must be a hashable type. The object\n","supports both integer- and label-based indexing and provides a host of\n","methods for performing operations involving the index. Statistical\n","methods from ndarray have been overridden to automatically exclude\n","missing data (currently represented as NaN).\n","\n","Operations between Series (+, -, /, \\*, \\*\\*) align values based on their\n","associated index values-- they need not be the same length. The result\n","index will be the sorted union of the two indexes.\n","\n","Parameters\n","----------\n","data : array-like, Iterable, dict, or scalar value\n","    Contains data stored in Series. If data is a dict, argument order is\n","    maintained.\n","index : array-like or Index (1d)\n","    Values must be hashable and have the same length as `data`.\n","    Non-unique index values are allowed. Will default to\n","    RangeIndex (0, 1, 2, ..., n) if not provided. If data is dict-like\n","    and index is None, then the keys in the data are used as the index. If the\n","    index is not None, the resulting Series is reindexed with the index values.\n","dtype : str, numpy.dtype, or ExtensionDtype, optional\n","    Data type for the output Series. If not specified, this will be\n","    inferred from `data`.\n","    See the :ref:`user guide &lt;basics.dtypes&gt;` for more usages.\n","name : Hashable, default None\n","    The name to give to the Series.\n","copy : bool, default False\n","    Copy input data. Only affects Series or 1d ndarray input. See examples.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.series&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing Series from a dictionary with an Index specified\n","\n","&gt;&gt;&gt; d = {&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3}\n","&gt;&gt;&gt; ser = pd.Series(data=d, index=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; ser\n","a   1\n","b   2\n","c   3\n","dtype: int64\n","\n","The keys of the dictionary match with the Index values, hence the Index\n","values have no effect.\n","\n","&gt;&gt;&gt; d = {&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3}\n","&gt;&gt;&gt; ser = pd.Series(data=d, index=[&#x27;x&#x27;, &#x27;y&#x27;, &#x27;z&#x27;])\n","&gt;&gt;&gt; ser\n","x   NaN\n","y   NaN\n","z   NaN\n","dtype: float64\n","\n","Note that the Index is first build with the keys from the dictionary.\n","After this the Series is reindexed with the given Index values, hence we\n","get all NaN as a result.\n","\n","Constructing Series from a list with `copy=False`.\n","\n","&gt;&gt;&gt; r = [1, 2]\n","&gt;&gt;&gt; ser = pd.Series(r, copy=False)\n","&gt;&gt;&gt; ser.iloc[0] = 999\n","&gt;&gt;&gt; r\n","[1, 2]\n","&gt;&gt;&gt; ser\n","0    999\n","1      2\n","dtype: int64\n","\n","Due to input data type the Series has a `copy` of\n","the original data even though `copy=False`, so\n","the data is unchanged.\n","\n","Constructing Series from a 1d ndarray with `copy=False`.\n","\n","&gt;&gt;&gt; r = np.array([1, 2])\n","&gt;&gt;&gt; ser = pd.Series(r, copy=False)\n","&gt;&gt;&gt; ser.iloc[0] = 999\n","&gt;&gt;&gt; r\n","array([999,   2])\n","&gt;&gt;&gt; ser\n","0    999\n","1      2\n","dtype: int64\n","\n","Due to input data type the Series has a `view` on\n","the original data, so\n","the data is changed as well.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 244);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":191}]},{"cell_type":"code","source":["type(y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MYyjDLESp9My","executionInfo":{"status":"ok","timestamp":1722108679028,"user_tz":-180,"elapsed":415,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"d872aed4-57d0-4657-bfb9-b33006104f5b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{},"execution_count":192}]},{"cell_type":"code","source":["# Convert the numpy array y_pred to a pandas Series\n","y_pred_series = pd.Series(y_pred, name='y_pred')\n","\n","# Ensure indices are aligned by resetting index if necessary\n","y_test_crystal_reset = y_test_crystal.reset_index(drop=True)\n","y_pred_series_reset = y_pred_series.reset_index(drop=True)\n","X_test_crystal_reset = X_test_crystal.reset_index(drop=True)\n","\n","# Concatenate the dataframe and series along the columns\n","merged_df = pd.concat([X_test_crystal_reset, y_test_crystal_reset, y_pred_series_reset], axis=1)"],"metadata":{"id":"B1E8fNULrbs0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["merged_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vw7RT_iuJYmh","executionInfo":{"status":"ok","timestamp":1722116626767,"user_tz":-180,"elapsed":0,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"1b2b7b9d-2463-4ba5-aeb1-9b79c805160d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2208 entries, 0 to 2207\n","Data columns (total 28 columns):\n"," #   Column                         Non-Null Count  Dtype  \n","---  ------                         --------------  -----  \n"," 0   week_number                    2208 non-null   int64  \n"," 1   day_of_year                    2208 non-null   int64  \n"," 2   day                            2208 non-null   int32  \n"," 3   month                          2208 non-null   int32  \n"," 4   hour                           2208 non-null   int32  \n"," 5   minute                         2208 non-null   int32  \n"," 6   global_horizon_irradiation     2208 non-null   int64  \n"," 7   direct_normal_irradiation      2208 non-null   int64  \n"," 8   diffuse_horizonal_irradiation  2208 non-null   int64  \n"," 9   sun_azimuth_angle              2208 non-null   float64\n"," 10  sun_elevation_angle            2208 non-null   float64\n"," 11  air_temp                       2208 non-null   float64\n"," 12  relative_humidity              2208 non-null   float64\n"," 13  wind_speed                     2208 non-null   float64\n"," 14  wind_direction                 2208 non-null   int64  \n"," 15  atmospheric_pressure           2208 non-null   float64\n"," 16  wet_bulb_temperature           2208 non-null   float64\n"," 17  solar_declination              2208 non-null   float64\n"," 18  solar_time                     2208 non-null   float64\n"," 19  hour_angle                     2208 non-null   float64\n"," 20  cos_theta_z                    2208 non-null   float64\n"," 21  solar_zenith_angle             2208 non-null   float64\n"," 22  relative_air_mass              2208 non-null   float64\n"," 23  wind_u                         2208 non-null   float64\n"," 24  wind_v                         2208 non-null   float64\n"," 25  maintenance                    2208 non-null   int64  \n"," 26  polycrystalline_energy         2208 non-null   float64\n"," 27  y_pred                         2208 non-null   float32\n","dtypes: float32(1), float64(16), int32(4), int64(7)\n","memory usage: 440.0 KB\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# Replace negative values with zero\n","merged_df[\"polycrystalline_energy\"] = merged_df[\"polycrystalline_energy\"].clip(lower=0)\n","merged_df[\"y_pred\"] = merged_df[\"y_pred\"].clip(lower=0)\n","\n","# Plotting the line graph\n","plt.figure(figsize=(10, 6))\n","plt.plot(merged_df[\"week_number\"], merged_df[\"polycrystalline_energy\"], label=\"Actual Energy\", marker='o')\n","plt.plot(merged_df[\"week_number\"], merged_df[\"y_pred\"], label=\"Predicted Energy\", marker='x')\n","plt.xlabel(\"Week Number\")\n","plt.ylabel(\"Energy Output\")\n","plt.title(\"Actual vs Predicted Polycrystalline Energy Output\")\n","plt.legend()\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"id":"eOyYCvVhLTso","executionInfo":{"status":"ok","timestamp":1722117081191,"user_tz":-180,"elapsed":1305,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"b0f5883e-3be5-4d25-be74-11242049ad35","colab":{"base_uri":"https://localhost:8080/","height":564}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["file_path = 'merged_df.xlsx'\n","merged_df.to_excel(file_path, index=False)"],"metadata":{"id":"TSMilEdzrozE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Thin Film Tuning"],"metadata":{"id":"HIdVF6rUdhDx"}},{"cell_type":"code","source":["from xgboost import XGBRegressor\n","from sklearn.metrics import mean_absolute_error\n","\n","# Define the objective function\n","def objective(trial):\n","    # Define the search space for hyperparameters\n","    params = {\n","        \"learning_rate\": trial.suggest_float(\"learning_rate\", 0.01, 1.0, log=True),\n","        \"n_estimators\": trial.suggest_int(\"n_estimators\", 50, 200),\n","        \"subsample\": trial.suggest_float(\"subsample\", 0.5, 1.0),\n","        \"max_depth\": trial.suggest_int(\"max_depth\", 3, 20),\n","        \"min_child_weight\": trial.suggest_int(\"min_child_weight\", 1, 10),\n","        \"gamma\": trial.suggest_float(\"gamma\", 0.0, 5.0),\n","        \"colsample_bytree\": trial.suggest_float(\"colsample_bytree\", 0.5, 1.0),\n","        \"reg_alpha\": trial.suggest_float(\"reg_alpha\", 0.0, 5.0),\n","        \"reg_lambda\": trial.suggest_float(\"reg_lambda\", 0.0, 5.0),\n","        \"random_state\": trial.suggest_int(\"random_state\", 0, 10),\n","    }\n","\n","    # Create the regressor with the suggested hyperparameters\n","    xgb_reg = XGBRegressor(**params, objective=\"reg:squarederror\")\n","\n","    # Train the model\n","    xgb_reg.fit(X_train_film, y_train_film)\n","\n","    # Predict on the validation set\n","    y_pred = xgb_reg.predict(X_test_film)\n","\n","    # Calculate and return the mean absolute error\n","    mae = mean_absolute_error(y_test_film, y_pred)\n","\n","    return mae"],"metadata":{"id":"yXI3WGLxdsXk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["study_2 = optuna.create_study(direction='minimize')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vdCfG49WduNE","executionInfo":{"status":"ok","timestamp":1722106272674,"user_tz":-180,"elapsed":427,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"f1b339d9-aded-4de0-db93-43db2b17cc35"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[I 2024-07-27 18:51:10,259] A new study created in memory with name: no-name-0d5fcfdc-4951-4867-89a0-1a596de630e3\n"]}]},{"cell_type":"code","source":["study_2.optimize(objective, n_trials = 500)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b3pZKhfPdwSA","executionInfo":{"status":"ok","timestamp":1722107782426,"user_tz":-180,"elapsed":11910,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"16420883-6794-434d-df31-86d3d05c6a62"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[I 2024-07-27 18:51:13,944] Trial 0 finished with value: 201.66362982559525 and parameters: {'learning_rate': 0.2615647566076982, 'n_estimators': 156, 'subsample': 0.5582251629523272, 'max_depth': 6, 'min_child_weight': 4, 'gamma': 2.904380054591213, 'colsample_bytree': 0.9345788386916101, 'reg_alpha': 2.988822478396264, 'reg_lambda': 1.399746847067228, 'random_state': 0}. Best is trial 0 with value: 201.66362982559525.\n","[I 2024-07-27 18:51:18,798] Trial 1 finished with value: 304.8500363130747 and parameters: {'learning_rate': 0.019738770788579815, 'n_estimators': 98, 'subsample': 0.7256930451691839, 'max_depth': 14, 'min_child_weight': 5, 'gamma': 4.208063597821868, 'colsample_bytree': 0.8440276713058512, 'reg_alpha': 1.2213295465524947, 'reg_lambda': 1.9809135934655937, 'random_state': 4}. Best is trial 0 with value: 201.66362982559525.\n","[I 2024-07-27 18:51:23,313] Trial 2 finished with value: 192.33041410642988 and parameters: {'learning_rate': 0.04683115046086363, 'n_estimators': 194, 'subsample': 0.7843363968888659, 'max_depth': 16, 'min_child_weight': 3, 'gamma': 4.840490647631298, 'colsample_bytree': 0.742106201982827, 'reg_alpha': 0.2661366880031524, 'reg_lambda': 3.7424318447238774, 'random_state': 9}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:51:26,209] Trial 3 finished with value: 195.94139495171765 and parameters: {'learning_rate': 0.14010619172033897, 'n_estimators': 191, 'subsample': 0.8143498346108204, 'max_depth': 14, 'min_child_weight': 5, 'gamma': 2.3331066035315846, 'colsample_bytree': 0.8466239899084446, 'reg_alpha': 2.7175297454098817, 'reg_lambda': 0.9370806622675093, 'random_state': 9}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:51:31,986] Trial 4 finished with value: 217.5231177949781 and parameters: {'learning_rate': 0.5758054431503178, 'n_estimators': 131, 'subsample': 0.7046980093289053, 'max_depth': 17, 'min_child_weight': 1, 'gamma': 3.835191542657454, 'colsample_bytree': 0.7181322564225221, 'reg_alpha': 0.04721852781557567, 'reg_lambda': 2.2581242187661794, 'random_state': 6}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:51:32,794] Trial 5 finished with value: 195.00319653061172 and parameters: {'learning_rate': 0.27908097236695806, 'n_estimators': 118, 'subsample': 0.8192791083471036, 'max_depth': 8, 'min_child_weight': 3, 'gamma': 3.230989446036387, 'colsample_bytree': 0.7041097080036867, 'reg_alpha': 2.485314189232809, 'reg_lambda': 4.527500596031387, 'random_state': 7}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:51:33,039] Trial 6 finished with value: 496.5457322730781 and parameters: {'learning_rate': 0.010148430455367109, 'n_estimators': 112, 'subsample': 0.5332303259280275, 'max_depth': 4, 'min_child_weight': 7, 'gamma': 4.589869887036296, 'colsample_bytree': 0.6992811989677725, 'reg_alpha': 2.964201346466605, 'reg_lambda': 4.681543034913844, 'random_state': 1}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:51:54,451] Trial 7 finished with value: 194.81271309453595 and parameters: {'learning_rate': 0.0879110113725136, 'n_estimators': 195, 'subsample': 0.8557661988606986, 'max_depth': 19, 'min_child_weight': 1, 'gamma': 3.3433515643703204, 'colsample_bytree': 0.9334706886103432, 'reg_alpha': 4.611222851981652, 'reg_lambda': 3.079675373467194, 'random_state': 8}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:51:55,864] Trial 8 finished with value: 303.99208892107504 and parameters: {'learning_rate': 0.0251521603297667, 'n_estimators': 78, 'subsample': 0.5247769308681125, 'max_depth': 18, 'min_child_weight': 3, 'gamma': 2.013954128553295, 'colsample_bytree': 0.8570506449921669, 'reg_alpha': 4.280638544390479, 'reg_lambda': 1.4956492090263662, 'random_state': 0}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:52:00,961] Trial 9 finished with value: 226.8545296747492 and parameters: {'learning_rate': 0.03469246364302365, 'n_estimators': 87, 'subsample': 0.7497719367992732, 'max_depth': 14, 'min_child_weight': 3, 'gamma': 3.1390142092631717, 'colsample_bytree': 0.7344388283945972, 'reg_alpha': 4.160272175337695, 'reg_lambda': 4.440486700765057, 'random_state': 10}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:52:01,500] Trial 10 finished with value: 230.9292027814541 and parameters: {'learning_rate': 0.05301286532396272, 'n_estimators': 55, 'subsample': 0.9729639912258339, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 0.5947210310161042, 'colsample_bytree': 0.5466968901713686, 'reg_alpha': 0.015858741831457746, 'reg_lambda': 3.4710657649087437, 'random_state': 3}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:52:10,195] Trial 11 finished with value: 202.49053033066622 and parameters: {'learning_rate': 0.0770571969823331, 'n_estimators': 191, 'subsample': 0.9197722325218116, 'max_depth': 20, 'min_child_weight': 1, 'gamma': 4.763079784547022, 'colsample_bytree': 0.573177952792393, 'reg_alpha': 1.6956077861070722, 'reg_lambda': 3.3316267133764583, 'random_state': 8}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:52:22,047] Trial 12 finished with value: 203.89412897593246 and parameters: {'learning_rate': 0.12164061736591117, 'n_estimators': 164, 'subsample': 0.8620459520955228, 'max_depth': 20, 'min_child_weight': 1, 'gamma': 3.7415844400863443, 'colsample_bytree': 0.9636051727998618, 'reg_alpha': 4.56081415942687, 'reg_lambda': 3.2191600897590984, 'random_state': 10}. Best is trial 2 with value: 192.33041410642988.\n","[I 2024-07-27 18:52:28,136] Trial 13 finished with value: 187.59364867263352 and parameters: {'learning_rate': 0.04953220006761981, 'n_estimators': 200, 'subsample': 0.6307911361566334, 'max_depth': 17, 'min_child_weight': 7, 'gamma': 1.8549726560663924, 'colsample_bytree': 0.620070859577299, 'reg_alpha': 1.0251932515198763, 'reg_lambda': 0.09986630371992966, 'random_state': 7}. Best is trial 13 with value: 187.59364867263352.\n","[I 2024-07-27 18:52:30,196] Trial 14 finished with value: 191.86525092353455 and parameters: {'learning_rate': 0.046106693266209836, 'n_estimators': 169, 'subsample': 0.6462141277009071, 'max_depth': 16, 'min_child_weight': 8, 'gamma': 1.3840001083657563, 'colsample_bytree': 0.6103735129614236, 'reg_alpha': 0.89170881955777, 'reg_lambda': 0.0005746889306495057, 'random_state': 6}. Best is trial 13 with value: 187.59364867263352.\n","[I 2024-07-27 18:52:31,869] Trial 15 finished with value: 241.19810460122227 and parameters: {'learning_rate': 0.015408716026366544, 'n_estimators': 166, 'subsample': 0.6329511563861947, 'max_depth': 11, 'min_child_weight': 8, 'gamma': 1.4857854080133703, 'colsample_bytree': 0.6491862910000645, 'reg_alpha': 0.9865106124401265, 'reg_lambda': 0.19777768238106497, 'random_state': 5}. Best is trial 13 with value: 187.59364867263352.\n","[I 2024-07-27 18:52:33,625] Trial 16 finished with value: 192.3015124523476 and parameters: {'learning_rate': 0.03495123501204051, 'n_estimators': 142, 'subsample': 0.6377647060462963, 'max_depth': 16, 'min_child_weight': 8, 'gamma': 0.9377344779756848, 'colsample_bytree': 0.6141388333246539, 'reg_alpha': 1.9009743254247935, 'reg_lambda': 0.05886372997234446, 'random_state': 6}. Best is trial 13 with value: 187.59364867263352.\n","[I 2024-07-27 18:52:34,759] Trial 17 finished with value: 202.65558282647274 and parameters: {'learning_rate': 0.2321892032522641, 'n_estimators': 175, 'subsample': 0.6279137842736672, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 1.4763215134670602, 'colsample_bytree': 0.5045166221867101, 'reg_alpha': 0.8231808601002861, 'reg_lambda': 0.6850632709414791, 'random_state': 3}. Best is trial 13 with value: 187.59364867263352.\n","[I 2024-07-27 18:52:37,210] Trial 18 finished with value: 299.99594061123685 and parameters: {'learning_rate': 0.8338951633670193, 'n_estimators': 145, 'subsample': 0.676395617119391, 'max_depth': 15, 'min_child_weight': 7, 'gamma': 0.20209089647499034, 'colsample_bytree': 0.6258231537623749, 'reg_alpha': 1.7468784180472494, 'reg_lambda': 0.6453370974600096, 'random_state': 6}. Best is trial 13 with value: 187.59364867263352.\n","[I 2024-07-27 18:52:42,132] Trial 19 finished with value: 183.60801837249085 and parameters: {'learning_rate': 0.0629391494037553, 'n_estimators': 179, 'subsample': 0.575675969228456, 'max_depth': 12, 'min_child_weight': 9, 'gamma': 1.5298144101143356, 'colsample_bytree': 0.8017780740003075, 'reg_alpha': 0.45011416299596174, 'reg_lambda': 1.4026641168793081, 'random_state': 4}. Best is trial 19 with value: 183.60801837249085.\n","[I 2024-07-27 18:52:43,182] Trial 20 finished with value: 189.70693333919152 and parameters: {'learning_rate': 0.07199581745804348, 'n_estimators': 180, 'subsample': 0.5742329216949812, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 2.1142841280338307, 'colsample_bytree': 0.7843855547001279, 'reg_alpha': 3.742708979595946, 'reg_lambda': 1.5526108707228594, 'random_state': 2}. Best is trial 19 with value: 183.60801837249085.\n","[I 2024-07-27 18:52:44,239] Trial 21 finished with value: 180.20317065511932 and parameters: {'learning_rate': 0.07011089630180671, 'n_estimators': 179, 'subsample': 0.5817657720658569, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 1.9707469506661957, 'colsample_bytree': 0.7842757496147625, 'reg_alpha': 3.6898277241446253, 'reg_lambda': 1.6541418302717592, 'random_state': 2}. Best is trial 21 with value: 180.20317065511932.\n","[I 2024-07-27 18:52:45,237] Trial 22 finished with value: 194.61653888851572 and parameters: {'learning_rate': 0.1799716259475348, 'n_estimators': 179, 'subsample': 0.5776855821484239, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 1.7821154727007416, 'colsample_bytree': 0.7940161501595664, 'reg_alpha': 3.3845913518929978, 'reg_lambda': 2.4183518161560427, 'random_state': 4}. Best is trial 21 with value: 180.20317065511932.\n","[I 2024-07-27 18:52:45,916] Trial 23 finished with value: 183.62482885136626 and parameters: {'learning_rate': 0.07233786260117672, 'n_estimators': 150, 'subsample': 0.5974892662412453, 'max_depth': 7, 'min_child_weight': 7, 'gamma': 0.9832653739913995, 'colsample_bytree': 0.7850420520223604, 'reg_alpha': 4.992485919321851, 'reg_lambda': 1.1645119027817608, 'random_state': 2}. Best is trial 21 with value: 180.20317065511932.\n","[I 2024-07-27 18:52:46,461] Trial 24 finished with value: 186.76076327632404 and parameters: {'learning_rate': 0.11687673817576724, 'n_estimators': 151, 'subsample': 0.5924784406156691, 'max_depth': 6, 'min_child_weight': 9, 'gamma': 0.9332250406776486, 'colsample_bytree': 0.7919065831953239, 'reg_alpha': 4.927759248645006, 'reg_lambda': 1.867993148548846, 'random_state': 2}. Best is trial 21 with value: 180.20317065511932.\n","[I 2024-07-27 18:52:46,735] Trial 25 finished with value: 205.36114742888878 and parameters: {'learning_rate': 0.06723512093242343, 'n_estimators': 132, 'subsample': 0.5018995259722462, 'max_depth': 3, 'min_child_weight': 6, 'gamma': 2.7128082766834862, 'colsample_bytree': 0.8800351685382529, 'reg_alpha': 3.3894573111189947, 'reg_lambda': 1.0096669095878654, 'random_state': 2}. Best is trial 21 with value: 180.20317065511932.\n","[I 2024-07-27 18:52:47,608] Trial 26 finished with value: 178.85110697108678 and parameters: {'learning_rate': 0.028689263856810303, 'n_estimators': 181, 'subsample': 0.5979898921023694, 'max_depth': 7, 'min_child_weight': 10, 'gamma': 0.07972250405319392, 'colsample_bytree': 0.8057661458895569, 'reg_alpha': 3.86051046667632, 'reg_lambda': 2.667065637509743, 'random_state': 1}. Best is trial 26 with value: 178.85110697108678.\n","[I 2024-07-27 18:52:49,405] Trial 27 finished with value: 178.25012553552375 and parameters: {'learning_rate': 0.028189540034317635, 'n_estimators': 183, 'subsample': 0.6854557452151915, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 0.028601618338652553, 'colsample_bytree': 0.885311098081051, 'reg_alpha': 3.9103692499952496, 'reg_lambda': 2.6975278076178997, 'random_state': 1}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:52:50,753] Trial 28 finished with value: 268.3263257571629 and parameters: {'learning_rate': 0.013639851000066292, 'n_estimators': 159, 'subsample': 0.6886804114307066, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 0.20388510323947068, 'colsample_bytree': 0.9091294523894052, 'reg_alpha': 3.838304324986217, 'reg_lambda': 2.779530104897535, 'random_state': 1}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:52:51,368] Trial 29 finished with value: 183.97668939229877 and parameters: {'learning_rate': 0.027778139259025884, 'n_estimators': 185, 'subsample': 0.6671203408594377, 'max_depth': 5, 'min_child_weight': 10, 'gamma': 0.49170379423112864, 'colsample_bytree': 0.9965405216811181, 'reg_alpha': 3.391679895507323, 'reg_lambda': 2.8965029246415748, 'random_state': 0}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:52:55,930] Trial 30 finished with value: 217.3729756330111 and parameters: {'learning_rate': 0.018261922093743867, 'n_estimators': 158, 'subsample': 0.7276553295099359, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.5289577498226137, 'colsample_bytree': 0.8882046559168322, 'reg_alpha': 3.8235030006969217, 'reg_lambda': 3.8856157073965356, 'random_state': 1}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:52:57,532] Trial 31 finished with value: 178.5390552601808 and parameters: {'learning_rate': 0.03150620780679582, 'n_estimators': 174, 'subsample': 0.5556525852651729, 'max_depth': 12, 'min_child_weight': 9, 'gamma': 0.07636352860293852, 'colsample_bytree': 0.8262991788293959, 'reg_alpha': 2.2432218707546645, 'reg_lambda': 2.0328449189680073, 'random_state': 3}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:52:58,858] Trial 32 finished with value: 183.99278079427384 and parameters: {'learning_rate': 0.026603932996810475, 'n_estimators': 173, 'subsample': 0.5585334255787461, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 0.020177098938845228, 'colsample_bytree': 0.8215068142830656, 'reg_alpha': 2.151748295154092, 'reg_lambda': 2.031791622125378, 'random_state': 3}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:53:00,692] Trial 33 finished with value: 184.27426378525396 and parameters: {'learning_rate': 0.03537572203177805, 'n_estimators': 186, 'subsample': 0.5339173538377097, 'max_depth': 13, 'min_child_weight': 8, 'gamma': 0.03797250351707904, 'colsample_bytree': 0.8217527881431823, 'reg_alpha': 3.224498262945465, 'reg_lambda': 2.7082162719800746, 'random_state': 0}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:53:01,558] Trial 34 finished with value: 196.93697824815044 and parameters: {'learning_rate': 0.02057070918518213, 'n_estimators': 168, 'subsample': 0.5100294056562851, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.7066285210909498, 'colsample_bytree': 0.8766537388377456, 'reg_alpha': 2.4369830816205, 'reg_lambda': 1.8894612589695967, 'random_state': 1}. Best is trial 27 with value: 178.25012553552375.\n","[I 2024-07-27 18:53:03,209] Trial 35 finished with value: 177.98374902630394 and parameters: {'learning_rate': 0.0371882933107749, 'n_estimators': 186, 'subsample': 0.6048216575086062, 'max_depth': 13, 'min_child_weight': 10, 'gamma': 1.1523957680912256, 'colsample_bytree': 0.74755467270364, 'reg_alpha': 2.999615367888729, 'reg_lambda': 2.241583972021388, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:04,763] Trial 36 finished with value: 290.27853798027115 and parameters: {'learning_rate': 0.010376019057379829, 'n_estimators': 196, 'subsample': 0.6134893824966132, 'max_depth': 13, 'min_child_weight': 10, 'gamma': 0.33877383755498336, 'colsample_bytree': 0.7539573184266819, 'reg_alpha': 2.8934469138244907, 'reg_lambda': 2.2725545106981206, 'random_state': 4}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:10,554] Trial 37 finished with value: 182.1237018588863 and parameters: {'learning_rate': 0.03879932181910078, 'n_estimators': 185, 'subsample': 0.7084782053095606, 'max_depth': 14, 'min_child_weight': 6, 'gamma': 1.0443056010716154, 'colsample_bytree': 0.7578575892211658, 'reg_alpha': 2.7195653112101623, 'reg_lambda': 2.5294422388245072, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:12,409] Trial 38 finished with value: 190.028442569937 and parameters: {'learning_rate': 0.022881440295381326, 'n_estimators': 200, 'subsample': 0.7703580412827918, 'max_depth': 13, 'min_child_weight': 10, 'gamma': 1.1418787096551275, 'colsample_bytree': 0.6772262618899294, 'reg_alpha': 2.2392691992722136, 'reg_lambda': 3.9012949860021457, 'random_state': 1}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:13,324] Trial 39 finished with value: 371.65503564384414 and parameters: {'learning_rate': 0.014123405246098973, 'n_estimators': 108, 'subsample': 0.5471196287299641, 'max_depth': 11, 'min_child_weight': 8, 'gamma': 0.6725263843142423, 'colsample_bytree': 0.8346730410594463, 'reg_alpha': 4.079699443635373, 'reg_lambda': 2.212714211004173, 'random_state': 5}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:15,542] Trial 40 finished with value: 193.40487012479988 and parameters: {'learning_rate': 0.028898111250476866, 'n_estimators': 139, 'subsample': 0.6583714555127038, 'max_depth': 15, 'min_child_weight': 5, 'gamma': 0.3541596854456013, 'colsample_bytree': 0.8463926795995838, 'reg_alpha': 3.110629135666316, 'reg_lambda': 3.003378058514346, 'random_state': 0}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:16,814] Trial 41 finished with value: 181.99894654333536 and parameters: {'learning_rate': 0.04410034130951802, 'n_estimators': 191, 'subsample': 0.6059912524366239, 'max_depth': 10, 'min_child_weight': 9, 'gamma': 2.524698400410106, 'colsample_bytree': 0.721479493188313, 'reg_alpha': 3.6451752631191123, 'reg_lambda': 1.8028302154819262, 'random_state': 2}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:17,755] Trial 42 finished with value: 191.46328808113913 and parameters: {'learning_rate': 0.09585580627272768, 'n_estimators': 173, 'subsample': 0.5556757482130669, 'max_depth': 9, 'min_child_weight': 10, 'gamma': 2.2214931204787467, 'colsample_bytree': 0.7650756444984497, 'reg_alpha': 4.52071387945368, 'reg_lambda': 2.581071138243113, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:19,815] Trial 43 finished with value: 182.3125154224031 and parameters: {'learning_rate': 0.05295698448247369, 'n_estimators': 186, 'subsample': 0.6061978903436183, 'max_depth': 12, 'min_child_weight': 9, 'gamma': 0.8058818543054524, 'colsample_bytree': 0.6859206530271953, 'reg_alpha': 4.084004074827466, 'reg_lambda': 1.6748439075492485, 'random_state': 1}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:24,007] Trial 44 finished with value: 214.38639761917833 and parameters: {'learning_rate': 0.018783022457028165, 'n_estimators': 158, 'subsample': 0.7007278661130883, 'max_depth': 8, 'min_child_weight': 4, 'gamma': 0.3428432656106301, 'colsample_bytree': 0.9244991293271629, 'reg_alpha': 3.5934514844218177, 'reg_lambda': 2.1244421546166006, 'random_state': 2}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:24,737] Trial 45 finished with value: 181.3561141540366 and parameters: {'learning_rate': 0.030467990195787338, 'n_estimators': 190, 'subsample': 0.7341387267665266, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 1.250204150855706, 'colsample_bytree': 0.867226656069911, 'reg_alpha': 2.825779382475422, 'reg_lambda': 3.4673237541833615, 'random_state': 4}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:26,639] Trial 46 finished with value: 180.62942641527997 and parameters: {'learning_rate': 0.05833928761639612, 'n_estimators': 180, 'subsample': 0.53301365657273, 'max_depth': 14, 'min_child_weight': 8, 'gamma': 1.7734044707862533, 'colsample_bytree': 0.9006621192785904, 'reg_alpha': 3.954365974830409, 'reg_lambda': 2.2426334448482788, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:28,932] Trial 47 finished with value: 200.5556242767698 and parameters: {'learning_rate': 0.022948953696242762, 'n_estimators': 163, 'subsample': 0.5814366316905886, 'max_depth': 10, 'min_child_weight': 2, 'gamma': 2.4428663977609024, 'colsample_bytree': 0.8170226089051945, 'reg_alpha': 4.277952156981161, 'reg_lambda': 2.46612214484225, 'random_state': 1}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:29,239] Trial 48 finished with value: 209.99199905368357 and parameters: {'learning_rate': 0.04208667290255871, 'n_estimators': 73, 'subsample': 0.8004850266039328, 'max_depth': 5, 'min_child_weight': 9, 'gamma': 2.9005876005034104, 'colsample_bytree': 0.7327823479261675, 'reg_alpha': 2.561647692287588, 'reg_lambda': 1.190544307330521, 'random_state': 2}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:30,377] Trial 49 finished with value: 184.42764921475194 and parameters: {'learning_rate': 0.08908592380764477, 'n_estimators': 123, 'subsample': 0.6574765075442407, 'max_depth': 13, 'min_child_weight': 10, 'gamma': 0.04689777354064893, 'colsample_bytree': 0.7682256436056081, 'reg_alpha': 1.4558337168751483, 'reg_lambda': 3.0935129153064076, 'random_state': 0}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:31,229] Trial 50 finished with value: 234.6893754513562 and parameters: {'learning_rate': 0.39846945710527054, 'n_estimators': 172, 'subsample': 0.5502536888903935, 'max_depth': 7, 'min_child_weight': 8, 'gamma': 3.5175230822774908, 'colsample_bytree': 0.9633412163765241, 'reg_alpha': 3.0390322085516353, 'reg_lambda': 2.7030948381588704, 'random_state': 2}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:32,652] Trial 51 finished with value: 180.3769944585236 and parameters: {'learning_rate': 0.0575527664496241, 'n_estimators': 180, 'subsample': 0.5243035196222723, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 1.7078510957093993, 'colsample_bytree': 0.9051827412987717, 'reg_alpha': 3.948271583543277, 'reg_lambda': 2.2724957527433927, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:38,565] Trial 52 finished with value: 179.1298835298499 and parameters: {'learning_rate': 0.03329977109167511, 'n_estimators': 195, 'subsample': 0.6194678308052856, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 1.6089644081020518, 'colsample_bytree': 0.8531175955780526, 'reg_alpha': 3.5621090446679555, 'reg_lambda': 1.724435700750965, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:40,320] Trial 53 finished with value: 180.01459858421714 and parameters: {'learning_rate': 0.03321734729264513, 'n_estimators': 197, 'subsample': 0.6203602828854768, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 1.999472476599372, 'colsample_bytree': 0.8577314050380116, 'reg_alpha': 3.5733395996566633, 'reg_lambda': 1.632500143531965, 'random_state': 4}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:42,075] Trial 54 finished with value: 179.1783823598428 and parameters: {'learning_rate': 0.03249510435391702, 'n_estimators': 196, 'subsample': 0.6186268494231347, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 1.1821537781774696, 'colsample_bytree': 0.8371676185945854, 'reg_alpha': 3.5780185130417497, 'reg_lambda': 1.3004874430892746, 'random_state': 5}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:44,179] Trial 55 finished with value: 186.14643008949903 and parameters: {'learning_rate': 0.024413169268240543, 'n_estimators': 192, 'subsample': 0.6331442674755471, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 0.7968652529871969, 'colsample_bytree': 0.8386946998439564, 'reg_alpha': 3.224661641199284, 'reg_lambda': 1.254064721906282, 'random_state': 5}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:46,222] Trial 56 finished with value: 204.78024846080913 and parameters: {'learning_rate': 0.01692931630000693, 'n_estimators': 194, 'subsample': 0.6800064219516019, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 1.2977864244223634, 'colsample_bytree': 0.8088637574297877, 'reg_alpha': 4.260660953912071, 'reg_lambda': 0.8384845312692075, 'random_state': 7}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:51,644] Trial 57 finished with value: 181.01253515005442 and parameters: {'learning_rate': 0.042921092972537774, 'n_estimators': 187, 'subsample': 0.6496741380302787, 'max_depth': 13, 'min_child_weight': 9, 'gamma': 1.5936288698958327, 'colsample_bytree': 0.856075971194051, 'reg_alpha': 3.4880549944489614, 'reg_lambda': 2.01437646663389, 'random_state': 4}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:54,170] Trial 58 finished with value: 184.86837722690714 and parameters: {'learning_rate': 0.03692255786291079, 'n_estimators': 164, 'subsample': 0.9855497261794604, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 4.0957680291453915, 'colsample_bytree': 0.8343750940451274, 'reg_alpha': 4.388979822823016, 'reg_lambda': 1.3815810268650728, 'random_state': 5}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:55,877] Trial 59 finished with value: 242.23619124706732 and parameters: {'learning_rate': 0.012433949293825701, 'n_estimators': 200, 'subsample': 0.5943374291125288, 'max_depth': 11, 'min_child_weight': 8, 'gamma': 0.25274677358667286, 'colsample_bytree': 0.9234779674282598, 'reg_alpha': 4.686188084787108, 'reg_lambda': 4.929147648333988, 'random_state': 8}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:57,437] Trial 60 finished with value: 196.31213218078605 and parameters: {'learning_rate': 0.020892295423119853, 'n_estimators': 176, 'subsample': 0.5644162586628855, 'max_depth': 14, 'min_child_weight': 9, 'gamma': 0.48198653869398256, 'colsample_bytree': 0.7111478014440862, 'reg_alpha': 3.2402722413347425, 'reg_lambda': 3.257735274146997, 'random_state': 5}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:53:59,221] Trial 61 finished with value: 181.36659485547574 and parameters: {'learning_rate': 0.03191358993307676, 'n_estimators': 196, 'subsample': 0.6219811087757916, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 2.0332229281142493, 'colsample_bytree': 0.8562120091956149, 'reg_alpha': 3.6592097943430515, 'reg_lambda': 1.6371864716261382, 'random_state': 4}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:54:04,502] Trial 62 finished with value: 179.7980360836157 and parameters: {'learning_rate': 0.03217690697847609, 'n_estimators': 183, 'subsample': 0.6183883168093282, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 1.3942293959648475, 'colsample_bytree': 0.9506679074566435, 'reg_alpha': 3.939580814363807, 'reg_lambda': 1.7717030640024698, 'random_state': 4}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:54:06,698] Trial 63 finished with value: 182.81047277564886 and parameters: {'learning_rate': 0.027783805280952527, 'n_estimators': 183, 'subsample': 0.594814223091659, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 1.1706333596565406, 'colsample_bytree': 0.9496913155215242, 'reg_alpha': 3.964115698781648, 'reg_lambda': 0.36311127959562517, 'random_state': 6}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:54:08,288] Trial 64 finished with value: 179.69371008220966 and parameters: {'learning_rate': 0.051546447789768586, 'n_estimators': 190, 'subsample': 0.6412225303191355, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 1.3864423756416542, 'colsample_bytree': 0.9794730392181261, 'reg_alpha': 2.0594287428897915, 'reg_lambda': 2.4130400287199594, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:54:09,787] Trial 65 finished with value: 182.61715069733413 and parameters: {'learning_rate': 0.05164482585099981, 'n_estimators': 189, 'subsample': 0.645154491330297, 'max_depth': 10, 'min_child_weight': 9, 'gamma': 0.8746923860248303, 'colsample_bytree': 0.9763886974298924, 'reg_alpha': 1.892392544700833, 'reg_lambda': 2.399786954709084, 'random_state': 3}. Best is trial 35 with value: 177.98374902630394.\n","[I 2024-07-27 18:54:11,216] Trial 66 finished with value: 177.57016546136072 and parameters: {'learning_rate': 0.03914914323295482, 'n_estimators': 169, 'subsample': 0.6701913675888089, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 0.16509604799836142, 'colsample_bytree': 0.803354596247859, 'reg_alpha': 2.196945216013728, 'reg_lambda': 2.032983888514732, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:13,146] Trial 67 finished with value: 184.62194386528137 and parameters: {'learning_rate': 0.039034291309122456, 'n_estimators': 167, 'subsample': 0.6955653323292879, 'max_depth': 13, 'min_child_weight': 7, 'gamma': 0.1916705058214227, 'colsample_bytree': 0.7778698495004777, 'reg_alpha': 2.532805398425471, 'reg_lambda': 2.0149692374569126, 'random_state': 2}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:16,855] Trial 68 finished with value: 197.37081772539435 and parameters: {'learning_rate': 0.0244492251642121, 'n_estimators': 153, 'subsample': 0.7146660729351434, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 0.5799203325300618, 'colsample_bytree': 0.8028280797387308, 'reg_alpha': 1.6641552340899628, 'reg_lambda': 1.4134903028542256, 'random_state': 9}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:20,016] Trial 69 finished with value: 186.29144221074844 and parameters: {'learning_rate': 0.02722598761618592, 'n_estimators': 171, 'subsample': 0.6710640472841568, 'max_depth': 14, 'min_child_weight': 8, 'gamma': 0.10738886114011788, 'colsample_bytree': 0.7395417654922571, 'reg_alpha': 2.229006458095798, 'reg_lambda': 2.8009481414598447, 'random_state': 1}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:21,626] Trial 70 finished with value: 214.60172188306694 and parameters: {'learning_rate': 0.01746770664814577, 'n_estimators': 176, 'subsample': 0.9376240256092734, 'max_depth': 9, 'min_child_weight': 9, 'gamma': 0.415422255097318, 'colsample_bytree': 0.8252782680412031, 'reg_alpha': 2.3457296871330304, 'reg_lambda': 1.0093189556899103, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:23,220] Trial 71 finished with value: 178.85802447497142 and parameters: {'learning_rate': 0.04731624918432425, 'n_estimators': 194, 'subsample': 0.6411246196465475, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 0.6969900429089398, 'colsample_bytree': 0.8879643591788695, 'reg_alpha': 1.954749764084534, 'reg_lambda': 2.6509475223786243, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:24,641] Trial 72 finished with value: 180.2425027332311 and parameters: {'learning_rate': 0.044580235368844194, 'n_estimators': 195, 'subsample': 0.6632990894471382, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 0.6593032498013287, 'colsample_bytree': 0.8732348937757382, 'reg_alpha': 1.9781891013025512, 'reg_lambda': 2.652700311671855, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:26,783] Trial 73 finished with value: 180.05492941377403 and parameters: {'learning_rate': 0.03777511798680956, 'n_estimators': 183, 'subsample': 0.8446339969575358, 'max_depth': 13, 'min_child_weight': 9, 'gamma': 1.0518506668600858, 'colsample_bytree': 0.8968131237314227, 'reg_alpha': 1.505900426891523, 'reg_lambda': 2.966765538983009, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:30,289] Trial 74 finished with value: 192.86182653088332 and parameters: {'learning_rate': 0.02202799771658611, 'n_estimators': 178, 'subsample': 0.6840848965102067, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 0.21612589314857383, 'colsample_bytree': 0.8103319436871865, 'reg_alpha': 2.7677036368260457, 'reg_lambda': 1.8854418581578742, 'random_state': 2}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:33,447] Trial 75 finished with value: 179.51800382178666 and parameters: {'learning_rate': 0.030270012679642536, 'n_estimators': 200, 'subsample': 0.5703652083345588, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.4718143801821398, 'colsample_bytree': 0.8899467761410566, 'reg_alpha': 2.6740285933751564, 'reg_lambda': 2.095948539535962, 'random_state': 5}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:34,929] Trial 76 finished with value: 181.06327107196384 and parameters: {'learning_rate': 0.0480894740798077, 'n_estimators': 192, 'subsample': 0.5845125562523245, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 0.7521873666912549, 'colsample_bytree': 0.8464123628862833, 'reg_alpha': 3.4481339505745026, 'reg_lambda': 2.3502297454458443, 'random_state': 0}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:35,298] Trial 77 finished with value: 202.1551988095211 and parameters: {'learning_rate': 0.08080197542707243, 'n_estimators': 187, 'subsample': 0.6061951253828098, 'max_depth': 3, 'min_child_weight': 9, 'gamma': 0.31866901390477526, 'colsample_bytree': 0.9161543472784962, 'reg_alpha': 2.9552688430001615, 'reg_lambda': 2.848498132664883, 'random_state': 7}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:36,121] Trial 78 finished with value: 325.36572657756926 and parameters: {'learning_rate': 0.03459234565602224, 'n_estimators': 52, 'subsample': 0.7518325707938079, 'max_depth': 12, 'min_child_weight': 4, 'gamma': 0.02476930412579119, 'colsample_bytree': 0.793148562559256, 'reg_alpha': 2.3830068534560627, 'reg_lambda': 2.5613230900071553, 'random_state': 4}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:37,448] Trial 79 finished with value: 182.81401880392656 and parameters: {'learning_rate': 0.03986108301796315, 'n_estimators': 162, 'subsample': 0.6306353472123111, 'max_depth': 10, 'min_child_weight': 8, 'gamma': 0.14530120876819372, 'colsample_bytree': 0.8679577908814106, 'reg_alpha': 3.7917606284944076, 'reg_lambda': 2.185380686981131, 'random_state': 4}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:37,872] Trial 80 finished with value: 188.6587941756474 and parameters: {'learning_rate': 0.06122050150399388, 'n_estimators': 169, 'subsample': 0.652910678797507, 'max_depth': 4, 'min_child_weight': 10, 'gamma': 0.9388055894459665, 'colsample_bytree': 0.8227388200079556, 'reg_alpha': 1.8301801489977048, 'reg_lambda': 1.7910111821383086, 'random_state': 1}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:38,897] Trial 81 finished with value: 180.89733712571456 and parameters: {'learning_rate': 0.029606568600568695, 'n_estimators': 198, 'subsample': 0.5662525015781685, 'max_depth': 7, 'min_child_weight': 9, 'gamma': 0.5069587113009788, 'colsample_bytree': 0.8850656464711666, 'reg_alpha': 2.1383457486777964, 'reg_lambda': 2.072372391035275, 'random_state': 5}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:40,061] Trial 82 finished with value: 179.73368341237784 and parameters: {'learning_rate': 0.025784610594084538, 'n_estimators': 200, 'subsample': 0.5439292456247804, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 0.5880904346306273, 'colsample_bytree': 0.8366839331288994, 'reg_alpha': 3.1493367174486218, 'reg_lambda': 1.9399950321876414, 'random_state': 6}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:41,408] Trial 83 finished with value: 182.10983172529734 and parameters: {'learning_rate': 0.03136608884522362, 'n_estimators': 193, 'subsample': 0.606664084696346, 'max_depth': 9, 'min_child_weight': 10, 'gamma': 0.42433416376734706, 'colsample_bytree': 0.892177782499697, 'reg_alpha': 2.676475921025164, 'reg_lambda': 1.497751025379829, 'random_state': 5}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:42,501] Trial 84 finished with value: 194.82121119242524 and parameters: {'learning_rate': 0.01977801848135149, 'n_estimators': 182, 'subsample': 0.5735276122188832, 'max_depth': 8, 'min_child_weight': 9, 'gamma': 4.996039415432161, 'colsample_bytree': 0.7706590390036651, 'reg_alpha': 2.5778126106780412, 'reg_lambda': 2.130102017183371, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:47,704] Trial 85 finished with value: 181.07447159248383 and parameters: {'learning_rate': 0.046263317707625026, 'n_estimators': 188, 'subsample': 0.5864933939368091, 'max_depth': 11, 'min_child_weight': 6, 'gamma': 0.2770381598535216, 'colsample_bytree': 0.8630157653804843, 'reg_alpha': 2.3383833288954015, 'reg_lambda': 3.1116584226501227, 'random_state': 2}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:48,160] Trial 86 finished with value: 364.203918362287 and parameters: {'learning_rate': 0.969937812107978, 'n_estimators': 99, 'subsample': 0.514489908040754, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 1.100788053475178, 'colsample_bytree': 0.9328276643120154, 'reg_alpha': 2.875655001994031, 'reg_lambda': 2.613331211553615, 'random_state': 4}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:49,766] Trial 87 finished with value: 231.09852951703357 and parameters: {'learning_rate': 0.015674965747508707, 'n_estimators': 174, 'subsample': 0.6138127257776931, 'max_depth': 13, 'min_child_weight': 9, 'gamma': 0.7397086751223364, 'colsample_bytree': 0.7977425299721094, 'reg_alpha': 1.6143122568552162, 'reg_lambda': 2.3310274953386854, 'random_state': 6}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:51,207] Trial 88 finished with value: 199.44138682742536 and parameters: {'learning_rate': 0.17258312033509163, 'n_estimators': 196, 'subsample': 0.6324133985039697, 'max_depth': 10, 'min_child_weight': 7, 'gamma': 0.00561728257800799, 'colsample_bytree': 0.7520091031985462, 'reg_alpha': 2.6798443782621737, 'reg_lambda': 1.326617216443438, 'random_state': 1}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:52,511] Trial 89 finished with value: 181.24047506327585 and parameters: {'learning_rate': 0.0362750317728349, 'n_estimators': 193, 'subsample': 0.541117426612573, 'max_depth': 9, 'min_child_weight': 8, 'gamma': 0.8503789152233716, 'colsample_bytree': 0.8469937842394174, 'reg_alpha': 3.305536211848285, 'reg_lambda': 1.7718040791919183, 'random_state': 2}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:54,238] Trial 90 finished with value: 182.38309762441585 and parameters: {'learning_rate': 0.02375029393729451, 'n_estimators': 184, 'subsample': 0.5683702198975527, 'max_depth': 14, 'min_child_weight': 10, 'gamma': 0.39138604628299817, 'colsample_bytree': 0.8809103273479448, 'reg_alpha': 4.1063654548867445, 'reg_lambda': 3.4607129321460253, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:54:55,709] Trial 91 finished with value: 181.9650548303092 and parameters: {'learning_rate': 0.05492364502375198, 'n_estimators': 189, 'subsample': 0.6458626464962776, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 1.6110356742758116, 'colsample_bytree': 0.8127957447452003, 'reg_alpha': 2.0722467879275275, 'reg_lambda': 2.449332796531105, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:55:00,997] Trial 92 finished with value: 182.41163827839748 and parameters: {'learning_rate': 0.06529722074241397, 'n_estimators': 189, 'subsample': 0.6003479910389898, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 1.212851602142273, 'colsample_bytree': 0.9099797255536912, 'reg_alpha': 1.979439053274609, 'reg_lambda': 2.467562399947826, 'random_state': 3}. Best is trial 66 with value: 177.57016546136072.\n","[I 2024-07-27 18:55:02,603] Trial 93 finished with value: 176.16567643869627 and parameters: {'learning_rate': 0.041332890070070016, 'n_estimators': 179, 'subsample': 0.6367547852012866, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 1.3686647145594082, 'colsample_bytree': 0.9930316412590863, 'reg_alpha': 2.2791539046794766, 'reg_lambda': 2.769363343869459, 'random_state': 3}. Best is trial 93 with value: 176.16567643869627.\n","[I 2024-07-27 18:55:04,419] Trial 94 finished with value: 182.71920265113226 and parameters: {'learning_rate': 0.029171198811351905, 'n_estimators': 178, 'subsample': 0.6731825452175083, 'max_depth': 12, 'min_child_weight': 9, 'gamma': 0.1677126053269045, 'colsample_bytree': 0.8478015160932474, 'reg_alpha': 2.212924734938854, 'reg_lambda': 2.685885023765782, 'random_state': 4}. Best is trial 93 with value: 176.16567643869627.\n","[I 2024-07-27 18:55:06,095] Trial 95 finished with value: 180.06851927458726 and parameters: {'learning_rate': 0.03443603190450184, 'n_estimators': 181, 'subsample': 0.6273967502349287, 'max_depth': 13, 'min_child_weight': 10, 'gamma': 0.6580739187244481, 'colsample_bytree': 0.7818835478928672, 'reg_alpha': 2.489177129505396, 'reg_lambda': 2.9330941036393052, 'random_state': 5}. Best is trial 93 with value: 176.16567643869627.\n","[I 2024-07-27 18:55:08,030] Trial 96 finished with value: 181.97017880611068 and parameters: {'learning_rate': 0.04133989395298739, 'n_estimators': 171, 'subsample': 0.6589215629387953, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.003818492681205, 'colsample_bytree': 0.729868644680554, 'reg_alpha': 3.076959245911367, 'reg_lambda': 2.113891827933656, 'random_state': 2}. Best is trial 93 with value: 176.16567643869627.\n","[I 2024-07-27 18:55:08,615] Trial 97 finished with value: 182.58724580140589 and parameters: {'learning_rate': 0.047954871075693864, 'n_estimators': 176, 'subsample': 0.5563737710143687, 'max_depth': 5, 'min_child_weight': 2, 'gamma': 1.861014721113147, 'colsample_bytree': 0.8279348751739851, 'reg_alpha': 1.3278771031299534, 'reg_lambda': 1.552710120659993, 'random_state': 4}. Best is trial 93 with value: 176.16567643869627.\n","[I 2024-07-27 18:55:10,061] Trial 98 finished with value: 194.08510350354214 and parameters: {'learning_rate': 0.02566636998482106, 'n_estimators': 133, 'subsample': 0.693048855835275, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 1.2732018958023146, 'colsample_bytree': 0.9957781097638414, 'reg_alpha': 1.8123140427235378, 'reg_lambda': 2.7466276450706153, 'random_state': 2}. Best is trial 93 with value: 176.16567643869627.\n","[I 2024-07-27 18:55:15,583] Trial 99 finished with value: 174.94901572440136 and parameters: {'learning_rate': 0.03201022427196654, 'n_estimators': 198, 'subsample': 0.6226984286921771, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 0.5076295014226794, 'colsample_bytree': 0.9397492342504067, 'reg_alpha': 3.5188459610005043, 'reg_lambda': 2.2556662983576894, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:16,996] Trial 100 finished with value: 178.0479869542033 and parameters: {'learning_rate': 0.041242728125778366, 'n_estimators': 186, 'subsample': 0.6411972702213227, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 1.4463735204286443, 'colsample_bytree': 0.9501805190653021, 'reg_alpha': 3.527468519228915, 'reg_lambda': 2.2582808638722787, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:19,182] Trial 101 finished with value: 179.36500719557992 and parameters: {'learning_rate': 0.033692731653006305, 'n_estimators': 185, 'subsample': 0.6418244964800546, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 1.3980334213585477, 'colsample_bytree': 0.9537669879384432, 'reg_alpha': 3.5205903124476254, 'reg_lambda': 2.3009550498921714, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:20,847] Trial 102 finished with value: 177.43798779849206 and parameters: {'learning_rate': 0.04160276905196948, 'n_estimators': 194, 'subsample': 0.6226954108170272, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 1.502738361491836, 'colsample_bytree': 0.976277825812968, 'reg_alpha': 3.7346032095572297, 'reg_lambda': 2.545349389531605, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:22,438] Trial 103 finished with value: 178.23053552888868 and parameters: {'learning_rate': 0.0416227656446818, 'n_estimators': 193, 'subsample': 0.7144212957560707, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 1.5441015063968855, 'colsample_bytree': 0.9763514947254412, 'reg_alpha': 3.8462222974161846, 'reg_lambda': 2.5475627554015308, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:25,381] Trial 104 finished with value: 178.8744684498975 and parameters: {'learning_rate': 0.043064839658881665, 'n_estimators': 180, 'subsample': 0.7393501807934202, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 1.4791205885698857, 'colsample_bytree': 0.9838927181107711, 'reg_alpha': 3.8402593079574463, 'reg_lambda': 2.5655586384889877, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:30,157] Trial 105 finished with value: 176.15438604100083 and parameters: {'learning_rate': 0.0388351575149116, 'n_estimators': 186, 'subsample': 0.7123316338203988, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.8558253740203066, 'colsample_bytree': 0.9595287303091482, 'reg_alpha': 3.7598701736843063, 'reg_lambda': 2.8249149765906023, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:32,533] Trial 106 finished with value: 180.80686077099344 and parameters: {'learning_rate': 0.03845660288658096, 'n_estimators': 187, 'subsample': 0.7074045889369671, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.8403216716809188, 'colsample_bytree': 0.9421069822551987, 'reg_alpha': 3.727413782093627, 'reg_lambda': 2.8919112382711525, 'random_state': 2}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:34,868] Trial 107 finished with value: 178.61993751690534 and parameters: {'learning_rate': 0.04154483810279442, 'n_estimators': 176, 'subsample': 0.7241029150718769, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 1.7380237167308994, 'colsample_bytree': 0.9882947326107321, 'reg_alpha': 4.203225084246954, 'reg_lambda': 3.042353224735535, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:37,269] Trial 108 finished with value: 180.25908930636675 and parameters: {'learning_rate': 0.06087970185884746, 'n_estimators': 176, 'subsample': 0.722686445788611, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 1.5194047422559027, 'colsample_bytree': 0.9670805929408728, 'reg_alpha': 4.3198419558713805, 'reg_lambda': 3.1712057180395004, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:42,957] Trial 109 finished with value: 186.04671788337953 and parameters: {'learning_rate': 0.07461849168381393, 'n_estimators': 171, 'subsample': 0.7613948559742569, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.6940161385437242, 'colsample_bytree': 0.9667732818231323, 'reg_alpha': 4.209354381346497, 'reg_lambda': 3.336555229867852, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:45,210] Trial 110 finished with value: 179.75389579991406 and parameters: {'learning_rate': 0.052884141384269515, 'n_estimators': 165, 'subsample': 0.7160789144458052, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 2.3107370191171657, 'colsample_bytree': 0.9995466874252414, 'reg_alpha': 3.3966743683133047, 'reg_lambda': 2.8139472116763082, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:47,585] Trial 111 finished with value: 180.03337153608263 and parameters: {'learning_rate': 0.042695278700052096, 'n_estimators': 185, 'subsample': 0.7837071444755098, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.1963020014633763, 'colsample_bytree': 0.980756419048835, 'reg_alpha': 4.006030992454479, 'reg_lambda': 3.030931538100635, 'random_state': 4}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:50,013] Trial 112 finished with value: 179.80054061923573 and parameters: {'learning_rate': 0.02667505579474882, 'n_estimators': 191, 'subsample': 0.6873960900383314, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 1.9075260782629004, 'colsample_bytree': 0.9378497729712822, 'reg_alpha': 3.861008884754817, 'reg_lambda': 2.5129417764589226, 'random_state': 2}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:50,863] Trial 113 finished with value: 234.62070118714564 and parameters: {'learning_rate': 0.03628668353878482, 'n_estimators': 68, 'subsample': 0.729620209505794, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 1.6585108944592066, 'colsample_bytree': 0.9898670055049451, 'reg_alpha': 4.456221911119684, 'reg_lambda': 2.267370388418408, 'random_state': 3}. Best is trial 99 with value: 174.94901572440136.\n","[I 2024-07-27 18:55:56,426] Trial 114 finished with value: 174.86341854653517 and parameters: {'learning_rate': 0.03983350341619189, 'n_estimators': 178, 'subsample': 0.6985199177966807, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 1.340530662650685, 'colsample_bytree': 0.9574777768595562, 'reg_alpha': 3.6779411086061478, 'reg_lambda': 3.6667888253134677, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:55:58,784] Trial 115 finished with value: 178.59276848278665 and parameters: {'learning_rate': 0.04030684899648291, 'n_estimators': 178, 'subsample': 0.7030285388719036, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.3730367232714589, 'colsample_bytree': 0.9559456290283685, 'reg_alpha': 3.7183434605433896, 'reg_lambda': 3.585742158159666, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:01,231] Trial 116 finished with value: 184.40626096105885 and parameters: {'learning_rate': 0.049941979209407114, 'n_estimators': 182, 'subsample': 0.7003105395227512, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.3299173539580553, 'colsample_bytree': 0.9562084325662388, 'reg_alpha': 3.6628213081013117, 'reg_lambda': 3.8345591032775146, 'random_state': 4}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:04,462] Trial 117 finished with value: 190.8699676379637 and parameters: {'learning_rate': 0.10754141653171007, 'n_estimators': 179, 'subsample': 0.6637130403620652, 'max_depth': 16, 'min_child_weight': 5, 'gamma': 1.4712097998384093, 'colsample_bytree': 0.925445762796317, 'reg_alpha': 3.2920007700608123, 'reg_lambda': 4.05607158539907, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:10,093] Trial 118 finished with value: 176.25679227610686 and parameters: {'learning_rate': 0.038519379302445436, 'n_estimators': 161, 'subsample': 0.6772412562805947, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.5350574406641253, 'colsample_bytree': 0.9712629232973451, 'reg_alpha': 3.7392667110450857, 'reg_lambda': 3.568244817174217, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:12,419] Trial 119 finished with value: 178.80696214163075 and parameters: {'learning_rate': 0.05730467528930071, 'n_estimators': 161, 'subsample': 0.6761951288875938, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 1.1635910435402192, 'colsample_bytree': 0.9673734218561009, 'reg_alpha': 4.030472056835623, 'reg_lambda': 4.12738653858032, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:14,736] Trial 120 finished with value: 176.63051225982585 and parameters: {'learning_rate': 0.030846876706677972, 'n_estimators': 168, 'subsample': 0.7450763864467804, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 2.072212223895578, 'colsample_bytree': 0.9740247619147775, 'reg_alpha': 3.5019982000121423, 'reg_lambda': 3.59878519429669, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:16,861] Trial 121 finished with value: 177.57556084959225 and parameters: {'learning_rate': 0.03714131716799902, 'n_estimators': 173, 'subsample': 0.7490669456298954, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.061114500776182, 'colsample_bytree': 0.9749753078350013, 'reg_alpha': 3.8840751468995305, 'reg_lambda': 3.6979222329408503, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:18,818] Trial 122 finished with value: 177.60837373389154 and parameters: {'learning_rate': 0.03793351303984135, 'n_estimators': 155, 'subsample': 0.7424851633193599, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.0528272106596614, 'colsample_bytree': 0.9721248612390992, 'reg_alpha': 3.8907252157555665, 'reg_lambda': 3.6917518674735312, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:24,479] Trial 123 finished with value: 178.67271250911494 and parameters: {'learning_rate': 0.037464833904663555, 'n_estimators': 167, 'subsample': 0.7434230057534599, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.9273109626544151, 'colsample_bytree': 0.9726755847110167, 'reg_alpha': 3.77468759179289, 'reg_lambda': 3.683620060342652, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:26,717] Trial 124 finished with value: 179.633976710306 and parameters: {'learning_rate': 0.046205388554802586, 'n_estimators': 158, 'subsample': 0.7701946645223758, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 2.1128340210831, 'colsample_bytree': 0.9404102919393197, 'reg_alpha': 3.613548165572598, 'reg_lambda': 3.9871322851647317, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:28,655] Trial 125 finished with value: 177.42839189616416 and parameters: {'learning_rate': 0.03504688388158036, 'n_estimators': 154, 'subsample': 0.7453717102062725, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.3994663576746387, 'colsample_bytree': 0.973786661542846, 'reg_alpha': 3.468352762145157, 'reg_lambda': 4.154285119060726, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:31,211] Trial 126 finished with value: 182.0837060778593 and parameters: {'learning_rate': 0.03141403327279151, 'n_estimators': 145, 'subsample': 0.7599859661847359, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.336499455276312, 'colsample_bytree': 0.9602099478031259, 'reg_alpha': 3.471065040330995, 'reg_lambda': 4.3131417084370725, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:33,476] Trial 127 finished with value: 179.2266822537074 and parameters: {'learning_rate': 0.03466776500215154, 'n_estimators': 155, 'subsample': 0.7893870778906233, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.622651072926887, 'colsample_bytree': 0.9470828605043383, 'reg_alpha': 3.5283102900356953, 'reg_lambda': 4.252581994017996, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:38,521] Trial 128 finished with value: 176.7430805629081 and parameters: {'learning_rate': 0.03773005329922585, 'n_estimators': 152, 'subsample': 0.7417830363322796, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.486792068210341, 'colsample_bytree': 0.9882335294897086, 'reg_alpha': 3.3569403381049714, 'reg_lambda': 3.7793919620076597, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:40,415] Trial 129 finished with value: 180.86622540818675 and parameters: {'learning_rate': 0.03139542438242531, 'n_estimators': 147, 'subsample': 0.7464256135735141, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.7751689491204257, 'colsample_bytree': 0.9985799567120317, 'reg_alpha': 3.3545052950225527, 'reg_lambda': 3.751520151166406, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:42,827] Trial 130 finished with value: 223.2443299669785 and parameters: {'learning_rate': 0.5909018482286119, 'n_estimators': 160, 'subsample': 0.7532814220884394, 'max_depth': 15, 'min_child_weight': 9, 'gamma': 2.4367257440580747, 'colsample_bytree': 0.9879730605309152, 'reg_alpha': 3.1449900857945825, 'reg_lambda': 3.624369372591604, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:44,804] Trial 131 finished with value: 178.5109086097905 and parameters: {'learning_rate': 0.038848580207857725, 'n_estimators': 152, 'subsample': 0.7387091238761313, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.198629441573118, 'colsample_bytree': 0.9774280791847815, 'reg_alpha': 3.6780401112639116, 'reg_lambda': 3.524100831999914, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:46,650] Trial 132 finished with value: 177.93840591023306 and parameters: {'learning_rate': 0.045917567522697815, 'n_estimators': 139, 'subsample': 0.780376551769669, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.1316463112232684, 'colsample_bytree': 0.9689453646200852, 'reg_alpha': 3.4447465482388697, 'reg_lambda': 3.355745571804381, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:51,992] Trial 133 finished with value: 181.96277252634252 and parameters: {'learning_rate': 0.03583994380286519, 'n_estimators': 139, 'subsample': 0.7784614237791498, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.0881414532831597, 'colsample_bytree': 0.9672289609158177, 'reg_alpha': 3.4406995610784468, 'reg_lambda': 3.3639326653744255, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:53,921] Trial 134 finished with value: 177.9940807160434 and parameters: {'learning_rate': 0.045842068469688864, 'n_estimators': 156, 'subsample': 0.7688022330983505, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.2993464245068513, 'colsample_bytree': 0.930855299297485, 'reg_alpha': 3.242377208293923, 'reg_lambda': 3.811961973512888, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:55,400] Trial 135 finished with value: 201.56334528450395 and parameters: {'learning_rate': 0.028603881644595788, 'n_estimators': 147, 'subsample': 0.8091261234431766, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 2.0015149908629595, 'colsample_bytree': 0.5584535256044936, 'reg_alpha': 3.7546123048553857, 'reg_lambda': 3.7340551330252927, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:57,195] Trial 136 finished with value: 178.8444087694941 and parameters: {'learning_rate': 0.05038430442072976, 'n_estimators': 154, 'subsample': 0.7614637291009319, 'max_depth': 14, 'min_child_weight': 10, 'gamma': 2.610505220772519, 'colsample_bytree': 0.9838048221745109, 'reg_alpha': 3.3470615125261247, 'reg_lambda': 4.5996224406059, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:56:59,267] Trial 137 finished with value: 179.00530642726486 and parameters: {'learning_rate': 0.036528625108175033, 'n_estimators': 149, 'subsample': 0.7958656040665016, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.4364627229704072, 'colsample_bytree': 0.9620086765599758, 'reg_alpha': 3.919730762660686, 'reg_lambda': 3.9420429936086174, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:05,269] Trial 138 finished with value: 183.76104931198216 and parameters: {'learning_rate': 0.03294520296850948, 'n_estimators': 164, 'subsample': 0.8288329897340709, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.0378793731487908, 'colsample_bytree': 0.9735450019707913, 'reg_alpha': 3.646167121656609, 'reg_lambda': 3.3791190799743824, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:06,605] Trial 139 finished with value: 188.2049039706504 and parameters: {'learning_rate': 0.04502412191225653, 'n_estimators': 141, 'subsample': 0.7310986321411708, 'max_depth': 15, 'min_child_weight': 9, 'gamma': 1.8320272856131474, 'colsample_bytree': 0.5009675456356819, 'reg_alpha': 3.1816270659004315, 'reg_lambda': 3.4558248883419727, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:08,074] Trial 140 finished with value: 216.39376665914034 and parameters: {'learning_rate': 0.02210621723240419, 'n_estimators': 126, 'subsample': 0.7765521094598721, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 2.16264494478345, 'colsample_bytree': 0.9908030734998523, 'reg_alpha': 2.969579082907802, 'reg_lambda': 3.5705461862896106, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:09,939] Trial 141 finished with value: 177.20166993471224 and parameters: {'learning_rate': 0.04436128228564475, 'n_estimators': 156, 'subsample': 0.7505812658871438, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.312662091642921, 'colsample_bytree': 0.9292157765914008, 'reg_alpha': 3.257604153998831, 'reg_lambda': 3.837545299274511, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:11,946] Trial 142 finished with value: 180.11579965730655 and parameters: {'learning_rate': 0.05401433355270588, 'n_estimators': 168, 'subsample': 0.7501760197764905, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.352261203434303, 'colsample_bytree': 0.9467407601276822, 'reg_alpha': 3.4594819828232213, 'reg_lambda': 4.153777150171439, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:13,513] Trial 143 finished with value: 182.33092707885078 and parameters: {'learning_rate': 0.03887418026293035, 'n_estimators': 158, 'subsample': 0.7329688669347701, 'max_depth': 14, 'min_child_weight': 10, 'gamma': 2.0504735250257315, 'colsample_bytree': 0.6549949899882661, 'reg_alpha': 3.609481929338558, 'reg_lambda': 3.6329430182070905, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:18,941] Trial 144 finished with value: 178.3647481708992 and parameters: {'learning_rate': 0.034296171543853414, 'n_estimators': 162, 'subsample': 0.7235241553526425, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.5382166313783863, 'colsample_bytree': 0.9601423425687592, 'reg_alpha': 3.3323552313712788, 'reg_lambda': 3.868341396948697, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:20,843] Trial 145 finished with value: 181.53440676509032 and parameters: {'learning_rate': 0.029462582791993836, 'n_estimators': 152, 'subsample': 0.7563896723352631, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.04262309296499, 'colsample_bytree': 0.9741285559266132, 'reg_alpha': 4.079380061792468, 'reg_lambda': 3.746079416968699, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:22,899] Trial 146 finished with value: 179.48148159259222 and parameters: {'learning_rate': 0.04465147266187876, 'n_estimators': 170, 'subsample': 0.7405875214330059, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.238126891388103, 'colsample_bytree': 0.9151152049046667, 'reg_alpha': 3.0416072933024254, 'reg_lambda': 4.020479975858987, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:24,871] Trial 147 finished with value: 181.52590820741807 and parameters: {'learning_rate': 0.06707413569366273, 'n_estimators': 135, 'subsample': 0.7112919397263872, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 2.7339725755374094, 'colsample_bytree': 0.9384245943810708, 'reg_alpha': 0.2431597858984076, 'reg_lambda': 3.268092223754608, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:26,711] Trial 148 finished with value: 181.44493314330802 and parameters: {'learning_rate': 0.05001042794094097, 'n_estimators': 166, 'subsample': 0.6958096428319027, 'max_depth': 14, 'min_child_weight': 10, 'gamma': 1.9600741431646918, 'colsample_bytree': 0.9820966921241084, 'reg_alpha': 3.777701195284881, 'reg_lambda': 4.373951534507046, 'random_state': 0}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:32,181] Trial 149 finished with value: 177.51004497328577 and parameters: {'learning_rate': 0.03848529510002022, 'n_estimators': 149, 'subsample': 0.7190721369436278, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.7684541138434455, 'colsample_bytree': 0.9923123354821624, 'reg_alpha': 3.549952109263399, 'reg_lambda': 3.484062154697341, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:34,105] Trial 150 finished with value: 179.49517890722848 and parameters: {'learning_rate': 0.03952438528353441, 'n_estimators': 149, 'subsample': 0.7194162200945061, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.731514893379047, 'colsample_bytree': 0.9977834897745328, 'reg_alpha': 3.5580884411442284, 'reg_lambda': 3.4916464526977413, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:36,137] Trial 151 finished with value: 178.14899057264182 and parameters: {'learning_rate': 0.03608864776432184, 'n_estimators': 156, 'subsample': 0.7694468696753152, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 1.7768401916712806, 'colsample_bytree': 0.9691366679288168, 'reg_alpha': 3.407718045032788, 'reg_lambda': 3.695903143488905, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:38,307] Trial 152 finished with value: 178.16257168928558 and parameters: {'learning_rate': 0.03185122195024671, 'n_estimators': 173, 'subsample': 0.746418123255578, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 1.584802781094135, 'colsample_bytree': 0.9867133966862122, 'reg_alpha': 3.886594630126275, 'reg_lambda': 3.4225211818126318, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:40,055] Trial 153 finished with value: 185.4692643951802 and parameters: {'learning_rate': 0.027543464329832647, 'n_estimators': 151, 'subsample': 0.684734752441974, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.8934079706302018, 'colsample_bytree': 0.9577955120811615, 'reg_alpha': 3.277168072623451, 'reg_lambda': 3.9057192649108408, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:41,882] Trial 154 finished with value: 178.9940103493977 and parameters: {'learning_rate': 0.04218067362111054, 'n_estimators': 146, 'subsample': 0.7325383672144511, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.4200797475876525, 'colsample_bytree': 0.9785733189951623, 'reg_alpha': 3.7059757613142237, 'reg_lambda': 3.6145077547793654, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:47,212] Trial 155 finished with value: 177.55791690616192 and parameters: {'learning_rate': 0.04810870936260892, 'n_estimators': 143, 'subsample': 0.7025156377500523, 'max_depth': 16, 'min_child_weight': 9, 'gamma': 2.236135846217979, 'colsample_bytree': 0.9480004379012132, 'reg_alpha': 3.516666226052026, 'reg_lambda': 3.7982954234284145, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:48,914] Trial 156 finished with value: 178.27972537130609 and parameters: {'learning_rate': 0.04728102762706374, 'n_estimators': 136, 'subsample': 0.6710051036994886, 'max_depth': 16, 'min_child_weight': 9, 'gamma': 2.2729334871375704, 'colsample_bytree': 0.9471132162656472, 'reg_alpha': 3.556691570093974, 'reg_lambda': 3.774905894596348, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:50,819] Trial 157 finished with value: 179.22756533412067 and parameters: {'learning_rate': 0.05820765738885831, 'n_estimators': 143, 'subsample': 0.7120785297242342, 'max_depth': 17, 'min_child_weight': 9, 'gamma': 2.536126935267137, 'colsample_bytree': 0.9254960756718781, 'reg_alpha': 3.470916904300642, 'reg_lambda': 4.156924665660586, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:52,949] Trial 158 finished with value: 179.3632939837234 and parameters: {'learning_rate': 0.044219215405446974, 'n_estimators': 144, 'subsample': 0.7041472200653465, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 2.1141554081812752, 'colsample_bytree': 0.9636942261379371, 'reg_alpha': 3.807899534344906, 'reg_lambda': 3.2277126107002463, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:57:54,965] Trial 159 finished with value: 177.84402830684613 and parameters: {'learning_rate': 0.03889376318783645, 'n_estimators': 161, 'subsample': 0.6892601824325414, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.143451987766366, 'colsample_bytree': 0.9910981609642733, 'reg_alpha': 3.6412493707046547, 'reg_lambda': 3.90130626586662, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:00,390] Trial 160 finished with value: 185.28816984899032 and parameters: {'learning_rate': 0.14159272977624582, 'n_estimators': 160, 'subsample': 0.6949248413588096, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 1.964678806528444, 'colsample_bytree': 0.9925819559575279, 'reg_alpha': 4.019368072101813, 'reg_lambda': 4.0837895488274025, 'random_state': 4}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:02,333] Trial 161 finished with value: 178.49897625688854 and parameters: {'learning_rate': 0.037518273344173396, 'n_estimators': 150, 'subsample': 0.6787293866696762, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.1979997278141346, 'colsample_bytree': 0.9729194843743878, 'reg_alpha': 3.647158964671961, 'reg_lambda': 3.8038858279759316, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:04,102] Trial 162 finished with value: 180.53701275277606 and parameters: {'learning_rate': 0.03317126615660375, 'n_estimators': 154, 'subsample': 0.6540450157334775, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.3843833070698706, 'colsample_bytree': 0.9999557029843211, 'reg_alpha': 3.737955561933281, 'reg_lambda': 3.9381252861467453, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:06,075] Trial 163 finished with value: 178.2395089964742 and parameters: {'learning_rate': 0.040931590763871324, 'n_estimators': 163, 'subsample': 0.7253626983698481, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 2.1285523669406903, 'colsample_bytree': 0.9556588609383059, 'reg_alpha': 3.5886786471084666, 'reg_lambda': 3.597172397497147, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:08,075] Trial 164 finished with value: 180.08082293719127 and parameters: {'learning_rate': 0.0503891634784259, 'n_estimators': 158, 'subsample': 0.6883029492977597, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.6641394605894604, 'colsample_bytree': 0.985127041314845, 'reg_alpha': 3.912773333168983, 'reg_lambda': 3.859778068693578, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:10,864] Trial 165 finished with value: 188.5285224126224 and parameters: {'learning_rate': 0.02982267699683999, 'n_estimators': 166, 'subsample': 0.8857835579401208, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 1.8083539812685032, 'colsample_bytree': 0.5903693835795524, 'reg_alpha': 3.425262728626705, 'reg_lambda': 3.6864600794455207, 'random_state': 2}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:14,998] Trial 166 finished with value: 180.7147232383667 and parameters: {'learning_rate': 0.03478343276039296, 'n_estimators': 140, 'subsample': 0.7057896121184722, 'max_depth': 15, 'min_child_weight': 10, 'gamma': 2.2716193891437504, 'colsample_bytree': 0.9332569528016973, 'reg_alpha': 3.52388874980286, 'reg_lambda': 3.544827909923688, 'random_state': 3}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:17,042] Trial 167 finished with value: 176.26032071106218 and parameters: {'learning_rate': 0.03839119400344155, 'n_estimators': 154, 'subsample': 0.7396625987999118, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 2.013699072376356, 'colsample_bytree': 0.9694988937559799, 'reg_alpha': 4.143014986402222, 'reg_lambda': 3.994041696881877, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:19,059] Trial 168 finished with value: 177.08054396689255 and parameters: {'learning_rate': 0.03913787136297241, 'n_estimators': 154, 'subsample': 0.7392908877124893, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.9620005089111185, 'colsample_bytree': 0.9793417364480412, 'reg_alpha': 4.135682439806378, 'reg_lambda': 3.9070793113867666, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:21,179] Trial 169 finished with value: 180.00953163374234 and parameters: {'learning_rate': 0.03134391385550735, 'n_estimators': 157, 'subsample': 0.7397582676601779, 'max_depth': 18, 'min_child_weight': 9, 'gamma': 1.9412115338476639, 'colsample_bytree': 0.9488690208275598, 'reg_alpha': 4.230331772159103, 'reg_lambda': 4.001271135772211, 'random_state': 0}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:23,500] Trial 170 finished with value: 200.96771372966523 and parameters: {'learning_rate': 0.2736253429606109, 'n_estimators': 154, 'subsample': 0.7519652106142919, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 1.8563585823883382, 'colsample_bytree': 0.9782957951344802, 'reg_alpha': 4.143590717619141, 'reg_lambda': 4.230050774256499, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:28,858] Trial 171 finished with value: 179.18507828327537 and parameters: {'learning_rate': 0.0387532376430243, 'n_estimators': 151, 'subsample': 0.7194040441394097, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.9850624377236312, 'colsample_bytree': 0.9906771344861252, 'reg_alpha': 4.689700170968466, 'reg_lambda': 3.90287520545792, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:30,915] Trial 172 finished with value: 177.61507943177892 and parameters: {'learning_rate': 0.041301356701956796, 'n_estimators': 159, 'subsample': 0.7335124476422438, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 2.0597624703299586, 'colsample_bytree': 0.9596191327030548, 'reg_alpha': 3.984339736103567, 'reg_lambda': 4.059293877771663, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:32,862] Trial 173 finished with value: 176.15798267443867 and parameters: {'learning_rate': 0.04237663125524134, 'n_estimators': 148, 'subsample': 0.7323694449845535, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.7410965799577274, 'colsample_bytree': 0.958593389441429, 'reg_alpha': 3.963494730375126, 'reg_lambda': 4.489745433306281, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:34,833] Trial 174 finished with value: 179.87030375753886 and parameters: {'learning_rate': 0.03483303056638326, 'n_estimators': 148, 'subsample': 0.760065996016692, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 1.7020579221602699, 'colsample_bytree': 0.9411321183248464, 'reg_alpha': 4.303569694208575, 'reg_lambda': 4.470408707534445, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:37,019] Trial 175 finished with value: 176.21370701161857 and parameters: {'learning_rate': 0.04539747884143859, 'n_estimators': 154, 'subsample': 0.7440933206724111, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.6402770318001745, 'colsample_bytree': 0.9717323405468523, 'reg_alpha': 4.122120474654336, 'reg_lambda': 3.8030396374058197, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:42,512] Trial 176 finished with value: 178.4354237635055 and parameters: {'learning_rate': 0.05297989263405992, 'n_estimators': 152, 'subsample': 0.7248751408727852, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.5900396258142633, 'colsample_bytree': 0.9523454917105479, 'reg_alpha': 4.133158777638533, 'reg_lambda': 4.680812364761231, 'random_state': 0}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:44,000] Trial 177 finished with value: 190.8840379457447 and parameters: {'learning_rate': 0.04412586279650245, 'n_estimators': 144, 'subsample': 0.7502941861462643, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.5452204700114414, 'colsample_bytree': 0.5174698178650166, 'reg_alpha': 4.43487783633866, 'reg_lambda': 4.22165899744653, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:46,039] Trial 178 finished with value: 180.16015428555676 and parameters: {'learning_rate': 0.04797858435069896, 'n_estimators': 149, 'subsample': 0.7125915007514615, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.7112704481423304, 'colsample_bytree': 0.9651166196790066, 'reg_alpha': 2.311813154354516, 'reg_lambda': 4.890045729875518, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:48,379] Trial 179 finished with value: 176.7429753562171 and parameters: {'learning_rate': 0.04286634102392447, 'n_estimators': 169, 'subsample': 0.76499954888248, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.4731712371631966, 'colsample_bytree': 0.9805332716817433, 'reg_alpha': 3.972065437137052, 'reg_lambda': 3.7576417939306315, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:50,872] Trial 180 finished with value: 175.98372192860978 and parameters: {'learning_rate': 0.042231676318047036, 'n_estimators': 163, 'subsample': 0.7649038982297781, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 1.348511130345313, 'colsample_bytree': 0.9844613441239972, 'reg_alpha': 4.056759040161684, 'reg_lambda': 3.806510269515379, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:56,040] Trial 181 finished with value: 178.58639577375948 and parameters: {'learning_rate': 0.04322957898204307, 'n_estimators': 115, 'subsample': 0.7673131542773607, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 1.3072235172840285, 'colsample_bytree': 0.9813918263996184, 'reg_alpha': 4.077034542057638, 'reg_lambda': 3.809692216234562, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:58:58,504] Trial 182 finished with value: 178.2645560512652 and parameters: {'learning_rate': 0.041232100047365515, 'n_estimators': 164, 'subsample': 0.7334283800667245, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 1.4144215009705523, 'colsample_bytree': 0.965967874762865, 'reg_alpha': 4.1979491381108, 'reg_lambda': 3.9909960894076333, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:01,114] Trial 183 finished with value: 178.77977771152345 and parameters: {'learning_rate': 0.055847655347887014, 'n_estimators': 168, 'subsample': 0.7616252734136548, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.4415068272315659, 'colsample_bytree': 0.985911828661736, 'reg_alpha': 4.333141089311727, 'reg_lambda': 3.7901408140645234, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:03,619] Trial 184 finished with value: 179.6957920741064 and parameters: {'learning_rate': 0.048018665781466324, 'n_estimators': 156, 'subsample': 0.7409109930210382, 'max_depth': 19, 'min_child_weight': 8, 'gamma': 1.2928578057593092, 'colsample_bytree': 0.9989773204451811, 'reg_alpha': 4.019722822772633, 'reg_lambda': 3.544449340687874, 'random_state': 0}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:09,284] Trial 185 finished with value: 176.82994750940424 and parameters: {'learning_rate': 0.033925543688271775, 'n_estimators': 161, 'subsample': 0.789134088967371, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.6450861650208024, 'colsample_bytree': 0.9556118725605153, 'reg_alpha': 3.7860385099135034, 'reg_lambda': 3.9548979255676233, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:11,480] Trial 186 finished with value: 179.2857124530098 and parameters: {'learning_rate': 0.034347704592495025, 'n_estimators': 161, 'subsample': 0.7985337872473773, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.5255014726202671, 'colsample_bytree': 0.9554604110803521, 'reg_alpha': 3.8099907697067836, 'reg_lambda': 4.382639253059624, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:13,457] Trial 187 finished with value: 187.96409452681894 and parameters: {'learning_rate': 0.02578100647220158, 'n_estimators': 152, 'subsample': 0.7770945340502828, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.6086310657496983, 'colsample_bytree': 0.9764562501828017, 'reg_alpha': 3.741439184927313, 'reg_lambda': 4.115951224856845, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:15,606] Trial 188 finished with value: 179.63373519363765 and parameters: {'learning_rate': 0.03141387255433472, 'n_estimators': 157, 'subsample': 0.7922741111963271, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.773683897649776, 'colsample_bytree': 0.9411202118993687, 'reg_alpha': 3.981508685330505, 'reg_lambda': 3.974888985277804, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:17,749] Trial 189 finished with value: 179.34893976456937 and parameters: {'learning_rate': 0.03575371171106067, 'n_estimators': 154, 'subsample': 0.7533260391140726, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.6461131516483702, 'colsample_bytree': 0.9656110126618339, 'reg_alpha': 4.109463376255973, 'reg_lambda': 3.8409185865991535, 'random_state': 0}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:23,230] Trial 190 finished with value: 177.92987536878002 and parameters: {'learning_rate': 0.044080340942802596, 'n_estimators': 147, 'subsample': 0.7252288406422571, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.4895065678389119, 'colsample_bytree': 0.9833852959542225, 'reg_alpha': 3.931735774386438, 'reg_lambda': 3.7164635263041745, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:25,808] Trial 191 finished with value: 175.75848405748775 and parameters: {'learning_rate': 0.038499335397823665, 'n_estimators': 170, 'subsample': 0.7665992169286391, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.568113962843299, 'colsample_bytree': 0.9514175292195085, 'reg_alpha': 2.154205914493389, 'reg_lambda': 3.8808411010348602, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:28,145] Trial 192 finished with value: 176.68346630502444 and parameters: {'learning_rate': 0.03962633756713773, 'n_estimators': 164, 'subsample': 0.7856388300595419, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.482914751371014, 'colsample_bytree': 0.9538649578406435, 'reg_alpha': 3.763474182344753, 'reg_lambda': 3.904498608596948, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:30,486] Trial 193 finished with value: 176.9080240682279 and parameters: {'learning_rate': 0.039467557429328434, 'n_estimators': 164, 'subsample': 0.7867822693761007, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.49982624464636, 'colsample_bytree': 0.9560052573895348, 'reg_alpha': 3.8393717880191076, 'reg_lambda': 3.9600513046590944, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:36,364] Trial 194 finished with value: 179.26860674954497 and parameters: {'learning_rate': 0.033031151137960624, 'n_estimators': 164, 'subsample': 0.8144679141105677, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.284693232511422, 'colsample_bytree': 0.9567038999029155, 'reg_alpha': 3.8265005159674086, 'reg_lambda': 4.0068867583049945, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:38,685] Trial 195 finished with value: 181.17950408528105 and parameters: {'learning_rate': 0.02833137033980841, 'n_estimators': 170, 'subsample': 0.7847497413812708, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.38303920528295, 'colsample_bytree': 0.9707063700798115, 'reg_alpha': 4.0294771963161695, 'reg_lambda': 4.137726285171601, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:41,079] Trial 196 finished with value: 177.09127904225323 and parameters: {'learning_rate': 0.04064753735493883, 'n_estimators': 167, 'subsample': 0.8027054153984676, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.7622436809829205, 'colsample_bytree': 0.9317402546912008, 'reg_alpha': 4.171905442464975, 'reg_lambda': 3.924586618713149, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:43,464] Trial 197 finished with value: 179.51833894990162 and parameters: {'learning_rate': 0.03720703059770876, 'n_estimators': 167, 'subsample': 0.8310309941783988, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.559007696954473, 'colsample_bytree': 0.9186036032574179, 'reg_alpha': 4.174233998168416, 'reg_lambda': 3.8960730310583043, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:45,797] Trial 198 finished with value: 176.83745356781387 and parameters: {'learning_rate': 0.042282610422395506, 'n_estimators': 163, 'subsample': 0.8016572515316707, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.710506109419649, 'colsample_bytree': 0.9340130566898153, 'reg_alpha': 4.390434254785505, 'reg_lambda': 4.25078710687595, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:51,501] Trial 199 finished with value: 181.0628506904244 and parameters: {'learning_rate': 0.041796794268693274, 'n_estimators': 163, 'subsample': 0.7906971860798792, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.800069466974546, 'colsample_bytree': 0.9230294429548056, 'reg_alpha': 4.493431676400055, 'reg_lambda': 4.57865407637222, 'random_state': 0}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:55,939] Trial 200 finished with value: 179.2408198957914 and parameters: {'learning_rate': 0.045280121883597355, 'n_estimators': 174, 'subsample': 0.805611151073581, 'max_depth': 19, 'min_child_weight': 4, 'gamma': 4.649332092638722, 'colsample_bytree': 0.9308698176139908, 'reg_alpha': 4.3707022932636, 'reg_lambda': 4.288786647065506, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 18:59:58,336] Trial 201 finished with value: 177.83380381517617 and parameters: {'learning_rate': 0.036072099351219473, 'n_estimators': 166, 'subsample': 0.8018892864714259, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.6642773543462415, 'colsample_bytree': 0.9371426944338207, 'reg_alpha': 4.6494553324105965, 'reg_lambda': 4.0335548177246565, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:04,319] Trial 202 finished with value: 177.1233584189317 and parameters: {'learning_rate': 0.038787839716764014, 'n_estimators': 170, 'subsample': 0.8181439959438753, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.474035876864587, 'colsample_bytree': 0.9482857298146581, 'reg_alpha': 4.257294863979109, 'reg_lambda': 4.134248496890103, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:07,383] Trial 203 finished with value: 179.4863089624116 and parameters: {'learning_rate': 0.04000471588728261, 'n_estimators': 171, 'subsample': 0.8276240347561561, 'max_depth': 19, 'min_child_weight': 7, 'gamma': 4.963793276510958, 'colsample_bytree': 0.9465211616621276, 'reg_alpha': 4.555254978235091, 'reg_lambda': 3.931711683190741, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:09,702] Trial 204 finished with value: 176.10841752067364 and parameters: {'learning_rate': 0.04238532450593611, 'n_estimators': 161, 'subsample': 0.8158040576760819, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.479680023148954, 'colsample_bytree': 0.9342377692571285, 'reg_alpha': 4.288778438112169, 'reg_lambda': 4.3757073984035735, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:12,110] Trial 205 finished with value: 176.77124144827926 and parameters: {'learning_rate': 0.03991519631750724, 'n_estimators': 169, 'subsample': 0.8212285884264159, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.517897466510418, 'colsample_bytree': 0.9396394695352217, 'reg_alpha': 4.39996547667452, 'reg_lambda': 4.360196544625377, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:15,342] Trial 206 finished with value: 179.92960233178172 and parameters: {'learning_rate': 0.03236888952515991, 'n_estimators': 161, 'subsample': 0.8056294854276059, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.123226227640912, 'colsample_bytree': 0.9056490102892112, 'reg_alpha': 4.3956114832031705, 'reg_lambda': 4.410824432345756, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:20,158] Trial 207 finished with value: 177.81869692858464 and parameters: {'learning_rate': 0.05100069991080642, 'n_estimators': 165, 'subsample': 0.8358559255513414, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.572615031367533, 'colsample_bytree': 0.9372987097233129, 'reg_alpha': 4.2856189192524266, 'reg_lambda': 4.3288687127887435, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:22,613] Trial 208 finished with value: 175.91834996101792 and parameters: {'learning_rate': 0.04091492375931797, 'n_estimators': 169, 'subsample': 0.8191911155118633, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.465399197269858, 'colsample_bytree': 0.9583616743095462, 'reg_alpha': 4.186756889998893, 'reg_lambda': 4.46152907770625, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:24,939] Trial 209 finished with value: 176.89050841887254 and parameters: {'learning_rate': 0.04569222273900577, 'n_estimators': 160, 'subsample': 0.8236475633937667, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.348824287607273, 'colsample_bytree': 0.957689624713572, 'reg_alpha': 4.089438914992587, 'reg_lambda': 4.678597239252662, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:27,354] Trial 210 finished with value: 178.8804524632139 and parameters: {'learning_rate': 0.04714049671899319, 'n_estimators': 161, 'subsample': 0.8469399499724417, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.4320726523488965, 'colsample_bytree': 0.957014405156248, 'reg_alpha': 3.956233816758823, 'reg_lambda': 4.458192244698257, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:33,322] Trial 211 finished with value: 175.89609506083065 and parameters: {'learning_rate': 0.04160161564322036, 'n_estimators': 164, 'subsample': 0.7838006719406977, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.359144269064121, 'colsample_bytree': 0.9623959608158531, 'reg_alpha': 4.120069428376975, 'reg_lambda': 4.798483550028677, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:35,656] Trial 212 finished with value: 179.01262486996706 and parameters: {'learning_rate': 0.045344681834470796, 'n_estimators': 164, 'subsample': 0.7874499606237074, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.382682545124992, 'colsample_bytree': 0.9608151967917304, 'reg_alpha': 4.052334951792147, 'reg_lambda': 4.533260251518177, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:38,161] Trial 213 finished with value: 176.5974053219867 and parameters: {'learning_rate': 0.04249690325291918, 'n_estimators': 169, 'subsample': 0.8193679149749512, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.216763282277704, 'colsample_bytree': 0.9516256982343961, 'reg_alpha': 4.255069448104131, 'reg_lambda': 4.7954126912984245, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:40,658] Trial 214 finished with value: 178.82261193900212 and parameters: {'learning_rate': 0.043289534528733985, 'n_estimators': 172, 'subsample': 0.8195918226203373, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.411960798508023, 'colsample_bytree': 0.9439248453885191, 'reg_alpha': 4.374049440624725, 'reg_lambda': 4.882854846046996, 'random_state': 0}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:46,727] Trial 215 finished with value: 178.64764272465754 and parameters: {'learning_rate': 0.03604873084921849, 'n_estimators': 175, 'subsample': 0.8411449595625213, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.330376006542564, 'colsample_bytree': 0.963523522636859, 'reg_alpha': 4.23634258339075, 'reg_lambda': 4.680064054224928, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:49,298] Trial 216 finished with value: 178.5237398082411 and parameters: {'learning_rate': 0.0523677587150472, 'n_estimators': 169, 'subsample': 0.8563202153053151, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.066920152353593, 'colsample_bytree': 0.9503328546399948, 'reg_alpha': 4.779814263281152, 'reg_lambda': 4.770831677011312, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:51,741] Trial 217 finished with value: 176.14315821146343 and parameters: {'learning_rate': 0.04327299178443811, 'n_estimators': 168, 'subsample': 0.8203267416077689, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.238992337660244, 'colsample_bytree': 0.9640598013799151, 'reg_alpha': 4.447407632715187, 'reg_lambda': 4.7984336507842835, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:54,147] Trial 218 finished with value: 178.17407964302882 and parameters: {'learning_rate': 0.032893249798006105, 'n_estimators': 169, 'subsample': 0.8157294952747384, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.262570489956099, 'colsample_bytree': 0.9670648952684354, 'reg_alpha': 4.503375343230875, 'reg_lambda': 4.8577677999538516, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:00:59,863] Trial 219 finished with value: 177.3568394929672 and parameters: {'learning_rate': 0.042201238685760915, 'n_estimators': 167, 'subsample': 0.7749379259767524, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.6819263332652445, 'colsample_bytree': 0.9402338556811455, 'reg_alpha': 4.315680473693852, 'reg_lambda': 4.8024094555993715, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:01:02,433] Trial 220 finished with value: 176.60090740135337 and parameters: {'learning_rate': 0.03619845348801227, 'n_estimators': 173, 'subsample': 0.7975905141359402, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.52002630183348, 'colsample_bytree': 0.9699757991217879, 'reg_alpha': 4.426039403518218, 'reg_lambda': 4.602599636569515, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:01:04,996] Trial 221 finished with value: 176.833041932597 and parameters: {'learning_rate': 0.03656025634121095, 'n_estimators': 174, 'subsample': 0.8111673361893942, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.918203034002428, 'colsample_bytree': 0.9690509278275206, 'reg_alpha': 4.580084645945911, 'reg_lambda': 4.535134212090638, 'random_state': 1}. Best is trial 114 with value: 174.86341854653517.\n","[I 2024-07-27 19:01:07,548] Trial 222 finished with value: 174.33006352000734 and parameters: {'learning_rate': 0.03651862217415622, 'n_estimators': 176, 'subsample': 0.8174948001627808, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.183038504429461, 'colsample_bytree': 0.9710297478048349, 'reg_alpha': 4.605190204784239, 'reg_lambda': 4.769320759481973, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:13,606] Trial 223 finished with value: 181.44376661522818 and parameters: {'learning_rate': 0.029530686223724508, 'n_estimators': 177, 'subsample': 0.8256894291591615, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.218835673252852, 'colsample_bytree': 0.9763950900378374, 'reg_alpha': 4.478021900661853, 'reg_lambda': 4.726473054851695, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:16,061] Trial 224 finished with value: 176.0356332090969 and parameters: {'learning_rate': 0.034709391739114054, 'n_estimators': 171, 'subsample': 0.8111349669467662, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.5410517905061605, 'colsample_bytree': 0.9657006852101494, 'reg_alpha': 2.0983683134720765, 'reg_lambda': 4.649908129518133, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:18,547] Trial 225 finished with value: 178.3101605074543 and parameters: {'learning_rate': 0.03724713235326552, 'n_estimators': 173, 'subsample': 0.8148123191791088, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.56898943737297, 'colsample_bytree': 0.9680181623393367, 'reg_alpha': 2.16900985302978, 'reg_lambda': 4.801450079510744, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:21,106] Trial 226 finished with value: 175.7797300507094 and parameters: {'learning_rate': 0.03999573626732572, 'n_estimators': 172, 'subsample': 0.83325881619225, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.527014147354379, 'colsample_bytree': 0.9843322619918853, 'reg_alpha': 4.780046890912886, 'reg_lambda': 4.989208556732306, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:27,070] Trial 227 finished with value: 178.44752247659508 and parameters: {'learning_rate': 0.03483995157877991, 'n_estimators': 172, 'subsample': 0.8367005608510069, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.471375040267503, 'colsample_bytree': 0.9850173203601059, 'reg_alpha': 4.729737258839358, 'reg_lambda': 4.961272945580009, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:34,342] Trial 228 finished with value: 188.9941452066713 and parameters: {'learning_rate': 0.03080773526635966, 'n_estimators': 176, 'subsample': 0.8430512883414498, 'max_depth': 20, 'min_child_weight': 2, 'gamma': 4.4189659751349515, 'colsample_bytree': 0.9823013626538728, 'reg_alpha': 2.0830896086218407, 'reg_lambda': 4.630089403552914, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:36,822] Trial 229 finished with value: 177.4970070040502 and parameters: {'learning_rate': 0.04937487913386078, 'n_estimators': 179, 'subsample': 0.7967619078929927, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.066434551538102, 'colsample_bytree': 0.9733682225708519, 'reg_alpha': 4.860592629360582, 'reg_lambda': 4.983993701037121, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:42,810] Trial 230 finished with value: 178.47384783921402 and parameters: {'learning_rate': 0.037923676371668054, 'n_estimators': 172, 'subsample': 0.8777527480774953, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.576716377393345, 'colsample_bytree': 0.9891453890660761, 'reg_alpha': 4.585001607226199, 'reg_lambda': 4.776264466127239, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:45,281] Trial 231 finished with value: 175.5252017159503 and parameters: {'learning_rate': 0.03945319119205497, 'n_estimators': 169, 'subsample': 0.823053622984857, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.538571298808139, 'colsample_bytree': 0.9602159485054174, 'reg_alpha': 4.8341624268542835, 'reg_lambda': 4.463265287464079, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:47,822] Trial 232 finished with value: 176.2116142121186 and parameters: {'learning_rate': 0.04189579977387532, 'n_estimators': 170, 'subsample': 0.8301002983807104, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.281321967951353, 'colsample_bytree': 0.9645570437060088, 'reg_alpha': 4.757081778689779, 'reg_lambda': 4.5707078365644795, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:50,333] Trial 233 finished with value: 177.51411614825048 and parameters: {'learning_rate': 0.041681477672063705, 'n_estimators': 169, 'subsample': 0.8326299553504886, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.159911038160202, 'colsample_bytree': 0.9621146086776841, 'reg_alpha': 4.7519854036813935, 'reg_lambda': 4.636345583645379, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:56,293] Trial 234 finished with value: 178.78839692523326 and parameters: {'learning_rate': 0.044287650829107426, 'n_estimators': 174, 'subsample': 0.8120783808052667, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.9401985520832037, 'colsample_bytree': 0.9684415000609604, 'reg_alpha': 4.765800409068646, 'reg_lambda': 4.50646775957465, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:01:58,835] Trial 235 finished with value: 176.43080603766234 and parameters: {'learning_rate': 0.04094399836378463, 'n_estimators': 177, 'subsample': 0.8298724609236263, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.2322550464067135, 'colsample_bytree': 0.9504354385193818, 'reg_alpha': 4.9744748034285085, 'reg_lambda': 4.5996783940742105, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:01,518] Trial 236 finished with value: 180.22386624575444 and parameters: {'learning_rate': 0.03460906798831314, 'n_estimators': 181, 'subsample': 0.8519807740292917, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.2355105528455335, 'colsample_bytree': 0.9509270876543559, 'reg_alpha': 4.778724019782721, 'reg_lambda': 4.731243597720525, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:04,151] Trial 237 finished with value: 177.82573385635155 and parameters: {'learning_rate': 0.039309720006007784, 'n_estimators': 178, 'subsample': 0.8281859911512126, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.319110810092528, 'colsample_bytree': 0.9604948814531277, 'reg_alpha': 4.825293453311103, 'reg_lambda': 4.584908229346268, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:10,158] Trial 238 finished with value: 175.96130247468645 and parameters: {'learning_rate': 0.04780223823905866, 'n_estimators': 176, 'subsample': 0.8199637572955593, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.433355972462859, 'colsample_bytree': 0.9494452251442757, 'reg_alpha': 4.8919397596745045, 'reg_lambda': 4.875117291957469, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:13,234] Trial 239 finished with value: 194.95364287431616 and parameters: {'learning_rate': 0.30838527270169036, 'n_estimators': 176, 'subsample': 0.8291067853265336, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.185901298281773, 'colsample_bytree': 0.9491885180893049, 'reg_alpha': 4.9645534194857674, 'reg_lambda': 4.89046741378443, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:15,929] Trial 240 finished with value: 177.50775848664864 and parameters: {'learning_rate': 0.04777255084982399, 'n_estimators': 180, 'subsample': 0.8108061949279554, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.404200794363617, 'colsample_bytree': 0.96348889955728, 'reg_alpha': 4.662397543578965, 'reg_lambda': 4.996562228804949, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:18,440] Trial 241 finished with value: 177.41378386184928 and parameters: {'learning_rate': 0.041179687234827775, 'n_estimators': 171, 'subsample': 0.8204447406088412, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.5098792147716065, 'colsample_bytree': 0.9483470332103863, 'reg_alpha': 4.980512619237665, 'reg_lambda': 4.823435421914036, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:24,365] Trial 242 finished with value: 178.24052535107927 and parameters: {'learning_rate': 0.037080803264711, 'n_estimators': 175, 'subsample': 0.8679145898506514, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.679587555575355, 'colsample_bytree': 0.9571698476849192, 'reg_alpha': 4.9161653817108295, 'reg_lambda': 4.709699676147906, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:26,867] Trial 243 finished with value: 177.6424063374157 and parameters: {'learning_rate': 0.0452956587092228, 'n_estimators': 166, 'subsample': 0.8366116563609576, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.620862345162132, 'colsample_bytree': 0.9691200816515539, 'reg_alpha': 4.877680829611287, 'reg_lambda': 4.4965164761484075, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:40,090] Trial 244 finished with value: 187.8833260175909 and parameters: {'learning_rate': 0.0335020390492472, 'n_estimators': 171, 'subsample': 0.8136738574048026, 'max_depth': 20, 'min_child_weight': 1, 'gamma': 4.2887645853013465, 'colsample_bytree': 0.9755162164918764, 'reg_alpha': 4.88362672398138, 'reg_lambda': 4.614647060510329, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:43,585] Trial 245 finished with value: 176.7938870536513 and parameters: {'learning_rate': 0.03908338883028934, 'n_estimators': 177, 'subsample': 0.8206082703727731, 'max_depth': 20, 'min_child_weight': 6, 'gamma': 4.4179112737087705, 'colsample_bytree': 0.9559820080596693, 'reg_alpha': 4.629538342957706, 'reg_lambda': 4.886887611417104, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:46,040] Trial 246 finished with value: 178.90924125390782 and parameters: {'learning_rate': 0.04832413882766128, 'n_estimators': 174, 'subsample': 0.8019801899185838, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.475454395318736, 'colsample_bytree': 0.9447270297897903, 'reg_alpha': 4.955369645355808, 'reg_lambda': 4.45522092198614, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:52,145] Trial 247 finished with value: 177.06350310899032 and parameters: {'learning_rate': 0.040962796293440636, 'n_estimators': 183, 'subsample': 0.8413087129640834, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.328608252718178, 'colsample_bytree': 0.9651619768815295, 'reg_alpha': 1.975360206003987, 'reg_lambda': 4.744826638535153, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:54,696] Trial 248 finished with value: 180.63790961706633 and parameters: {'learning_rate': 0.05397501146346254, 'n_estimators': 167, 'subsample': 0.8257724048586857, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.994636697153165, 'colsample_bytree': 0.9757442942435884, 'reg_alpha': 2.2728738343146566, 'reg_lambda': 4.588150510828445, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:57,119] Trial 249 finished with value: 180.10610978335578 and parameters: {'learning_rate': 0.036740846290986076, 'n_estimators': 172, 'subsample': 0.81076631155471, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.882720632733413, 'colsample_bytree': 0.9522373480173193, 'reg_alpha': 4.808265488799194, 'reg_lambda': 4.820079222216894, 'random_state': 10}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:02:59,574] Trial 250 finished with value: 181.01703540247016 and parameters: {'learning_rate': 0.04550630515291941, 'n_estimators': 168, 'subsample': 0.8333665356295632, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.193453266442443, 'colsample_bytree': 0.9611622491727652, 'reg_alpha': 4.695472903444584, 'reg_lambda': 4.627773362984256, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:05,465] Trial 251 finished with value: 177.86196890068732 and parameters: {'learning_rate': 0.03297738290630681, 'n_estimators': 165, 'subsample': 0.8049756981752701, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.600039797723108, 'colsample_bytree': 0.9718168467440081, 'reg_alpha': 4.990539358670917, 'reg_lambda': 4.487878664784198, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:07,949] Trial 252 finished with value: 178.0623222769468 and parameters: {'learning_rate': 0.0420797533159305, 'n_estimators': 177, 'subsample': 0.779994293442569, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.73295455115732, 'colsample_bytree': 0.9445332165502821, 'reg_alpha': 4.559075614166908, 'reg_lambda': 4.678511773845131, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:10,473] Trial 253 finished with value: 178.64147347863042 and parameters: {'learning_rate': 0.03687989320286916, 'n_estimators': 174, 'subsample': 0.8465841834395407, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.441240005354341, 'colsample_bytree': 0.9600955281404352, 'reg_alpha': 4.231120150643308, 'reg_lambda': 4.9921242423922365, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:13,025] Trial 254 finished with value: 178.43295185992227 and parameters: {'learning_rate': 0.05002425713285177, 'n_estimators': 180, 'subsample': 0.8210004693612065, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.309775285537272, 'colsample_bytree': 0.9805096047340327, 'reg_alpha': 4.8582531188062665, 'reg_lambda': 4.746047652996568, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:18,823] Trial 255 finished with value: 177.94030830752482 and parameters: {'learning_rate': 0.04204274048191153, 'n_estimators': 171, 'subsample': 0.795437786324082, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.589407864066257, 'colsample_bytree': 0.9526757539944531, 'reg_alpha': 2.3908167054090033, 'reg_lambda': 4.892689140234288, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:21,148] Trial 256 finished with value: 179.014513205949 and parameters: {'learning_rate': 0.029485731748427266, 'n_estimators': 167, 'subsample': 0.7714422330768463, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.468063281428348, 'colsample_bytree': 0.9700384307344707, 'reg_alpha': 4.478380035805191, 'reg_lambda': 4.4042305899642145, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:23,526] Trial 257 finished with value: 178.6025249485556 and parameters: {'learning_rate': 0.03422283641039392, 'n_estimators': 164, 'subsample': 0.8332866539955575, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.3472882777146795, 'colsample_bytree': 0.9437807562731547, 'reg_alpha': 2.0537031129366783, 'reg_lambda': 4.568138174336332, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:25,965] Trial 258 finished with value: 174.6458335568351 and parameters: {'learning_rate': 0.03848581424884045, 'n_estimators': 170, 'subsample': 0.8079949727335487, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.23354268061819, 'colsample_bytree': 0.9898572955611054, 'reg_alpha': 4.298032554466202, 'reg_lambda': 4.711516185226821, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:31,876] Trial 259 finished with value: 176.57028020372962 and parameters: {'learning_rate': 0.04500753101234219, 'n_estimators': 172, 'subsample': 0.809193017821203, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.094914200588582, 'colsample_bytree': 0.9921250082257819, 'reg_alpha': 4.307368107882338, 'reg_lambda': 4.810646816815583, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:34,338] Trial 260 finished with value: 178.28637787783168 and parameters: {'learning_rate': 0.04614900205132093, 'n_estimators': 173, 'subsample': 0.8091494975803405, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.116850123218292, 'colsample_bytree': 0.9943393679149863, 'reg_alpha': 4.300248148138125, 'reg_lambda': 4.839482833824052, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:37,116] Trial 261 finished with value: 179.50451880769205 and parameters: {'learning_rate': 0.05485786777496106, 'n_estimators': 178, 'subsample': 0.8234634204931263, 'max_depth': 18, 'min_child_weight': 9, 'gamma': 4.229005247239236, 'colsample_bytree': 0.9911009784815682, 'reg_alpha': 4.155563693194454, 'reg_lambda': 4.72345004870065, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:39,603] Trial 262 finished with value: 179.56331390835317 and parameters: {'learning_rate': 0.043862776201629566, 'n_estimators': 170, 'subsample': 0.8147027128804146, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.010648587474954, 'colsample_bytree': 0.9848554571306872, 'reg_alpha': 4.271480739458268, 'reg_lambda': 4.787478726450397, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:45,577] Trial 263 finished with value: 180.11753316566768 and parameters: {'learning_rate': 0.049964247665039506, 'n_estimators': 175, 'subsample': 0.795475920188892, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.1847801871638275, 'colsample_bytree': 0.9825655665300168, 'reg_alpha': 4.435532613253051, 'reg_lambda': 4.66203408591239, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:48,101] Trial 264 finished with value: 178.43563753070998 and parameters: {'learning_rate': 0.039037433968931626, 'n_estimators': 183, 'subsample': 0.8067355826564296, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.255818218387897, 'colsample_bytree': 0.9902249759286885, 'reg_alpha': 4.1989194009348525, 'reg_lambda': 4.537745312749829, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:50,680] Trial 265 finished with value: 178.75848155637541 and parameters: {'learning_rate': 0.0434167653650219, 'n_estimators': 172, 'subsample': 0.8541413088283836, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.394521273566035, 'colsample_bytree': 0.9976687183621036, 'reg_alpha': 4.60157094708954, 'reg_lambda': 4.9428033754372915, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:53,257] Trial 266 finished with value: 176.57935394747201 and parameters: {'learning_rate': 0.03576533910579253, 'n_estimators': 178, 'subsample': 0.8227634218121826, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 3.7733597542521924, 'colsample_bytree': 0.9749924263952003, 'reg_alpha': 4.336492262682517, 'reg_lambda': 4.451807078683564, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:03:54,426] Trial 267 finished with value: 192.5925170174235 and parameters: {'learning_rate': 0.040382356355640504, 'n_estimators': 86, 'subsample': 0.826697664015232, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.134457540286465, 'colsample_bytree': 0.9991656557788733, 'reg_alpha': 4.317435960546119, 'reg_lambda': 4.403648481941465, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:00,604] Trial 268 finished with value: 178.37221765018947 and parameters: {'learning_rate': 0.047810355853653626, 'n_estimators': 178, 'subsample': 0.8405826919909187, 'max_depth': 18, 'min_child_weight': 9, 'gamma': 3.7307179587602146, 'colsample_bytree': 0.9792377451265796, 'reg_alpha': 4.188646336491963, 'reg_lambda': 4.822180007429983, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:03,261] Trial 269 finished with value: 175.39458911355194 and parameters: {'learning_rate': 0.036822175182935374, 'n_estimators': 180, 'subsample': 0.8191451809190868, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.072126642659874, 'colsample_bytree': 0.9634970451387143, 'reg_alpha': 4.0656524523404105, 'reg_lambda': 4.482051925109576, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:05,888] Trial 270 finished with value: 179.70808887360164 and parameters: {'learning_rate': 0.035867170631220746, 'n_estimators': 181, 'subsample': 0.8357650075638166, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 3.9395991670529633, 'colsample_bytree': 0.965745173771935, 'reg_alpha': 4.091044901142179, 'reg_lambda': 4.342955515041629, 'random_state': 9}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:08,816] Trial 271 finished with value: 182.37195931861393 and parameters: {'learning_rate': 0.060593842571289136, 'n_estimators': 184, 'subsample': 0.8228080322924183, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.052907336574247, 'colsample_bytree': 0.9797916450603152, 'reg_alpha': 4.722588665098113, 'reg_lambda': 4.436923943010533, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:14,853] Trial 272 finished with value: 177.2975193203213 and parameters: {'learning_rate': 0.03230978865913325, 'n_estimators': 179, 'subsample': 0.8636115471291584, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.345170192758124, 'colsample_bytree': 0.9867515763590167, 'reg_alpha': 4.124580023252174, 'reg_lambda': 4.500174473933161, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:17,388] Trial 273 finished with value: 176.56385535553247 and parameters: {'learning_rate': 0.03640259130356155, 'n_estimators': 176, 'subsample': 0.8142416346924396, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.192336724202276, 'colsample_bytree': 0.9724006561617601, 'reg_alpha': 4.8202604188549465, 'reg_lambda': 4.570631485821285, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:19,865] Trial 274 finished with value: 176.71316467467108 and parameters: {'learning_rate': 0.0386107727414799, 'n_estimators': 175, 'subsample': 0.8074520554082852, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.3055409582076527, 'colsample_bytree': 0.967280509142326, 'reg_alpha': 4.857739814717984, 'reg_lambda': 4.60871037009099, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:22,467] Trial 275 finished with value: 177.4370659384606 and parameters: {'learning_rate': 0.04544844849726103, 'n_estimators': 186, 'subsample': 0.8167031115710124, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.6747962445513265, 'colsample_bytree': 0.9619592093294826, 'reg_alpha': 4.99915830088959, 'reg_lambda': 4.727926722196031, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:28,097] Trial 276 finished with value: 178.0336188603014 and parameters: {'learning_rate': 0.03900817968422076, 'n_estimators': 181, 'subsample': 0.6307054846831156, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.194293451358951, 'colsample_bytree': 0.9336800004256426, 'reg_alpha': 4.792674353674678, 'reg_lambda': 4.665600994658649, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:30,452] Trial 277 finished with value: 176.20483544224192 and parameters: {'learning_rate': 0.03269890088968347, 'n_estimators': 177, 'subsample': 0.6105668760541015, 'max_depth': 19, 'min_child_weight': 8, 'gamma': 1.0596210689090657, 'colsample_bytree': 0.9996359230975747, 'reg_alpha': 4.634124522123558, 'reg_lambda': 4.904922240443927, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:32,587] Trial 278 finished with value: 177.03142212052862 and parameters: {'learning_rate': 0.02757927693729898, 'n_estimators': 176, 'subsample': 0.5972310488393051, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 0.9852279444820733, 'colsample_bytree': 0.9767997714741306, 'reg_alpha': 4.632056489418554, 'reg_lambda': 4.890399792039508, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:35,006] Trial 279 finished with value: 177.07965455969844 and parameters: {'learning_rate': 0.031208524610644307, 'n_estimators': 181, 'subsample': 0.6266989711131655, 'max_depth': 19, 'min_child_weight': 8, 'gamma': 1.4685847928744087, 'colsample_bytree': 0.9605731826697254, 'reg_alpha': 4.662889556160237, 'reg_lambda': 4.275683559618961, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:35,846] Trial 280 finished with value: 280.8259710801561 and parameters: {'learning_rate': 0.0341205879197388, 'n_estimators': 60, 'subsample': 0.6182407320024051, 'max_depth': 19, 'min_child_weight': 5, 'gamma': 4.843861799603171, 'colsample_bytree': 0.9983635310262138, 'reg_alpha': 4.850187244299025, 'reg_lambda': 4.543158825609124, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:41,452] Trial 281 finished with value: 177.20747676310992 and parameters: {'learning_rate': 0.03198192409637312, 'n_estimators': 159, 'subsample': 0.608203673377028, 'max_depth': 20, 'min_child_weight': 8, 'gamma': 1.2308643451112244, 'colsample_bytree': 0.9728749472548669, 'reg_alpha': 4.7197885278955125, 'reg_lambda': 4.950872641976691, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:44,760] Trial 282 finished with value: 181.36357011769823 and parameters: {'learning_rate': 0.036486554514204954, 'n_estimators': 177, 'subsample': 0.8462690816285589, 'max_depth': 20, 'min_child_weight': 7, 'gamma': 1.4129932755699977, 'colsample_bytree': 0.9839653268141788, 'reg_alpha': 4.540686569737342, 'reg_lambda': 4.609922465296496, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:47,067] Trial 283 finished with value: 174.6182926144831 and parameters: {'learning_rate': 0.04048573514081329, 'n_estimators': 183, 'subsample': 0.6133607465003135, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 1.1315164082342457, 'colsample_bytree': 0.9409381283735427, 'reg_alpha': 2.119030189539505, 'reg_lambda': 4.68702666356304, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:49,437] Trial 284 finished with value: 178.14127639339884 and parameters: {'learning_rate': 0.04074372570132315, 'n_estimators': 187, 'subsample': 0.611711484341192, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 0.8411887208356623, 'colsample_bytree': 0.9397124998845096, 'reg_alpha': 2.153501342604062, 'reg_lambda': 4.73188528675734, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:55,395] Trial 285 finished with value: 179.12741599354484 and parameters: {'learning_rate': 0.04152367613614974, 'n_estimators': 184, 'subsample': 0.5995943716129091, 'max_depth': 20, 'min_child_weight': 8, 'gamma': 1.055542539847706, 'colsample_bytree': 0.9232094861682935, 'reg_alpha': 1.8656873661634683, 'reg_lambda': 4.9084844037678605, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:04:57,910] Trial 286 finished with value: 182.12867698487753 and parameters: {'learning_rate': 0.05143809991064586, 'n_estimators': 181, 'subsample': 0.6091154055549958, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 1.3814402862467967, 'colsample_bytree': 0.9483686717207784, 'reg_alpha': 0.7094836248736787, 'reg_lambda': 4.721831408861459, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:00,481] Trial 287 finished with value: 179.398088483627 and parameters: {'learning_rate': 0.03861847621042689, 'n_estimators': 167, 'subsample': 0.8336136599593655, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.532521874956455, 'colsample_bytree': 0.9319460361739448, 'reg_alpha': 2.2615463895566275, 'reg_lambda': 4.862080835767453, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:03,012] Trial 288 finished with value: 180.76123064907856 and parameters: {'learning_rate': 0.033929644707521224, 'n_estimators': 189, 'subsample': 0.6441600485127118, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 1.303096927940635, 'colsample_bytree': 0.9567624805525514, 'reg_alpha': 2.0598430504993037, 'reg_lambda': 4.385254575790275, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:08,740] Trial 289 finished with value: 176.82494186133644 and parameters: {'learning_rate': 0.04366413655719946, 'n_estimators': 170, 'subsample': 0.6177276845385236, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.29465373861018, 'colsample_bytree': 0.9429373974419726, 'reg_alpha': 2.136699576278585, 'reg_lambda': 4.680324219810303, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:11,077] Trial 290 finished with value: 178.41464867799073 and parameters: {'learning_rate': 0.038479364033608264, 'n_estimators': 183, 'subsample': 0.5914491072430068, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 1.1205449363436069, 'colsample_bytree': 0.9549288902019817, 'reg_alpha': 2.4594350286810185, 'reg_lambda': 3.124122862647295, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:13,058] Trial 291 finished with value: 181.7084788568406 and parameters: {'learning_rate': 0.04899368876305525, 'n_estimators': 162, 'subsample': 0.7600675022288703, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.3770701140718105, 'colsample_bytree': 0.6796708597855431, 'reg_alpha': 4.020990909047983, 'reg_lambda': 2.756239247311478, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:15,306] Trial 292 finished with value: 180.43596978971783 and parameters: {'learning_rate': 0.031011618862971244, 'n_estimators': 158, 'subsample': 0.8306557775330066, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.635018133808061, 'colsample_bytree': 0.9648323268481179, 'reg_alpha': 1.983292387448973, 'reg_lambda': 4.971828707048538, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:17,618] Trial 293 finished with value: 179.67059346762156 and parameters: {'learning_rate': 0.0336566498911294, 'n_estimators': 179, 'subsample': 0.6290181096223161, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 1.5757549011882974, 'colsample_bytree': 0.9169451274872941, 'reg_alpha': 2.2144235731296606, 'reg_lambda': 2.916233208693376, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:23,409] Trial 294 finished with value: 175.1312974678256 and parameters: {'learning_rate': 0.0411810831993144, 'n_estimators': 166, 'subsample': 0.8385261250140061, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.468698823634711, 'colsample_bytree': 0.9426725673442826, 'reg_alpha': 3.9277844651017078, 'reg_lambda': 4.5440302225841585, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:25,914] Trial 295 finished with value: 183.07206347636088 and parameters: {'learning_rate': 0.0815122859281768, 'n_estimators': 166, 'subsample': 0.967456017408105, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.503039163327683, 'colsample_bytree': 0.9282047597817239, 'reg_alpha': 3.935256298889228, 'reg_lambda': 4.4650067662944855, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:28,060] Trial 296 finished with value: 185.56332321950538 and parameters: {'learning_rate': 0.04482086933920631, 'n_estimators': 164, 'subsample': 0.8418695088019079, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.602347360288705, 'colsample_bytree': 0.7013847354608236, 'reg_alpha': 3.90316242932995, 'reg_lambda': 2.4008981316809974, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:36,485] Trial 297 finished with value: 183.32985007295804 and parameters: {'learning_rate': 0.03650160026423395, 'n_estimators': 169, 'subsample': 0.5820059175217424, 'max_depth': 19, 'min_child_weight': 3, 'gamma': 4.461649140824309, 'colsample_bytree': 0.9377413335480133, 'reg_alpha': 4.114580146685707, 'reg_lambda': 0.5492990783462337, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:38,893] Trial 298 finished with value: 177.73780370966242 and parameters: {'learning_rate': 0.04119652474287682, 'n_estimators': 161, 'subsample': 0.8495995250611867, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.691834203861138, 'colsample_bytree': 0.9618624493544136, 'reg_alpha': 3.999270453301776, 'reg_lambda': 4.274799976410018, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:40,851] Trial 299 finished with value: 179.55724066097338 and parameters: {'learning_rate': 0.029029972397342407, 'n_estimators': 168, 'subsample': 0.6349549150445253, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.0860880690544423, 'colsample_bytree': 0.9996317954514223, 'reg_alpha': 4.037016492746992, 'reg_lambda': 4.81962992666592, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:42,985] Trial 300 finished with value: 176.58117087499488 and parameters: {'learning_rate': 0.04763201258688394, 'n_estimators': 173, 'subsample': 0.6171865696965078, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 0.907696414138534, 'colsample_bytree': 0.9864553393670731, 'reg_alpha': 3.845948516235446, 'reg_lambda': 4.353440732756256, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:45,368] Trial 301 finished with value: 179.16975321588515 and parameters: {'learning_rate': 0.05534801958228915, 'n_estimators': 165, 'subsample': 0.7706822282074423, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.3571053576023349, 'colsample_bytree': 0.9472061234399854, 'reg_alpha': 2.347068723990384, 'reg_lambda': 4.522125328671749, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:50,979] Trial 302 finished with value: 178.15416573722584 and parameters: {'learning_rate': 0.037914043950202196, 'n_estimators': 162, 'subsample': 0.7114905452229741, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.399205156836083, 'colsample_bytree': 0.9788546835020059, 'reg_alpha': 4.156897417179344, 'reg_lambda': 4.701696160420227, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:54,174] Trial 303 finished with value: 187.6274723143551 and parameters: {'learning_rate': 0.1260774324171881, 'n_estimators': 172, 'subsample': 0.7982384809854959, 'max_depth': 20, 'min_child_weight': 8, 'gamma': 4.762254486715272, 'colsample_bytree': 0.9667936076136074, 'reg_alpha': 4.015407377530524, 'reg_lambda': 4.786501759367517, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:56,174] Trial 304 finished with value: 187.41000880812842 and parameters: {'learning_rate': 0.034838362974314446, 'n_estimators': 159, 'subsample': 0.8578237048353755, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.577549674354585, 'colsample_bytree': 0.6511992520792319, 'reg_alpha': 4.521851138382957, 'reg_lambda': 4.539635537483488, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:05:57,778] Trial 305 finished with value: 321.42287328573985 and parameters: {'learning_rate': 0.01065418319358653, 'n_estimators': 166, 'subsample': 0.8216125136086613, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.670837821152617, 'colsample_bytree': 0.954796684373736, 'reg_alpha': 1.714385598609782, 'reg_lambda': 4.8995836332734815, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:00,064] Trial 306 finished with value: 177.5517765425615 and parameters: {'learning_rate': 0.04364989637962843, 'n_estimators': 169, 'subsample': 0.7332468846518674, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.41618338813908, 'colsample_bytree': 0.9881763811863102, 'reg_alpha': 3.900929385976766, 'reg_lambda': 4.656343845554107, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:05,311] Trial 307 finished with value: 197.0783513721472 and parameters: {'learning_rate': 0.02616951755008077, 'n_estimators': 129, 'subsample': 0.7555115341750114, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.8161581159576359, 'colsample_bytree': 0.9412116044168507, 'reg_alpha': 2.0191347161217426, 'reg_lambda': 2.1813526453647527, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:07,910] Trial 308 finished with value: 178.26180355619942 and parameters: {'learning_rate': 0.04066616869054353, 'n_estimators': 175, 'subsample': 0.8413985954063881, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.2434885082487706, 'colsample_bytree': 0.972104382662361, 'reg_alpha': 2.130988301456995, 'reg_lambda': 3.6669318459349047, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:10,283] Trial 309 finished with value: 178.20754197736872 and parameters: {'learning_rate': 0.03208782575037727, 'n_estimators': 170, 'subsample': 0.8033195479110954, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.0124120883140635, 'colsample_bytree': 0.9592544163091994, 'reg_alpha': 4.623300734275805, 'reg_lambda': 4.476845702935687, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:12,856] Trial 310 finished with value: 189.35579686550201 and parameters: {'learning_rate': 0.19386581249556295, 'n_estimators': 163, 'subsample': 0.6963970701447254, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.288914224065672, 'colsample_bytree': 0.9813261699498593, 'reg_alpha': 4.104708815100803, 'reg_lambda': 4.762538734083607, 'random_state': 7}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:17,795] Trial 311 finished with value: 182.95201356287498 and parameters: {'learning_rate': 0.047449802267156706, 'n_estimators': 106, 'subsample': 0.8305093014817744, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 1.5434654975209046, 'colsample_bytree': 0.9502012443889706, 'reg_alpha': 4.438518177820195, 'reg_lambda': 4.9872456912511, 'random_state': 8}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:20,076] Trial 312 finished with value: 174.713340314378 and parameters: {'learning_rate': 0.037199538579266715, 'n_estimators': 174, 'subsample': 0.6657780634036335, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.443623034239619, 'colsample_bytree': 0.9680785592596596, 'reg_alpha': 2.5521752233507353, 'reg_lambda': 4.379426029860994, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:22,438] Trial 313 finished with value: 175.52032622043333 and parameters: {'learning_rate': 0.03536535043595315, 'n_estimators': 174, 'subsample': 0.6645646749421741, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.5188850818578725, 'colsample_bytree': 0.9281231515808241, 'reg_alpha': 2.2409193883258904, 'reg_lambda': 4.215383703754919, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:24,683] Trial 314 finished with value: 179.9608699367613 and parameters: {'learning_rate': 0.03068819326500091, 'n_estimators': 174, 'subsample': 0.6681326493199305, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.521388552226937, 'colsample_bytree': 0.9179553856102487, 'reg_alpha': 1.8842115109839854, 'reg_lambda': 4.345005406646624, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:27,046] Trial 315 finished with value: 176.16208999708124 and parameters: {'learning_rate': 0.03361256365511156, 'n_estimators': 179, 'subsample': 0.652346266381718, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.365095170316956, 'colsample_bytree': 0.9376204244107286, 'reg_alpha': 2.2489482514202126, 'reg_lambda': 4.174339031342798, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:32,853] Trial 316 finished with value: 179.79156083937525 and parameters: {'learning_rate': 0.03405979549848141, 'n_estimators': 180, 'subsample': 0.658041133100658, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.434026036096354, 'colsample_bytree': 0.9093723996058664, 'reg_alpha': 2.128001481831705, 'reg_lambda': 4.205085075195522, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:35,304] Trial 317 finished with value: 179.48822643820222 and parameters: {'learning_rate': 0.029176826288307717, 'n_estimators': 185, 'subsample': 0.6589094975108789, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.302726365881616, 'colsample_bytree': 0.9346086113537281, 'reg_alpha': 2.3363574127888898, 'reg_lambda': 4.384976496638736, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:37,606] Trial 318 finished with value: 177.2541372152783 and parameters: {'learning_rate': 0.03484849380721033, 'n_estimators': 177, 'subsample': 0.6409113813476185, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.553796851002836, 'colsample_bytree': 0.9289536092011796, 'reg_alpha': 2.6151319891917693, 'reg_lambda': 4.237440704066216, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:39,849] Trial 319 finished with value: 178.8866235708064 and parameters: {'learning_rate': 0.030838590783899646, 'n_estimators': 174, 'subsample': 0.6653215391282196, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.681185246482061, 'colsample_bytree': 0.9400048652572948, 'reg_alpha': 2.4456098204189924, 'reg_lambda': 4.303341266559048, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:45,522] Trial 320 finished with value: 184.0547851643662 and parameters: {'learning_rate': 0.024453383198324533, 'n_estimators': 182, 'subsample': 0.6359243688192008, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 3.2826054883202525, 'colsample_bytree': 0.9332823468358173, 'reg_alpha': 2.2791925896582357, 'reg_lambda': 4.409799390744799, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:48,449] Trial 321 finished with value: 180.29637227728375 and parameters: {'learning_rate': 0.03677415882902021, 'n_estimators': 198, 'subsample': 0.6565979967621459, 'max_depth': 20, 'min_child_weight': 8, 'gamma': 4.362764434895356, 'colsample_bytree': 0.9423366357757595, 'reg_alpha': 2.203894067468195, 'reg_lambda': 4.4920947640273825, 'random_state': 4}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:50,827] Trial 322 finished with value: 179.8448978916474 and parameters: {'learning_rate': 0.02790731375870108, 'n_estimators': 191, 'subsample': 0.6496739851537284, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.543088217394106, 'colsample_bytree': 0.9206565310362297, 'reg_alpha': 2.3886115677767967, 'reg_lambda': 4.1421347780283755, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:52,495] Trial 323 finished with value: 179.84762457326994 and parameters: {'learning_rate': 0.03420653755388191, 'n_estimators': 178, 'subsample': 0.6479873104349647, 'max_depth': 11, 'min_child_weight': 9, 'gamma': 4.20484465445384, 'colsample_bytree': 0.9487646060442538, 'reg_alpha': 2.5157307270926603, 'reg_lambda': 4.282796906642876, 'random_state': 6}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:06:54,707] Trial 324 finished with value: 175.5809440887368 and parameters: {'learning_rate': 0.03823741063865121, 'n_estimators': 172, 'subsample': 0.6205534080583511, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.431525328779022, 'colsample_bytree': 0.9252064180261516, 'reg_alpha': 2.0731238549142406, 'reg_lambda': 4.565700398580903, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:00,962] Trial 325 finished with value: 232.77472893139503 and parameters: {'learning_rate': 0.5483591150816483, 'n_estimators': 174, 'subsample': 0.6188900623602716, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.4139036183656915, 'colsample_bytree': 0.9205021465553239, 'reg_alpha': 1.935262950097292, 'reg_lambda': 4.416222405848112, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:03,337] Trial 326 finished with value: 179.0060473675278 and parameters: {'learning_rate': 0.03794864076351879, 'n_estimators': 180, 'subsample': 0.6284697505265879, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.603172927913125, 'colsample_bytree': 0.9083304708506634, 'reg_alpha': 2.218122849019085, 'reg_lambda': 4.205044888969141, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:05,483] Trial 327 finished with value: 177.79055220584095 and parameters: {'learning_rate': 0.03399842962372208, 'n_estimators': 172, 'subsample': 0.6016899167266603, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.518495791373009, 'colsample_bytree': 0.9278379249304437, 'reg_alpha': 2.019834623280913, 'reg_lambda': 4.637310328218418, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:07,697] Trial 328 finished with value: 180.1679116244747 and parameters: {'learning_rate': 0.031052022103794524, 'n_estimators': 176, 'subsample': 0.6245220991620583, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.739050806365783, 'colsample_bytree': 0.9300526373381427, 'reg_alpha': 1.7943920119677874, 'reg_lambda': 4.55384554878717, 'random_state': 5}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:13,587] Trial 329 finished with value: 179.81708387507962 and parameters: {'learning_rate': 0.03922938166059655, 'n_estimators': 183, 'subsample': 0.6402655576642264, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.459114291785959, 'colsample_bytree': 0.9362904103858777, 'reg_alpha': 2.0902600610162048, 'reg_lambda': 4.454655169620738, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:16,079] Trial 330 finished with value: 179.48760763901421 and parameters: {'learning_rate': 0.03619597904401793, 'n_estimators': 186, 'subsample': 0.6766557221728873, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.6397447981391124, 'colsample_bytree': 0.8997371071038675, 'reg_alpha': 2.264300325839006, 'reg_lambda': 4.329440994327573, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:19,079] Trial 331 finished with value: 179.89245481062565 and parameters: {'learning_rate': 0.03290902191761215, 'n_estimators': 171, 'subsample': 0.6096694362233406, 'max_depth': 20, 'min_child_weight': 5, 'gamma': 4.321746579100215, 'colsample_bytree': 0.9452639512817111, 'reg_alpha': 1.2216172460757306, 'reg_lambda': 4.8688202621332595, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:21,605] Trial 332 finished with value: 179.50544475118812 and parameters: {'learning_rate': 0.04126684878337342, 'n_estimators': 177, 'subsample': 0.652315725076909, 'max_depth': 19, 'min_child_weight': 8, 'gamma': 4.444991830991781, 'colsample_bytree': 0.9247884077252189, 'reg_alpha': 2.1728928692405414, 'reg_lambda': 4.699027225726338, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:27,419] Trial 333 finished with value: 177.91836526315356 and parameters: {'learning_rate': 0.03683979031356148, 'n_estimators': 179, 'subsample': 0.6351253724045873, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.869172234127622, 'colsample_bytree': 0.9548417509666677, 'reg_alpha': 2.2993375115064176, 'reg_lambda': 4.803950095124863, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:30,130] Trial 334 finished with value: 180.00409537521176 and parameters: {'learning_rate': 0.04299797126339744, 'n_estimators': 174, 'subsample': 0.8153366828372708, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.328751583146753, 'colsample_bytree': 0.9454401915397693, 'reg_alpha': 2.8011505323642645, 'reg_lambda': 4.614100264085095, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:32,810] Trial 335 finished with value: 182.4466621377855 and parameters: {'learning_rate': 0.03916576497531461, 'n_estimators': 171, 'subsample': 0.6230770633436458, 'max_depth': 19, 'min_child_weight': 7, 'gamma': 0.6181048036244485, 'colsample_bytree': 0.9390150251110927, 'reg_alpha': 2.07428479895299, 'reg_lambda': 2.630095717067618, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:35,210] Trial 336 finished with value: 179.77504535980995 and parameters: {'learning_rate': 0.027391796152208422, 'n_estimators': 188, 'subsample': 0.6675789597048373, 'max_depth': 18, 'min_child_weight': 9, 'gamma': 4.141401595538425, 'colsample_bytree': 0.9127856541091901, 'reg_alpha': 1.9399240971683251, 'reg_lambda': 4.463043599658412, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:36,865] Trial 337 finished with value: 186.5561691237224 and parameters: {'learning_rate': 0.033606026936351764, 'n_estimators': 119, 'subsample': 0.7833345605359235, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 1.0338154589614623, 'colsample_bytree': 0.9582646276928385, 'reg_alpha': 2.3839990607242116, 'reg_lambda': 4.993063158951916, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:42,349] Trial 338 finished with value: 179.6262857169077 and parameters: {'learning_rate': 0.0297874894077678, 'n_estimators': 168, 'subsample': 0.6432263548145225, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.509647291197734, 'colsample_bytree': 0.9867185210963324, 'reg_alpha': 2.2147434555901393, 'reg_lambda': 4.743280177648624, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:45,002] Trial 339 finished with value: 182.99786978987586 and parameters: {'learning_rate': 0.09452574327946699, 'n_estimators': 181, 'subsample': 0.6822491553436549, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.645415071633504, 'colsample_bytree': 0.9527899605502521, 'reg_alpha': 2.089911618051423, 'reg_lambda': 4.317095908035979, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:47,685] Trial 340 finished with value: 178.61953939919132 and parameters: {'learning_rate': 0.04399922256378094, 'n_estimators': 175, 'subsample': 0.7953507651508424, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 0.760047039411274, 'colsample_bytree': 0.9912892276421745, 'reg_alpha': 2.1884799210323362, 'reg_lambda': 4.540139843287086, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:50,393] Trial 341 finished with value: 180.9206701707983 and parameters: {'learning_rate': 0.036325990836856795, 'n_estimators': 167, 'subsample': 0.8088903508512459, 'max_depth': 18, 'min_child_weight': 8, 'gamma': 4.425487478374562, 'colsample_bytree': 0.9990092640866022, 'reg_alpha': 4.520653062987993, 'reg_lambda': 4.852261904636117, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:56,030] Trial 342 finished with value: 181.11551924857122 and parameters: {'learning_rate': 0.04976589638761661, 'n_estimators': 172, 'subsample': 0.6135232820911569, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.1282470406502738, 'colsample_bytree': 0.9285793235548202, 'reg_alpha': 4.399497793223869, 'reg_lambda': 4.681991813669572, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:07:58,671] Trial 343 finished with value: 177.39930951730065 and parameters: {'learning_rate': 0.039957129654795934, 'n_estimators': 179, 'subsample': 0.8173682409799509, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.379771851744556, 'colsample_bytree': 0.9605170351164339, 'reg_alpha': 4.2412294939671655, 'reg_lambda': 4.084732845909065, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:00,858] Trial 344 finished with value: 178.26694180077044 and parameters: {'learning_rate': 0.032498900434281906, 'n_estimators': 176, 'subsample': 0.6041112165062444, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.231057337474205, 'colsample_bytree': 0.9413214968708888, 'reg_alpha': 2.0098716617350387, 'reg_lambda': 4.421546079510919, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:03,453] Trial 345 finished with value: 177.95324475851632 and parameters: {'learning_rate': 0.04441291588000305, 'n_estimators': 170, 'subsample': 0.7876619995707704, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 0.9635850180078996, 'colsample_bytree': 0.977743004844441, 'reg_alpha': 2.3165848463344196, 'reg_lambda': 4.244454885315889, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:09,146] Trial 346 finished with value: 177.44235883737812 and parameters: {'learning_rate': 0.036726627326530016, 'n_estimators': 185, 'subsample': 0.5898863843570052, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.7491485744531765, 'colsample_bytree': 0.9645409095852526, 'reg_alpha': 4.678182241310817, 'reg_lambda': 4.863507148964405, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:11,430] Trial 347 finished with value: 178.28744615516558 and parameters: {'learning_rate': 0.0404766431103877, 'n_estimators': 173, 'subsample': 0.6268524317422826, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.55824932393337, 'colsample_bytree': 0.9497415771469588, 'reg_alpha': 3.980125916367117, 'reg_lambda': 1.967805759187606, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:14,042] Trial 348 finished with value: 177.62711631942938 and parameters: {'learning_rate': 0.035557247808587246, 'n_estimators': 182, 'subsample': 0.8263588884654192, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.44879768829401, 'colsample_bytree': 0.935266075226962, 'reg_alpha': 3.9173181847614225, 'reg_lambda': 4.617134631273486, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:16,707] Trial 349 finished with value: 180.26724536096933 and parameters: {'learning_rate': 0.04728141149550131, 'n_estimators': 167, 'subsample': 0.8037662599822377, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.343888541977126, 'colsample_bytree': 0.9716835997408251, 'reg_alpha': 1.5731790276490336, 'reg_lambda': 4.506680969189488, 'random_state': 4}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:18,838] Trial 350 finished with value: 185.4768177037008 and parameters: {'learning_rate': 0.03175849107933884, 'n_estimators': 178, 'subsample': 0.7782433812571113, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.628309933901744, 'colsample_bytree': 0.6388906009731787, 'reg_alpha': 2.4286500357505703, 'reg_lambda': 4.760599579633537, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:25,168] Trial 351 finished with value: 181.12824995710596 and parameters: {'learning_rate': 0.04157500148348592, 'n_estimators': 175, 'subsample': 0.6544881258533667, 'max_depth': 18, 'min_child_weight': 6, 'gamma': 3.573110786954171, 'colsample_bytree': 0.9526148124132373, 'reg_alpha': 2.169883558520054, 'reg_lambda': 4.36081843518817, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:27,828] Trial 352 finished with value: 179.60020879970014 and parameters: {'learning_rate': 0.05184331702234125, 'n_estimators': 171, 'subsample': 0.8351671646026992, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.184968629049713, 'colsample_bytree': 0.9846336681579503, 'reg_alpha': 1.8696198097640613, 'reg_lambda': 4.649802356566833, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:30,266] Trial 353 finished with value: 181.00753661009531 and parameters: {'learning_rate': 0.03822156303841246, 'n_estimators': 168, 'subsample': 0.8181540086694933, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.514540805286609, 'colsample_bytree': 0.9203853635108336, 'reg_alpha': 4.548436628541697, 'reg_lambda': 4.170812734181739, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:32,543] Trial 354 finished with value: 178.60453827866385 and parameters: {'learning_rate': 0.044574448172299656, 'n_estimators': 182, 'subsample': 0.6325511427028272, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.2565477035412154, 'colsample_bytree': 0.9551379086879229, 'reg_alpha': 3.703404480502238, 'reg_lambda': 4.918497240933918, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:38,523] Trial 355 finished with value: 181.2334454590551 and parameters: {'learning_rate': 0.02929045340772089, 'n_estimators': 165, 'subsample': 0.8097430013934268, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.294740788643455, 'colsample_bytree': 0.9649181811632248, 'reg_alpha': 4.247933814554108, 'reg_lambda': 4.541123217299085, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:40,366] Trial 356 finished with value: 180.48741233769076 and parameters: {'learning_rate': 0.03444342167955367, 'n_estimators': 177, 'subsample': 0.8465087876697617, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 4.427345378024896, 'colsample_bytree': 0.9427827001965424, 'reg_alpha': 2.577506664400913, 'reg_lambda': 2.311695693292648, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:42,596] Trial 357 finished with value: 178.03238033040864 and parameters: {'learning_rate': 0.04006741694049035, 'n_estimators': 173, 'subsample': 0.6638375512153413, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.581556797518245, 'colsample_bytree': 0.9792447638522044, 'reg_alpha': 3.8226899703905945, 'reg_lambda': 4.765668533223813, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:45,530] Trial 358 finished with value: 180.66139664733734 and parameters: {'learning_rate': 0.037025405254678824, 'n_estimators': 190, 'subsample': 0.6449446966291926, 'max_depth': 20, 'min_child_weight': 8, 'gamma': 4.117764217918667, 'colsample_bytree': 0.9892513663543082, 'reg_alpha': 4.3585835135878375, 'reg_lambda': 2.832482584579925, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:51,307] Trial 359 finished with value: 179.71688677593883 and parameters: {'learning_rate': 0.03227391292783058, 'n_estimators': 170, 'subsample': 0.796661929488981, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.7743700530299495, 'colsample_bytree': 0.9642718393720688, 'reg_alpha': 4.725796091138428, 'reg_lambda': 4.4276722572490455, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:54,238] Trial 360 finished with value: 181.18830927056283 and parameters: {'learning_rate': 0.04225678954244225, 'n_estimators': 178, 'subsample': 0.823786637822717, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.243658831380333, 'colsample_bytree': 0.9332172211314339, 'reg_alpha': 4.052786675737551, 'reg_lambda': 2.4667534981477965, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:57,190] Trial 361 finished with value: 179.8786982647117 and parameters: {'learning_rate': 0.04695118686061384, 'n_estimators': 184, 'subsample': 0.9090564917015899, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.493833795876946, 'colsample_bytree': 0.9751549131219984, 'reg_alpha': 2.1046243550454697, 'reg_lambda': 3.0198395742648345, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:08:59,711] Trial 362 finished with value: 174.7175881064364 and parameters: {'learning_rate': 0.026638530662701984, 'n_estimators': 200, 'subsample': 0.6872272705896909, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.1661012613811177, 'colsample_bytree': 0.959410420540565, 'reg_alpha': 4.885419675207928, 'reg_lambda': 4.60426199457799, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:05,777] Trial 363 finished with value: 179.9707920774644 and parameters: {'learning_rate': 0.026646287193643092, 'n_estimators': 199, 'subsample': 0.7035644244738827, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.1723730323653572, 'colsample_bytree': 0.9474895896196944, 'reg_alpha': 4.869553882378785, 'reg_lambda': 4.609566239549768, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:08,004] Trial 364 finished with value: 181.65958734352282 and parameters: {'learning_rate': 0.05173279373830599, 'n_estimators': 165, 'subsample': 0.6799247145803137, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.3657662674065154, 'colsample_bytree': 0.959321993894175, 'reg_alpha': 4.903398761932058, 'reg_lambda': 4.525736682353505, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:10,532] Trial 365 finished with value: 176.82927010720212 and parameters: {'learning_rate': 0.03855172988908125, 'n_estimators': 193, 'subsample': 0.690321586009771, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.3692749796057955, 'colsample_bytree': 0.9517977366897231, 'reg_alpha': 2.2713283691640314, 'reg_lambda': 4.299085012435851, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:12,988] Trial 366 finished with value: 178.6806457275621 and parameters: {'learning_rate': 0.024044489218242364, 'n_estimators': 200, 'subsample': 0.6934875548635211, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.02545214117011, 'colsample_bytree': 0.9374359506957518, 'reg_alpha': 4.833808809882992, 'reg_lambda': 4.677454346723832, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:18,768] Trial 367 finished with value: 177.66016765521326 and parameters: {'learning_rate': 0.04352695054745801, 'n_estimators': 169, 'subsample': 0.7135436313648867, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.553286620240037, 'colsample_bytree': 0.9624664449855626, 'reg_alpha': 4.914401532311691, 'reg_lambda': 4.444815487626046, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:21,600] Trial 368 finished with value: 181.88517508160294 and parameters: {'learning_rate': 0.0621371271817786, 'n_estimators': 197, 'subsample': 0.6679758515468304, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.691667944561346, 'colsample_bytree': 0.925725383664466, 'reg_alpha': 2.042798212679029, 'reg_lambda': 4.559368211054007, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:23,942] Trial 369 finished with value: 188.41767475513385 and parameters: {'learning_rate': 0.018958413346807215, 'n_estimators': 198, 'subsample': 0.6802836063871947, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.350743489311271, 'colsample_bytree': 0.9704239457807021, 'reg_alpha': 4.205432357763815, 'reg_lambda': 4.198476640397179, 'random_state': 6}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:24,490] Trial 370 finished with value: 189.20201249750946 and parameters: {'learning_rate': 0.02663584104776571, 'n_estimators': 200, 'subsample': 0.6986089798552337, 'max_depth': 4, 'min_child_weight': 3, 'gamma': 4.451138679729286, 'colsample_bytree': 0.9429305951053053, 'reg_alpha': 3.9292189247299207, 'reg_lambda': 4.72429678269582, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:27,242] Trial 371 finished with value: 177.45919517038573 and parameters: {'learning_rate': 0.03566948386556924, 'n_estimators': 193, 'subsample': 0.768632048203331, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 3.8726388904009394, 'colsample_bytree': 0.9553777255035653, 'reg_alpha': 4.097162107154281, 'reg_lambda': 4.362878235055258, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:32,880] Trial 372 finished with value: 184.53335273932225 and parameters: {'learning_rate': 0.023011854841774232, 'n_estimators': 174, 'subsample': 0.6730259444242788, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.6236594391557855, 'colsample_bytree': 0.9635081913365553, 'reg_alpha': 1.9461327233713202, 'reg_lambda': 4.605968606697329, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:35,872] Trial 373 finished with value: 178.14731758494372 and parameters: {'learning_rate': 0.04059931470184876, 'n_estimators': 196, 'subsample': 0.8356230194179101, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.2471633716794654, 'colsample_bytree': 0.9450057059435885, 'reg_alpha': 2.3297559935229715, 'reg_lambda': 4.493167955195337, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:38,405] Trial 374 finished with value: 185.34164686517514 and parameters: {'learning_rate': 0.05646659836977647, 'n_estimators': 188, 'subsample': 0.81466446019815, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 2.849923287275069, 'colsample_bytree': 0.7150638509752366, 'reg_alpha': 4.760049487347007, 'reg_lambda': 4.0768573056189235, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:41,274] Trial 375 finished with value: 178.001824885222 and parameters: {'learning_rate': 0.04841596079108816, 'n_estimators': 195, 'subsample': 0.8044177815467652, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.3517553705594947, 'colsample_bytree': 0.9757133515946749, 'reg_alpha': 3.8314854357085273, 'reg_lambda': 4.6654311514809255, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:46,999] Trial 376 finished with value: 178.10656608059023 and parameters: {'learning_rate': 0.02983907064745433, 'n_estimators': 172, 'subsample': 0.6898177445372937, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.486722093343599, 'colsample_bytree': 0.9542705157801058, 'reg_alpha': 0.6717710632491762, 'reg_lambda': 4.366949610853987, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:49,057] Trial 377 finished with value: 177.88741909955627 and parameters: {'learning_rate': 0.044529030619482816, 'n_estimators': 166, 'subsample': 0.6562755037562863, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.168702585820006, 'colsample_bytree': 0.9322734312452308, 'reg_alpha': 0.024740993851736448, 'reg_lambda': 4.7807434394464945, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:51,624] Trial 378 finished with value: 177.44934013729153 and parameters: {'learning_rate': 0.03841614768320125, 'n_estimators': 180, 'subsample': 0.7917649217488381, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.359281699763106, 'colsample_bytree': 0.9137173321094397, 'reg_alpha': 2.4652406071504487, 'reg_lambda': 4.489110331792153, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:09:54,168] Trial 379 finished with value: 178.1623770648042 and parameters: {'learning_rate': 0.03523663758428472, 'n_estimators': 169, 'subsample': 0.8234734008520685, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.242493216564643, 'colsample_bytree': 0.9663972187966223, 'reg_alpha': 2.2138594377435954, 'reg_lambda': 4.254229918302557, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:00,196] Trial 380 finished with value: 177.90271105698812 and parameters: {'learning_rate': 0.04097309527481533, 'n_estimators': 163, 'subsample': 0.8374179208827377, 'max_depth': 17, 'min_child_weight': 9, 'gamma': 0.4817648282363296, 'colsample_bytree': 0.943785964928067, 'reg_alpha': 3.6914685961799285, 'reg_lambda': 4.633248227915835, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:02,857] Trial 381 finished with value: 179.71966808746467 and parameters: {'learning_rate': 0.04658423442712429, 'n_estimators': 175, 'subsample': 0.870005161972746, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.822964337571547, 'colsample_bytree': 0.9556344816861446, 'reg_alpha': 4.02118221776952, 'reg_lambda': 4.83984332035391, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:05,464] Trial 382 finished with value: 178.97251432406858 and parameters: {'learning_rate': 0.03392874851251906, 'n_estimators': 172, 'subsample': 0.8121385594373701, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.602734326310357, 'colsample_bytree': 0.9720675960129677, 'reg_alpha': 4.9920404307219615, 'reg_lambda': 4.414272282596063, 'random_state': 4}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:08,100] Trial 383 finished with value: 181.6927400351855 and parameters: {'learning_rate': 0.03771116386417254, 'n_estimators': 168, 'subsample': 0.8477184849559887, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.278515806441992, 'colsample_bytree': 0.9225939065690253, 'reg_alpha': 4.354893273858795, 'reg_lambda': 4.54024179005414, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:14,326] Trial 384 finished with value: 179.3819167249531 and parameters: {'learning_rate': 0.042856936384042324, 'n_estimators': 180, 'subsample': 0.8207347820822056, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.432697628297493, 'colsample_bytree': 0.9352775582070856, 'reg_alpha': 2.0917355060802625, 'reg_lambda': 4.680959225224826, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:16,748] Trial 385 finished with value: 180.5818767316758 and parameters: {'learning_rate': 0.028899377793887477, 'n_estimators': 184, 'subsample': 0.7023854442735129, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.5260741559978825, 'colsample_bytree': 0.9812567362066066, 'reg_alpha': 4.280900392323035, 'reg_lambda': 4.318002878025618, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:19,035] Trial 386 finished with value: 177.30672884768038 and parameters: {'learning_rate': 0.03920175673646153, 'n_estimators': 165, 'subsample': 0.779357313775533, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 0.3174302210389007, 'colsample_bytree': 0.9505408593329331, 'reg_alpha': 4.455288383069263, 'reg_lambda': 4.769022866179321, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:21,762] Trial 387 finished with value: 178.91272197725488 and parameters: {'learning_rate': 0.033384594949115304, 'n_estimators': 175, 'subsample': 0.8018031413868665, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.671464287245326, 'colsample_bytree': 0.9624508243948893, 'reg_alpha': 1.3876031984305688, 'reg_lambda': 4.565330886315685, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:27,971] Trial 388 finished with value: 178.59105506539296 and parameters: {'learning_rate': 0.036547806593808616, 'n_estimators': 171, 'subsample': 0.8269823473410044, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.368033388189684, 'colsample_bytree': 0.971557045144979, 'reg_alpha': 4.16295558453586, 'reg_lambda': 2.072092293013309, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:29,547] Trial 389 finished with value: 179.96901554758344 and parameters: {'learning_rate': 0.0507749207922111, 'n_estimators': 162, 'subsample': 0.6724227585716249, 'max_depth': 12, 'min_child_weight': 10, 'gamma': 0.8951058420253383, 'colsample_bytree': 0.9445410354039261, 'reg_alpha': 4.798563386180973, 'reg_lambda': 4.983237946969036, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:32,212] Trial 390 finished with value: 181.86262057182682 and parameters: {'learning_rate': 0.03120211603694933, 'n_estimators': 167, 'subsample': 0.8381777471745698, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.514978164733158, 'colsample_bytree': 0.9820621465714976, 'reg_alpha': 3.969333612761168, 'reg_lambda': 2.1958960176932916, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:34,915] Trial 391 finished with value: 177.14223714439663 and parameters: {'learning_rate': 0.04401039333011268, 'n_estimators': 178, 'subsample': 0.7644448726279014, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.145054992294185, 'colsample_bytree': 0.9606053086931536, 'reg_alpha': 2.9188686099032237, 'reg_lambda': 4.186889377549024, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:36,330] Trial 392 finished with value: 177.4335315034267 and parameters: {'learning_rate': 0.040583475673181074, 'n_estimators': 173, 'subsample': 0.6485381393194019, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 1.1178514858105615, 'colsample_bytree': 0.9290219017438383, 'reg_alpha': 2.192737032354936, 'reg_lambda': 3.184728878889608, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:44,581] Trial 393 finished with value: 197.0801908235619 and parameters: {'learning_rate': 0.021254323966635066, 'n_estimators': 186, 'subsample': 0.85307012930789, 'max_depth': 20, 'min_child_weight': 4, 'gamma': 1.4175482377527615, 'colsample_bytree': 0.9530149402251393, 'reg_alpha': 3.8275910906266213, 'reg_lambda': 2.6901142656710704, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:47,112] Trial 394 finished with value: 180.02876786323407 and parameters: {'learning_rate': 0.03569754743684571, 'n_estimators': 182, 'subsample': 0.716985535947756, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.248346284418938, 'colsample_bytree': 0.969404195491645, 'reg_alpha': 2.389950134265081, 'reg_lambda': 4.46365975648511, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:49,430] Trial 395 finished with value: 178.31270441648155 and parameters: {'learning_rate': 0.04825484684313356, 'n_estimators': 170, 'subsample': 0.6338333420711998, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.02783568437783, 'colsample_bytree': 0.9891856945641159, 'reg_alpha': 1.9789365779782238, 'reg_lambda': 4.824947317148044, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:51,086] Trial 396 finished with value: 179.20834281832435 and parameters: {'learning_rate': 0.04196667978411475, 'n_estimators': 191, 'subsample': 0.6862886328479936, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 4.454310128939708, 'colsample_bytree': 0.8951080522466166, 'reg_alpha': 1.827763728941651, 'reg_lambda': 4.629067800917385, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:56,994] Trial 397 finished with value: 180.25223254864193 and parameters: {'learning_rate': 0.03818940395519854, 'n_estimators': 176, 'subsample': 0.8122232683317829, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.361148803095259, 'colsample_bytree': 0.9366526611318511, 'reg_alpha': 4.631214359926113, 'reg_lambda': 4.382023918492867, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:10:58,376] Trial 398 finished with value: 211.61950197279083 and parameters: {'learning_rate': 0.03129457790088561, 'n_estimators': 96, 'subsample': 0.7930869119664993, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.682034089407215, 'colsample_bytree': 0.9470717792524943, 'reg_alpha': 4.054007286434773, 'reg_lambda': 1.859705025056252, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:00,648] Trial 399 finished with value: 183.66652200443528 and parameters: {'learning_rate': 0.026790642223664042, 'n_estimators': 166, 'subsample': 0.82907924815319, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.27878344327766, 'colsample_bytree': 0.9593044403087486, 'reg_alpha': 4.2006559075413366, 'reg_lambda': 4.749731962712597, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:03,123] Trial 400 finished with value: 178.47982766065468 and parameters: {'learning_rate': 0.04435538826811096, 'n_estimators': 173, 'subsample': 0.6639001603352398, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.608732369994105, 'colsample_bytree': 0.9806278268749199, 'reg_alpha': 2.25934842786754, 'reg_lambda': 4.100611770418597, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:05,405] Trial 401 finished with value: 181.93149163154501 and parameters: {'learning_rate': 0.05391451721778821, 'n_estimators': 169, 'subsample': 0.62187617040063, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.93854775533406, 'colsample_bytree': 0.9701431687698452, 'reg_alpha': 4.72352214554431, 'reg_lambda': 2.956107473792294, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:11,028] Trial 402 finished with value: 178.38125265000232 and parameters: {'learning_rate': 0.03400000659309769, 'n_estimators': 179, 'subsample': 0.8214046689457334, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.238702060839803, 'colsample_bytree': 0.9099705581436739, 'reg_alpha': 4.897813251469129, 'reg_lambda': 4.518628740024231, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:13,173] Trial 403 finished with value: 186.74226787834434 and parameters: {'learning_rate': 0.024612592260236217, 'n_estimators': 163, 'subsample': 0.8067507354441831, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.416223545733891, 'colsample_bytree': 0.9405460076133978, 'reg_alpha': 0.9812944122550267, 'reg_lambda': 4.262448954345545, 'random_state': 5}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:15,933] Trial 404 finished with value: 179.95319971903282 and parameters: {'learning_rate': 0.037818170865208285, 'n_estimators': 174, 'subsample': 0.7073833657110535, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.538178656312297, 'colsample_bytree': 0.9563141226356967, 'reg_alpha': 2.147312198411734, 'reg_lambda': 1.1004859350710188, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:17,835] Trial 405 finished with value: 183.33900699536505 and parameters: {'learning_rate': 0.046748648177530966, 'n_estimators': 195, 'subsample': 0.6412822975900286, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 1.3124225077867018, 'colsample_bytree': 0.6020853966611355, 'reg_alpha': 3.663484772973048, 'reg_lambda': 4.88427685570145, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:23,861] Trial 406 finished with value: 178.12085906667943 and parameters: {'learning_rate': 0.0407079846712738, 'n_estimators': 182, 'subsample': 0.7886393298577068, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.150228018633217, 'colsample_bytree': 0.9212769164228051, 'reg_alpha': 3.902819430103688, 'reg_lambda': 4.701262449856031, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:26,092] Trial 407 finished with value: 179.87979235041982 and parameters: {'learning_rate': 0.0347552416071428, 'n_estimators': 171, 'subsample': 0.6516732408646537, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.771127855495726, 'colsample_bytree': 0.9759213108343531, 'reg_alpha': 4.36445939556725, 'reg_lambda': 2.5608744530814356, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:29,365] Trial 408 finished with value: 199.1909227466203 and parameters: {'learning_rate': 0.33186996156754384, 'n_estimators': 176, 'subsample': 0.7272491689745787, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.3441620864811, 'colsample_bytree': 0.9634034715289762, 'reg_alpha': 4.556131401493116, 'reg_lambda': 4.593807353800513, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:32,254] Trial 409 finished with value: 179.67040388418678 and parameters: {'learning_rate': 0.029323534812713232, 'n_estimators': 188, 'subsample': 0.7582372565414894, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.47220583340778, 'colsample_bytree': 0.9478290621318907, 'reg_alpha': 4.1137848001600235, 'reg_lambda': 2.361883471669867, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:38,264] Trial 410 finished with value: 179.19448028086381 and parameters: {'learning_rate': 0.04063471316342097, 'n_estimators': 167, 'subsample': 0.8329993000186868, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.4773371374206445, 'colsample_bytree': 0.990598852392124, 'reg_alpha': 2.0397365527315428, 'reg_lambda': 4.421019318182008, 'random_state': 4}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:39,568] Trial 411 finished with value: 192.21227604924752 and parameters: {'learning_rate': 0.03696081590421478, 'n_estimators': 123, 'subsample': 0.8135226990728464, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.178938061643257, 'colsample_bytree': 0.5337719049266838, 'reg_alpha': 4.460698948947118, 'reg_lambda': 3.2925206403866403, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:41,723] Trial 412 finished with value: 179.6961709843991 and parameters: {'learning_rate': 0.032167242350703056, 'n_estimators': 159, 'subsample': 0.774390232385523, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.6015617476330215, 'colsample_bytree': 0.935336780774943, 'reg_alpha': 4.250657590136845, 'reg_lambda': 4.811182922045068, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:44,389] Trial 413 finished with value: 220.45514736609925 and parameters: {'learning_rate': 0.015341461689376109, 'n_estimators': 179, 'subsample': 0.8005486537313181, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.251959375868069, 'colsample_bytree': 0.9668249309420252, 'reg_alpha': 3.7442234372722747, 'reg_lambda': 0.7922923521451137, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:46,678] Trial 414 finished with value: 176.4189832281823 and parameters: {'learning_rate': 0.04479075076089941, 'n_estimators': 169, 'subsample': 0.6787631947990866, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.418871497828384, 'colsample_bytree': 0.9779239656857046, 'reg_alpha': 2.4921068756810394, 'reg_lambda': 4.473694663433345, 'random_state': 8}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:52,454] Trial 415 finished with value: 179.0043122184089 and parameters: {'learning_rate': 0.037670826948886744, 'n_estimators': 175, 'subsample': 0.8276249950546011, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.525916333998546, 'colsample_bytree': 0.9512826974434329, 'reg_alpha': 2.314144263297106, 'reg_lambda': 4.295094255012951, 'random_state': 9}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:55,384] Trial 416 finished with value: 182.262996363912 and parameters: {'learning_rate': 0.050045847676825995, 'n_estimators': 200, 'subsample': 0.8402839595793546, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.699363003463448, 'colsample_bytree': 0.9260980803989977, 'reg_alpha': 4.846333715597492, 'reg_lambda': 4.692395899507825, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:11:57,873] Trial 417 finished with value: 178.1772108125142 and parameters: {'learning_rate': 0.04349678102468801, 'n_estimators': 172, 'subsample': 0.8147962076155335, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 1.1829652429032953, 'colsample_bytree': 0.9568180624939285, 'reg_alpha': 2.731039511992193, 'reg_lambda': 4.902168974585606, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:00,219] Trial 418 finished with value: 179.38376903132 and parameters: {'learning_rate': 0.034791664793989145, 'n_estimators': 165, 'subsample': 0.6951785671452522, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 1.0240940564266157, 'colsample_bytree': 0.9892962108397411, 'reg_alpha': 3.9865734941822684, 'reg_lambda': 4.567769131148574, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:06,260] Trial 419 finished with value: 176.68883544725043 and parameters: {'learning_rate': 0.04094049780147823, 'n_estimators': 184, 'subsample': 0.6647047034400637, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 0.7116634127711404, 'colsample_bytree': 0.941910613017993, 'reg_alpha': 2.10609262297139, 'reg_lambda': 4.375084567040416, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:08,709] Trial 420 finished with value: 184.70067900832674 and parameters: {'learning_rate': 0.07165773559998359, 'n_estimators': 180, 'subsample': 0.6345663985355605, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.340750341934332, 'colsample_bytree': 0.9695430840003608, 'reg_alpha': 1.7608519616351872, 'reg_lambda': 2.808074072879792, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:11,614] Trial 421 finished with value: 181.54045285180203 and parameters: {'learning_rate': 0.031463553114547044, 'n_estimators': 177, 'subsample': 0.8574240962787354, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.094146605571663, 'colsample_bytree': 0.9804438510148327, 'reg_alpha': 4.682964614254994, 'reg_lambda': 4.673421354230647, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:13,695] Trial 422 finished with value: 181.56875653971443 and parameters: {'learning_rate': 0.038966224720544076, 'n_estimators': 171, 'subsample': 0.8225551606668374, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.565289606829451, 'colsample_bytree': 0.727582086631205, 'reg_alpha': 4.16633962723469, 'reg_lambda': 4.776736544648541, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:19,424] Trial 423 finished with value: 181.66577301273225 and parameters: {'learning_rate': 0.045250023913629686, 'n_estimators': 163, 'subsample': 0.7995995436740104, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.463770398486984, 'colsample_bytree': 0.9585819970742997, 'reg_alpha': 1.9699589921913936, 'reg_lambda': 4.524051120063125, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:21,214] Trial 424 finished with value: 177.73630260102627 and parameters: {'learning_rate': 0.03538766873031928, 'n_estimators': 168, 'subsample': 0.6152209426838883, 'max_depth': 14, 'min_child_weight': 10, 'gamma': 4.315113754544521, 'colsample_bytree': 0.9479813797409189, 'reg_alpha': 4.9988446596805876, 'reg_lambda': 4.102636007948367, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:22,842] Trial 425 finished with value: 182.25938274708287 and parameters: {'learning_rate': 0.02842729468178291, 'n_estimators': 175, 'subsample': 0.7866104001230846, 'max_depth': 10, 'min_child_weight': 10, 'gamma': 4.194742834855072, 'colsample_bytree': 0.9340738741959895, 'reg_alpha': 2.207707230712335, 'reg_lambda': 4.587317502564561, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:24,600] Trial 426 finished with value: 179.41435106175942 and parameters: {'learning_rate': 0.041417622491005286, 'n_estimators': 173, 'subsample': 0.8078816433555391, 'max_depth': 11, 'min_child_weight': 10, 'gamma': 1.323267059473369, 'colsample_bytree': 0.9999217274342245, 'reg_alpha': 4.310325427684865, 'reg_lambda': 4.209702818542116, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:26,396] Trial 427 finished with value: 183.7526382380093 and parameters: {'learning_rate': 0.058954823206700875, 'n_estimators': 186, 'subsample': 0.8449144349446549, 'max_depth': 12, 'min_child_weight': 9, 'gamma': 4.409768910938242, 'colsample_bytree': 0.7442654051479155, 'reg_alpha': 3.886699771419132, 'reg_lambda': 4.976580769617615, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:29,238] Trial 428 finished with value: 177.3497805295721 and parameters: {'learning_rate': 0.04862694196318138, 'n_estimators': 161, 'subsample': 0.6561924854065984, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.622795954029023, 'colsample_bytree': 0.969205747001306, 'reg_alpha': 4.76832735792818, 'reg_lambda': 4.4126521320431324, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:33,855] Trial 429 finished with value: 186.6319302374769 and parameters: {'learning_rate': 0.11232687532434714, 'n_estimators': 130, 'subsample': 0.6243667920472206, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.4451474310528862, 'colsample_bytree': 0.9038066116562312, 'reg_alpha': 4.014275658650027, 'reg_lambda': 4.6883602783910465, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:36,838] Trial 430 finished with value: 177.26092438893076 and parameters: {'learning_rate': 0.032844329085921234, 'n_estimators': 182, 'subsample': 0.8313064094296381, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 4.512736496520673, 'colsample_bytree': 0.9626198397839384, 'reg_alpha': 0.26544949861889755, 'reg_lambda': 4.999344604883902, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:39,034] Trial 431 finished with value: 176.6751194168856 and parameters: {'learning_rate': 0.038118084391078506, 'n_estimators': 166, 'subsample': 0.7096683184188205, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 3.9532192905048746, 'colsample_bytree': 0.9509234554744345, 'reg_alpha': 3.801337448291585, 'reg_lambda': 4.867340600750993, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:39,672] Trial 432 finished with value: 180.17647248937405 and parameters: {'learning_rate': 0.05296275253276015, 'n_estimators': 178, 'subsample': 0.7659156876284743, 'max_depth': 5, 'min_child_weight': 10, 'gamma': 4.270282688424377, 'colsample_bytree': 0.9771988393633825, 'reg_alpha': 4.1025093736374645, 'reg_lambda': 4.472852748023323, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:42,234] Trial 433 finished with value: 186.35696512171333 and parameters: {'learning_rate': 0.15309437494184802, 'n_estimators': 169, 'subsample': 0.8173603776772472, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.759261256226127, 'colsample_bytree': 0.9387496662473114, 'reg_alpha': 4.6049073314126225, 'reg_lambda': 4.769020099276718, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:53,162] Trial 434 finished with value: 188.1875252009034 and parameters: {'learning_rate': 0.03573828143542809, 'n_estimators': 171, 'subsample': 0.6753275506872682, 'max_depth': 17, 'min_child_weight': 1, 'gamma': 4.376211942004122, 'colsample_bytree': 0.9197204690178356, 'reg_alpha': 4.468366148548823, 'reg_lambda': 4.610070042676483, 'random_state': 3}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:12:55,749] Trial 435 finished with value: 179.8439149074859 and parameters: {'learning_rate': 0.043403322890246676, 'n_estimators': 176, 'subsample': 0.7216724041278233, 'max_depth': 19, 'min_child_weight': 9, 'gamma': 0.9683202605578706, 'colsample_bytree': 0.9873832720877115, 'reg_alpha': 3.6037021202653223, 'reg_lambda': 4.302883085035858, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:03,210] Trial 436 finished with value: 180.59554490099438 and parameters: {'learning_rate': 0.039005907737002896, 'n_estimators': 196, 'subsample': 0.7793241569600455, 'max_depth': 20, 'min_child_weight': 6, 'gamma': 0.8306334521974559, 'colsample_bytree': 0.9633098298140186, 'reg_alpha': 2.299160984938369, 'reg_lambda': 4.0154102676133805, 'random_state': 5}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:05,693] Trial 437 finished with value: 181.019433715387 and parameters: {'learning_rate': 0.030901169454190438, 'n_estimators': 164, 'subsample': 0.6436439036441159, 'max_depth': 19, 'min_child_weight': 7, 'gamma': 4.474027579838826, 'colsample_bytree': 0.9459894391838612, 'reg_alpha': 2.1225205245928787, 'reg_lambda': 4.511372815076721, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:08,404] Trial 438 finished with value: 179.89129639527565 and parameters: {'learning_rate': 0.046071824732676014, 'n_estimators': 180, 'subsample': 0.8233169431002086, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 1.141244618685028, 'colsample_bytree': 0.9277356726534846, 'reg_alpha': 4.2113038593394085, 'reg_lambda': 4.345236929392327, 'random_state': 4}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:08,813] Trial 439 finished with value: 204.1704275054755 and parameters: {'learning_rate': 0.0340712975524035, 'n_estimators': 190, 'subsample': 0.6033851690787319, 'max_depth': 3, 'min_child_weight': 10, 'gamma': 4.190451257087656, 'colsample_bytree': 0.9758876654120915, 'reg_alpha': 1.8955863381757634, 'reg_lambda': 4.714478077572183, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:14,510] Trial 440 finished with value: 183.69191496581317 and parameters: {'learning_rate': 0.0256587313811949, 'n_estimators': 173, 'subsample': 0.7511418083508739, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.06611793397371, 'colsample_bytree': 0.9580714548624761, 'reg_alpha': 4.807084325556687, 'reg_lambda': 4.8448352661401906, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:17,607] Trial 441 finished with value: 182.96106658323345 and parameters: {'learning_rate': 0.04193406109801503, 'n_estimators': 168, 'subsample': 0.8404351520610583, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.627460672232182, 'colsample_bytree': 0.990072130168728, 'reg_alpha': 4.354881730545154, 'reg_lambda': 0.2865749100706121, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:19,540] Trial 442 finished with value: 178.25268961454228 and parameters: {'learning_rate': 0.03791772100272385, 'n_estimators': 177, 'subsample': 0.685485380642791, 'max_depth': 13, 'min_child_weight': 10, 'gamma': 4.382145220197994, 'colsample_bytree': 0.9526339959681794, 'reg_alpha': 4.912127542260439, 'reg_lambda': 2.480867761185791, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:20,309] Trial 443 finished with value: 179.06428192420546 and parameters: {'learning_rate': 0.04691259591216119, 'n_estimators': 159, 'subsample': 0.8057915621749215, 'max_depth': 6, 'min_child_weight': 10, 'gamma': 4.566806978587457, 'colsample_bytree': 0.9695444570784358, 'reg_alpha': 2.5989124187248516, 'reg_lambda': 4.1724901465533915, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:22,690] Trial 444 finished with value: 176.25218644678762 and parameters: {'learning_rate': 0.035520047444606434, 'n_estimators': 184, 'subsample': 0.8161703051656918, 'max_depth': 16, 'min_child_weight': 10, 'gamma': 1.2742165602967137, 'colsample_bytree': 0.9388057874058152, 'reg_alpha': 3.9269924169767294, 'reg_lambda': 4.617842023991311, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:28,931] Trial 445 finished with value: 177.3029593686582 and parameters: {'learning_rate': 0.04100664706446436, 'n_estimators': 170, 'subsample': 0.7975586473171696, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.28600215665521, 'colsample_bytree': 0.9816087117267598, 'reg_alpha': 4.054894641343314, 'reg_lambda': 4.453494615659245, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:31,423] Trial 446 finished with value: 182.07556281287674 and parameters: {'learning_rate': 0.02888085585348301, 'n_estimators': 174, 'subsample': 0.8311419369715748, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.440978396491674, 'colsample_bytree': 0.9612352032379682, 'reg_alpha': 2.3810977565999467, 'reg_lambda': 4.751779351323784, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:33,484] Trial 447 finished with value: 175.9750144697883 and parameters: {'learning_rate': 0.03281171418463766, 'n_estimators': 166, 'subsample': 0.6611107714260541, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.838525789967944, 'colsample_bytree': 0.9479201245898355, 'reg_alpha': 2.027809460286564, 'reg_lambda': 4.8800155675686, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:35,577] Trial 448 finished with value: 177.5958768284615 and parameters: {'learning_rate': 0.0326202739723098, 'n_estimators': 164, 'subsample': 0.6655614821284337, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.922013043737162, 'colsample_bytree': 0.9319761232363958, 'reg_alpha': 2.022659333672395, 'reg_lambda': 4.925012001074525, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:38,027] Trial 449 finished with value: 181.47793585536752 and parameters: {'learning_rate': 0.02800384554377342, 'n_estimators': 166, 'subsample': 0.6947232448706336, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.832312220584649, 'colsample_bytree': 0.9440436185308139, 'reg_alpha': 1.6576576209884673, 'reg_lambda': 4.8628068481174465, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:43,296] Trial 450 finished with value: 177.45111381303997 and parameters: {'learning_rate': 0.030777016438876117, 'n_estimators': 162, 'subsample': 0.7016745471644208, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.801557388967288, 'colsample_bytree': 0.9506678004966954, 'reg_alpha': 1.9024769781624413, 'reg_lambda': 4.7987644846612, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:46,308] Trial 451 finished with value: 245.03904026893053 and parameters: {'learning_rate': 0.7384003571777917, 'n_estimators': 167, 'subsample': 0.6742751932518695, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 0.5724589398427009, 'colsample_bytree': 0.9276655765959689, 'reg_alpha': 2.080786005706927, 'reg_lambda': 4.999081741707754, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:48,419] Trial 452 finished with value: 178.91961052102002 and parameters: {'learning_rate': 0.03369451223604218, 'n_estimators': 170, 'subsample': 0.6586942604322529, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.709105154510926, 'colsample_bytree': 0.9170414163624675, 'reg_alpha': 1.969927749099558, 'reg_lambda': 4.671418568939459, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:50,779] Trial 453 finished with value: 177.53417285399436 and parameters: {'learning_rate': 0.03682098223666765, 'n_estimators': 161, 'subsample': 0.6815557909647344, 'max_depth': 20, 'min_child_weight': 8, 'gamma': 4.911468981707547, 'colsample_bytree': 0.9392898007138931, 'reg_alpha': 1.7824874380993467, 'reg_lambda': 4.87312585325413, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:56,220] Trial 454 finished with value: 194.570479394116 and parameters: {'learning_rate': 0.02173246518691568, 'n_estimators': 165, 'subsample': 0.6865745036493635, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 3.45551213323368, 'colsample_bytree': 0.9550402351384318, 'reg_alpha': 3.718327340303459, 'reg_lambda': 4.545499604318739, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:13:58,494] Trial 455 finished with value: 177.9691135036059 and parameters: {'learning_rate': 0.032583766407339856, 'n_estimators': 157, 'subsample': 0.8239973544691326, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.192963726025726, 'colsample_bytree': 0.9505288895109653, 'reg_alpha': 4.515460419541116, 'reg_lambda': 4.7602789544104755, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:01,044] Trial 456 finished with value: 180.07955278535883 and parameters: {'learning_rate': 0.037627988453149935, 'n_estimators': 171, 'subsample': 0.8156533816018557, 'max_depth': 18, 'min_child_weight': 9, 'gamma': 4.646626579403717, 'colsample_bytree': 0.9605062521100599, 'reg_alpha': 4.187458805497723, 'reg_lambda': 4.610430331842245, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:03,051] Trial 457 finished with value: 185.23826182506377 and parameters: {'learning_rate': 0.025772783138378608, 'n_estimators': 167, 'subsample': 0.6723055062822945, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.53160509179226, 'colsample_bytree': 0.9414809866886046, 'reg_alpha': 4.66402146807918, 'reg_lambda': 4.3773047832473635, 'random_state': 0}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:05,116] Trial 458 finished with value: 186.46254056277704 and parameters: {'learning_rate': 0.03035984280347765, 'n_estimators': 173, 'subsample': 0.8486724259849692, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.983073163068298, 'colsample_bytree': 0.5794290072838142, 'reg_alpha': 4.270107545952262, 'reg_lambda': 4.263070688285909, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:10,317] Trial 459 finished with value: 235.5246084550893 and parameters: {'learning_rate': 0.035608876070423075, 'n_estimators': 72, 'subsample': 0.5923126653091161, 'max_depth': 20, 'min_child_weight': 2, 'gamma': 2.679031696453121, 'colsample_bytree': 0.9675343657177442, 'reg_alpha': 3.8810801947031117, 'reg_lambda': 4.8857713080022505, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:13,063] Trial 460 finished with value: 202.4756335052418 and parameters: {'learning_rate': 0.2431618836615424, 'n_estimators': 193, 'subsample': 0.7710209336270923, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.706454169078314, 'colsample_bytree': 0.6889393818613512, 'reg_alpha': 4.0869156815167536, 'reg_lambda': 4.708796869836424, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:15,664] Trial 461 finished with value: 176.26897914707783 and parameters: {'learning_rate': 0.04005278608889176, 'n_estimators': 168, 'subsample': 0.7941328179965439, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 4.320948051823219, 'colsample_bytree': 0.9302525961166342, 'reg_alpha': 4.882164539040304, 'reg_lambda': 4.469885963580915, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:18,022] Trial 462 finished with value: 175.84001583681712 and parameters: {'learning_rate': 0.04343694613418255, 'n_estimators': 163, 'subsample': 0.8056212962653784, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.445720282449568, 'colsample_bytree': 0.9499289488376439, 'reg_alpha': 4.760026529200164, 'reg_lambda': 4.820473694626818, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:23,874] Trial 463 finished with value: 176.8930726321995 and parameters: {'learning_rate': 0.04951207087432636, 'n_estimators': 163, 'subsample': 0.8045946581573855, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.843469178614312, 'colsample_bytree': 0.9688225280137738, 'reg_alpha': 4.68702394152897, 'reg_lambda': 4.812618599342107, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:26,233] Trial 464 finished with value: 180.08354030571158 and parameters: {'learning_rate': 0.0555849639917005, 'n_estimators': 161, 'subsample': 0.780637055830794, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.477605828376438, 'colsample_bytree': 0.9569297411358852, 'reg_alpha': 4.706186364898233, 'reg_lambda': 4.927164358153873, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:28,528] Trial 465 finished with value: 176.7072637463219 and parameters: {'learning_rate': 0.04582120258335437, 'n_estimators': 159, 'subsample': 0.7892633462462901, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.55810840537647, 'colsample_bytree': 0.947097664594701, 'reg_alpha': 4.811426069768707, 'reg_lambda': 4.776489332206804, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:30,849] Trial 466 finished with value: 177.6707591543339 and parameters: {'learning_rate': 0.0430106995891803, 'n_estimators': 163, 'subsample': 0.8072760729423933, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 0.15102162532575192, 'colsample_bytree': 0.9599548958044457, 'reg_alpha': 4.573025512533735, 'reg_lambda': 4.663412773663203, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:33,293] Trial 467 finished with value: 176.47721751224526 and parameters: {'learning_rate': 0.05060704884831397, 'n_estimators': 165, 'subsample': 0.8124430036336524, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.725225735237316, 'colsample_bytree': 0.9720386952383083, 'reg_alpha': 4.798509767344734, 'reg_lambda': 4.896192892577227, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:39,222] Trial 468 finished with value: 179.33451871574215 and parameters: {'learning_rate': 0.04262517306954195, 'n_estimators': 169, 'subsample': 0.7993853397379623, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.429062650334382, 'colsample_bytree': 0.9524552955944807, 'reg_alpha': 4.462714885712506, 'reg_lambda': 4.607219110886714, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:41,585] Trial 469 finished with value: 177.46109729815745 and parameters: {'learning_rate': 0.03938560834075057, 'n_estimators': 159, 'subsample': 0.8347964856117052, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.629137179234229, 'colsample_bytree': 0.9649349263649201, 'reg_alpha': 4.76833779662689, 'reg_lambda': 4.779957010967439, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:43,914] Trial 470 finished with value: 175.97262029067954 and parameters: {'learning_rate': 0.046633085271246724, 'n_estimators': 165, 'subsample': 0.8253404861260564, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.257453583487456, 'colsample_bytree': 0.9481263076498704, 'reg_alpha': 4.9145235979327335, 'reg_lambda': 4.831004564190562, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:46,708] Trial 471 finished with value: 178.21550761802797 and parameters: {'learning_rate': 0.04735813903174942, 'n_estimators': 165, 'subsample': 0.8287274258083936, 'max_depth': 17, 'min_child_weight': 7, 'gamma': 4.007272305921844, 'colsample_bytree': 0.9435778029691118, 'reg_alpha': 4.95822823002304, 'reg_lambda': 4.905595337324865, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:52,524] Trial 472 finished with value: 181.49296931235202 and parameters: {'learning_rate': 0.054133759950329645, 'n_estimators': 167, 'subsample': 0.8192865977663476, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 4.106526792502529, 'colsample_bytree': 0.9466304116844367, 'reg_alpha': 4.887187158006014, 'reg_lambda': 4.982418880610821, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:55,267] Trial 473 finished with value: 178.68312988970828 and parameters: {'learning_rate': 0.044383379298020664, 'n_estimators': 200, 'subsample': 0.8394744679651125, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 4.195413305993981, 'colsample_bytree': 0.9369458734058833, 'reg_alpha': 4.916393942709881, 'reg_lambda': 4.860611508334806, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:56,276] Trial 474 finished with value: 184.55066362157942 and parameters: {'learning_rate': 0.051107077983255964, 'n_estimators': 87, 'subsample': 0.5781513085234068, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.27598326145343, 'colsample_bytree': 0.9155007730025227, 'reg_alpha': 4.768387042031349, 'reg_lambda': 4.722424262629791, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:14:58,369] Trial 475 finished with value: 180.11245007027884 and parameters: {'learning_rate': 0.03873226713878073, 'n_estimators': 163, 'subsample': 0.8222958223477999, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 0.42913660560156147, 'colsample_bytree': 0.7658356351714061, 'reg_alpha': 4.91974810937777, 'reg_lambda': 4.839011903328063, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:00,887] Trial 476 finished with value: 178.7045828887245 and parameters: {'learning_rate': 0.06295978033918405, 'n_estimators': 170, 'subsample': 0.8042183617197306, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.36752635943836, 'colsample_bytree': 0.9752940245658359, 'reg_alpha': 4.985608730858288, 'reg_lambda': 4.724040590320477, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:06,823] Trial 477 finished with value: 177.21156075557957 and parameters: {'learning_rate': 0.04609878871150889, 'n_estimators': 167, 'subsample': 0.8152227742895873, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.491626356959325, 'colsample_bytree': 0.9282344744353592, 'reg_alpha': 4.5971539204166465, 'reg_lambda': 4.808133169901727, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:09,199] Trial 478 finished with value: 180.52606845016044 and parameters: {'learning_rate': 0.040780704323374155, 'n_estimators': 172, 'subsample': 0.8284074031805576, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 4.229318514109682, 'colsample_bytree': 0.9535570684781022, 'reg_alpha': 4.731755942116107, 'reg_lambda': 4.627605898398508, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:10,763] Trial 479 finished with value: 189.13204348732103 and parameters: {'learning_rate': 0.036708856137272754, 'n_estimators': 109, 'subsample': 0.8530938559570748, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.31902542499165, 'colsample_bytree': 0.9642074997943415, 'reg_alpha': 4.842682545441547, 'reg_lambda': 4.997048615377076, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:13,712] Trial 480 finished with value: 176.2897404818694 and parameters: {'learning_rate': 0.04344461706840917, 'n_estimators': 197, 'subsample': 0.807709015738666, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.546179712303574, 'colsample_bytree': 0.9455699434880905, 'reg_alpha': 4.6673616839353285, 'reg_lambda': 4.71612430722152, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:21,294] Trial 481 finished with value: 182.3640380576547 and parameters: {'learning_rate': 0.03570718450700705, 'n_estimators': 161, 'subsample': 0.9971621341774592, 'max_depth': 16, 'min_child_weight': 5, 'gamma': 4.15147596967506, 'colsample_bytree': 0.9724943170516074, 'reg_alpha': 3.0932644493188537, 'reg_lambda': 4.903239850613322, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:23,613] Trial 482 finished with value: 176.4501547191677 and parameters: {'learning_rate': 0.03961630917390782, 'n_estimators': 165, 'subsample': 0.7922190037946036, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.422031805858685, 'colsample_bytree': 0.955697658316529, 'reg_alpha': 4.370681461237016, 'reg_lambda': 4.808294919817543, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:29,776] Trial 483 finished with value: 188.15074233775456 and parameters: {'learning_rate': 0.03290579479148046, 'n_estimators': 170, 'subsample': 0.8435290854276287, 'max_depth': 19, 'min_child_weight': 3, 'gamma': 3.8746811103967858, 'colsample_bytree': 0.9351267105918061, 'reg_alpha': 4.873246429283551, 'reg_lambda': 3.70552608580378, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:35,071] Trial 484 finished with value: 182.384875022896 and parameters: {'learning_rate': 0.04754794221409155, 'n_estimators': 173, 'subsample': 0.86379046017953, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.6137759571328765, 'colsample_bytree': 0.7905695867623103, 'reg_alpha': 4.5392444986615255, 'reg_lambda': 4.602663435913445, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:37,261] Trial 485 finished with value: 264.39402450883364 and parameters: {'learning_rate': 0.0129639985361837, 'n_estimators': 168, 'subsample': 0.8196764475174736, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.275854787312393, 'colsample_bytree': 0.9800324421600437, 'reg_alpha': 4.761886220740797, 'reg_lambda': 2.2662740442358134, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:39,793] Trial 486 finished with value: 179.55897587248535 and parameters: {'learning_rate': 0.028034623489702648, 'n_estimators': 174, 'subsample': 0.8355368094786145, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.085426430801247, 'colsample_bytree': 0.9628237480639521, 'reg_alpha': 1.919294679569328, 'reg_lambda': 4.701515495392548, 'random_state': 7}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:42,216] Trial 487 finished with value: 177.62594234739868 and parameters: {'learning_rate': 0.04182188724925017, 'n_estimators': 164, 'subsample': 0.7819315095576035, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.3892033719073344, 'colsample_bytree': 0.924590638654474, 'reg_alpha': 4.632752441373008, 'reg_lambda': 3.4198582590520403, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:48,239] Trial 488 finished with value: 178.20276203574363 and parameters: {'learning_rate': 0.0364765180047814, 'n_estimators': 157, 'subsample': 0.8294743458548501, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.497992997871867, 'colsample_bytree': 0.9450789686709411, 'reg_alpha': 4.831468267455786, 'reg_lambda': 2.1259595632657806, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:50,680] Trial 489 finished with value: 179.68207571840043 and parameters: {'learning_rate': 0.030151729928771905, 'n_estimators': 170, 'subsample': 0.8118531107408304, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.70753999439132, 'colsample_bytree': 0.9521242187708936, 'reg_alpha': 4.387686147980267, 'reg_lambda': 4.81174674511788, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:53,327] Trial 490 finished with value: 181.59577424338113 and parameters: {'learning_rate': 0.05528010096953025, 'n_estimators': 176, 'subsample': 0.8014941187398764, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.354131126936147, 'colsample_bytree': 0.9829883359744469, 'reg_alpha': 4.292175930093446, 'reg_lambda': 4.617073796124071, 'random_state': 6}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:15:55,822] Trial 491 finished with value: 178.41316451419914 and parameters: {'learning_rate': 0.03914319563595414, 'n_estimators': 168, 'subsample': 0.7635147011404634, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.5959439883221425, 'colsample_bytree': 0.9634663646421596, 'reg_alpha': 4.924081658216665, 'reg_lambda': 4.531025714195451, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:01,555] Trial 492 finished with value: 189.90657003102035 and parameters: {'learning_rate': 0.02420489041503121, 'n_estimators': 172, 'subsample': 0.8233372039716451, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.4788375756258825, 'colsample_bytree': 0.8723829064029326, 'reg_alpha': 0.4465120822293627, 'reg_lambda': 4.911043333045912, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:03,946] Trial 493 finished with value: 177.3301756597622 and parameters: {'learning_rate': 0.0452563539874694, 'n_estimators': 162, 'subsample': 0.8123125779848659, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.30097848753322, 'colsample_bytree': 0.93814694367828, 'reg_alpha': 2.1127473878517424, 'reg_lambda': 4.709071739047843, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:07,076] Trial 494 finished with value: 178.41575487296006 and parameters: {'learning_rate': 0.03455798285229835, 'n_estimators': 192, 'subsample': 0.7929952307045561, 'max_depth': 18, 'min_child_weight': 10, 'gamma': 4.8402999388279095, 'colsample_bytree': 0.9740371743066235, 'reg_alpha': 2.0252034720261007, 'reg_lambda': 4.995330462575476, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:09,397] Trial 495 finished with value: 176.55340340583575 and parameters: {'learning_rate': 0.05063212731704012, 'n_estimators': 166, 'subsample': 0.8299532977281044, 'max_depth': 17, 'min_child_weight': 10, 'gamma': 2.992750582559559, 'colsample_bytree': 0.9551956033080674, 'reg_alpha': 4.443307634471955, 'reg_lambda': 4.53254022313118, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:10,176] Trial 496 finished with value: 236.05667474501868 and parameters: {'learning_rate': 0.04252369369793634, 'n_estimators': 58, 'subsample': 0.840579829635673, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.223484581746281, 'colsample_bytree': 0.9694812042887899, 'reg_alpha': 4.181501517177518, 'reg_lambda': 4.812998609688406, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:15,786] Trial 497 finished with value: 180.21513327840074 and parameters: {'learning_rate': 0.037555015434768815, 'n_estimators': 176, 'subsample': 0.7776098759083949, 'max_depth': 20, 'min_child_weight': 10, 'gamma': 4.423788637805141, 'colsample_bytree': 0.9337399725441803, 'reg_alpha': 4.739439350540826, 'reg_lambda': 3.7966981275383866, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:17,682] Trial 498 finished with value: 176.84595165867987 and parameters: {'learning_rate': 0.03274056169329811, 'n_estimators': 169, 'subsample': 0.5016320082641639, 'max_depth': 20, 'min_child_weight': 9, 'gamma': 0.24401653898498488, 'colsample_bytree': 0.9480258591641152, 'reg_alpha': 3.599614662433739, 'reg_lambda': 4.663917483825124, 'random_state': 2}. Best is trial 222 with value: 174.33006352000734.\n","[I 2024-07-27 19:16:19,974] Trial 499 finished with value: 176.55049151355738 and parameters: {'learning_rate': 0.04043208405502724, 'n_estimators': 161, 'subsample': 0.801082296787476, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.5534768434367, 'colsample_bytree': 0.9609074958829837, 'reg_alpha': 4.994103905561158, 'reg_lambda': 4.90519343848132, 'random_state': 1}. Best is trial 222 with value: 174.33006352000734.\n"]}]},{"cell_type":"code","source":["# Access the best params\n","best_params = study_2.best_params\n","print(best_params)\n","\n","# Access the best score\n","best_score = study_2.best_value\n","print(\"Best score:\", best_score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sPVFIxGUiOLo","executionInfo":{"status":"ok","timestamp":1722111783225,"user_tz":-180,"elapsed":436,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"9015d940-2076-40d7-aba6-ee39fb936026"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'learning_rate': 0.03651862217415622, 'n_estimators': 176, 'subsample': 0.8174948001627808, 'max_depth': 19, 'min_child_weight': 10, 'gamma': 4.183038504429461, 'colsample_bytree': 0.9710297478048349, 'reg_alpha': 4.605190204784239, 'reg_lambda': 4.769320759481973, 'random_state': 1}\n","Best score: 174.33006352000734\n"]}]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n","\n","# Initialize the XGBRegressor\n","xgb_reg = xgb.XGBRegressor(**best_params)\n","\n","# Train the model\n","xgb_reg.fit(X_train_film, y_train_film)\n","\n","# Predict on the test set\n","y_pred = xgb_reg.predict(X_test_film)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_film, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_film, y_pred)\n","mae = mean_absolute_error(y_test_film, y_pred)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"Root Mean Squared Error: {rmse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Mean Absolute Error: {mae}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"brBQ-sj7d25s","executionInfo":{"status":"ok","timestamp":1722111788236,"user_tz":-180,"elapsed":3261,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"90443396-0791-4807-e603-8e1ca9d418d5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error: 169972.27321988004\n","Root Mean Squared Error: 412.27693753092717\n","R² Score: 0.9146605797044469\n","Mean Absolute Error: 174.33006352000734\n"]}]},{"cell_type":"code","source":["# Convert the numpy array y_pred to a pandas Series\n","y_pred_series = pd.Series(y_pred, name='y_pred')\n","\n","# Ensure indices are aligned by resetting index if necessary\n","y_test_film_reset = y_test_film.reset_index(drop=True)\n","y_pred_series_reset = y_pred_series.reset_index(drop=True)\n","X_test_film_reset = X_test_film.reset_index(drop=True)\n","\n","# Concatenate the dataframe and series along the columns\n","merged_df = pd.concat([X_test_film_reset, y_test_film_reset, y_pred_series_reset], axis=1)"],"metadata":{"id":"gKHiuyLD3H7u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["file_path = 'film_merged_df.xlsx'\n","merged_df.to_excel(file_path, index=False)"],"metadata":{"id":"PPxkqALP3Rng"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# END OF LINE"],"metadata":{"id":"ohiTK6jNdjeV"}},{"cell_type":"markdown","metadata":{"id":"6Moo6Dlrdniw"},"source":["## Thin Film Energy"]},{"cell_type":"markdown","metadata":{"id":"FWqV4FdCoLHZ"},"source":["###XGboost"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"n207Q9y_cyj6"},"outputs":[],"source":["import xgboost as xgb\n","from sklearn.metrics import mean_squared_error, r2_score\n","\n","# Initialize the XGBRegressor\n","xgb_reg = xgb.XGBRegressor(objective=\"reg:squarederror\", random_state=42)\n","\n","# Train the model\n","xgb_reg.fit(X_train_film, y_train_film)\n","\n","# Predict on the test set\n","y_pred = xgb_reg.predict(X_test_film)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_film, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_film, y_pred)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Root Mean Squared Error: {rmse}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"93_wU8Y7c3Jl"},"outputs":[],"source":["feature_importance = xgb_reg.feature_importances_\n","feature_names = X_train_film.columns\n","\n","# Plot feature importance\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_names, feature_importance)\n","plt.xlabel('Feature Importance')\n","plt.title('Feature Importance for GradientBoostingRegressor')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"JMUszIDtueQh"},"source":["###CatBoostRegressor"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oyUOhS5cvrKu"},"outputs":[],"source":["pip install catboost"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d4CDCIaVus1O"},"outputs":[],"source":["import numpy as np\n","from catboost import Pool, CatBoostRegressor\n","\n","# initialize Pool\n","train_pool = Pool(X_train_film,\n","                  y_train_film,\n","                  )\n","test_pool = Pool(X_test_film,\n","                 y_test_film)\n","\n","# specify the training parameters\n","model = CatBoostRegressor(iterations=500,\n","                          depth=2,\n","                          learning_rate=1,\n","                          loss_function='RMSE')\n","#train the model\n","model.fit(train_pool)\n","# make the prediction using the resulting model\n","preds = model.predict(test_pool)\n","print(preds)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_film, preds)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_film, preds)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Root Mean Squared Error: {rmse}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"btm26wHQ0iVE"},"outputs":[],"source":["!pip install optuna"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xbT7XtlN0wmP"},"outputs":[],"source":["import optuna"]},{"cell_type":"markdown","metadata":{"id":"iGAA53OXdqCE"},"source":["# Polycrystalline Energy"]},{"cell_type":"code","source":["pip install xgboost\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ru6mF9dGF4YD","executionInfo":{"status":"ok","timestamp":1722098927813,"user_tz":-180,"elapsed":9481,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"1952a8c2-9f39-497a-cf49-2771565464f6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: xgboost in /usr/local/lib/python3.10/dist-packages (2.1.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from xgboost) (1.25.2)\n","Requirement already satisfied: nvidia-nccl-cu12 in /usr/local/lib/python3.10/dist-packages (from xgboost) (2.22.3)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from xgboost) (1.13.1)\n"]}]},{"cell_type":"code","source":["from xgboost import XGBRegressor\n"],"metadata":{"id":"NGtRPoUyGKYe"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dgvmat4zdrwS","colab":{"base_uri":"https://localhost:8080/","height":547},"executionInfo":{"status":"error","timestamp":1722098957073,"user_tz":-180,"elapsed":469,"user":{"displayName":"Ali Al Mulla","userId":"05003599294759759046"}},"outputId":"7aed87ca-085f-4c94-cc27-bfc6454078bf"},"outputs":[{"output_type":"error","ename":"XGBoostError","evalue":"[16:49:14] /workspace/src/data/data.cc:514: Check failed: valid: Label contains NaN, infinity or a value too large.\nStack trace:\n  [bt] (0) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(+0x22d7cc) [0x7b660b82d7cc]\n  [bt] (1) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(+0x4b3019) [0x7b660bab3019]\n  [bt] (2) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(+0x4b4850) [0x7b660bab4850]\n  [bt] (3) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(XGDMatrixSetInfoFromInterface+0xb2) [0x7b660b734b42]\n  [bt] (4) /lib/x86_64-linux-gnu/libffi.so.8(+0x7e2e) [0x7b666d9dee2e]\n  [bt] (5) /lib/x86_64-linux-gnu/libffi.so.8(+0x4493) [0x7b666d9db493]\n  [bt] (6) /usr/lib/python3.10/lib-dynload/_ctypes.cpython-310-x86_64-linux-gnu.so(+0xa3e9) [0x7b666da043e9]\n  [bt] (7) /usr/lib/python3.10/lib-dynload/_ctypes.cpython-310-x86_64-linux-gnu.so(+0x9a00) [0x7b666da03a00]\n  [bt] (8) /usr/bin/python3(_PyObject_MakeTpCall+0x25b) [0x5b235b8173cb]\n\n","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mXGBoostError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-75-578189d4a934>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m# Train the model\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mxgb_reg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_crystal\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train_crystal\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# Predict on the test set\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    724\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    725\u001b[0m                 \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 726\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    727\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    728\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/sklearn.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight, base_margin, eval_set, verbose, xgb_model, sample_weight_eval_set, base_margin_eval_set, feature_weights)\u001b[0m\n\u001b[1;32m   1079\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mconfig_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mverbosity\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mverbosity\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1080\u001b[0m             \u001b[0mevals_result\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTrainingCallback\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mEvalsLog\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1081\u001b[0;31m             train_dmatrix, evals = _wrap_evaluation_matrices(\n\u001b[0m\u001b[1;32m   1082\u001b[0m                 \u001b[0mmissing\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmissing\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1083\u001b[0m                 \u001b[0mX\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/sklearn.py\u001b[0m in \u001b[0;36m_wrap_evaluation_matrices\u001b[0;34m(missing, X, y, group, qid, sample_weight, base_margin, feature_weights, eval_set, sample_weight_eval_set, base_margin_eval_set, eval_group, eval_qid, create_dmatrix, enable_categorical, feature_types)\u001b[0m\n\u001b[1;32m    594\u001b[0m     \"\"\"Convert array_like evaluation matrices into DMatrix.  Perform validation on the\n\u001b[1;32m    595\u001b[0m     way.\"\"\"\n\u001b[0;32m--> 596\u001b[0;31m     train_dmatrix = create_dmatrix(\n\u001b[0m\u001b[1;32m    597\u001b[0m         \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m         \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/sklearn.py\u001b[0m in \u001b[0;36m_create_dmatrix\u001b[0;34m(self, ref, **kwargs)\u001b[0m\n\u001b[1;32m   1001\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0m_can_use_qdm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtree_method\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbooster\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"gblinear\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1002\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1003\u001b[0;31m                 return QuantileDMatrix(\n\u001b[0m\u001b[1;32m   1004\u001b[0m                     \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mref\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mref\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnthread\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mn_jobs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_bin\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmax_bin\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1005\u001b[0m                 )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    724\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    725\u001b[0m                 \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 726\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    727\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    728\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, data, label, weight, base_margin, missing, silent, feature_names, feature_types, nthread, max_bin, ref, group, qid, label_lower_bound, label_upper_bound, feature_weights, enable_categorical, data_split_mode)\u001b[0m\n\u001b[1;32m   1571\u001b[0m                 )\n\u001b[1;32m   1572\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1573\u001b[0;31m         self._init(\n\u001b[0m\u001b[1;32m   1574\u001b[0m             \u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1575\u001b[0m             \u001b[0mref\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mref\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36m_init\u001b[0;34m(self, data, ref, enable_categorical, **meta)\u001b[0m\n\u001b[1;32m   1630\u001b[0m             \u001b[0mctypes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbyref\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1631\u001b[0m         )\n\u001b[0;32m-> 1632\u001b[0;31m         \u001b[0mit\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreraise\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1633\u001b[0m         \u001b[0;31m# delay check_call to throw intermediate exception first\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1634\u001b[0m         \u001b[0m_check_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mret\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36mreraise\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    567\u001b[0m             \u001b[0mexc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    568\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_exception\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 569\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mexc\u001b[0m  \u001b[0;31m# pylint: disable=raising-bad-type\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    570\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    571\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__del__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36m_handle_exception\u001b[0;34m(self, fn, dft_ret)\u001b[0m\n\u001b[1;32m    548\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    549\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 550\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    551\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    552\u001b[0m             \u001b[0;31m# Defer the exception in order to return 0 and stop the iteration.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    635\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_temporary_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    636\u001b[0m         \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 637\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_handle_exception\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    638\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    639\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mabstractmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/data.py\u001b[0m in \u001b[0;36mnext\u001b[0;34m(self, input_data)\u001b[0m\n\u001b[1;32m   1414\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1415\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mit\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1416\u001b[0;31m         \u001b[0minput_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1417\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1418\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    724\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    725\u001b[0m                 \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 726\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    727\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    728\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36minput_data\u001b[0;34m(data, feature_names, feature_types, **kwargs)\u001b[0m\n\u001b[1;32m    624\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_temporary_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mnew\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcat_codes\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeature_names\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeature_types\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    625\u001b[0m             \u001b[0mdispatch_proxy_set_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mproxy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcat_codes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 626\u001b[0;31m             self.proxy.set_info(\n\u001b[0m\u001b[1;32m    627\u001b[0m                 \u001b[0mfeature_names\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfeature_names\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    628\u001b[0m                 \u001b[0mfeature_types\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfeature_types\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36minner_f\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    724\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mk\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0marg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparameters\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    725\u001b[0m                 \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mk\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marg\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 726\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    727\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    728\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minner_f\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36mset_info\u001b[0;34m(self, label, weight, base_margin, group, qid, label_lower_bound, label_upper_bound, feature_names, feature_types, feature_weights)\u001b[0m\n\u001b[1;32m    952\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    953\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlabel\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 954\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_label\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    955\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mweight\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    956\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_weight\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36mset_label\u001b[0;34m(self, label)\u001b[0m\n\u001b[1;32m   1090\u001b[0m         \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdispatch_meta_backend\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1091\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1092\u001b[0;31m         \u001b[0mdispatch_meta_backend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"label\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"float\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1093\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1094\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mset_weight\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mweight\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mArrayLike\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/data.py\u001b[0m in \u001b[0;36mdispatch_meta_backend\u001b[0;34m(matrix, data, name, dtype)\u001b[0m\n\u001b[1;32m   1360\u001b[0m         \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1361\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0m_is_pandas_series\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1362\u001b[0;31m         \u001b[0m_meta_from_pandas_series\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1363\u001b[0m         \u001b[0;32mreturn\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1364\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0m_is_dlpack\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/data.py\u001b[0m in \u001b[0;36m_meta_from_pandas_series\u001b[0;34m(data, name, dtype, handle)\u001b[0m\n\u001b[1;32m    677\u001b[0m         \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_dense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    678\u001b[0m     \u001b[0;32massert\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 679\u001b[0;31m     \u001b[0m_meta_from_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    680\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    681\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/data.py\u001b[0m in \u001b[0;36m_meta_from_numpy\u001b[0;34m(data, field, dtype, handle)\u001b[0m\n\u001b[1;32m   1293\u001b[0m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Masked array is not supported.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1294\u001b[0m     \u001b[0minterface_str\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_array_interface\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1295\u001b[0;31m     \u001b[0m_check_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_LIB\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mXGDMatrixSetInfoFromInterface\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mc_str\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfield\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minterface_str\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1296\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1297\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/xgboost/core.py\u001b[0m in \u001b[0;36m_check_call\u001b[0;34m(ret)\u001b[0m\n\u001b[1;32m    282\u001b[0m     \"\"\"\n\u001b[1;32m    283\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mret\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 284\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mXGBoostError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpy_str\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_LIB\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mXGBGetLastError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    285\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    286\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mXGBoostError\u001b[0m: [16:49:14] /workspace/src/data/data.cc:514: Check failed: valid: Label contains NaN, infinity or a value too large.\nStack trace:\n  [bt] (0) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(+0x22d7cc) [0x7b660b82d7cc]\n  [bt] (1) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(+0x4b3019) [0x7b660bab3019]\n  [bt] (2) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(+0x4b4850) [0x7b660bab4850]\n  [bt] (3) /usr/local/lib/python3.10/dist-packages/xgboost/lib/libxgboost.so(XGDMatrixSetInfoFromInterface+0xb2) [0x7b660b734b42]\n  [bt] (4) /lib/x86_64-linux-gnu/libffi.so.8(+0x7e2e) [0x7b666d9dee2e]\n  [bt] (5) /lib/x86_64-linux-gnu/libffi.so.8(+0x4493) [0x7b666d9db493]\n  [bt] (6) /usr/lib/python3.10/lib-dynload/_ctypes.cpython-310-x86_64-linux-gnu.so(+0xa3e9) [0x7b666da043e9]\n  [bt] (7) /usr/lib/python3.10/lib-dynload/_ctypes.cpython-310-x86_64-linux-gnu.so(+0x9a00) [0x7b666da03a00]\n  [bt] (8) /usr/bin/python3(_PyObject_MakeTpCall+0x25b) [0x5b235b8173cb]\n\n"]}],"source":["import xgboost as xgb\n","from sklearn.metrics import mean_squared_error, r2_score\n","\n","# Initialize the XGBRegressor\n","xgb_reg = xgb.XGBRegressor(objective=\"reg:squarederror\", random_state=42)\n","\n","# Train the model\n","xgb_reg.fit(X_train_crystal, y_train_crystal)\n","\n","# Predict on the test set\n","y_pred = xgb_reg.predict(X_test_crystal)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_crystal, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_crystal, y_pred)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Root Mean Squared Error: {rmse}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5TQkPq1vd0mL"},"outputs":[],"source":["feature_importance = xgb_reg.feature_importances_\n","feature_names = X_train_crystal.columns\n","\n","# Plot feature importance\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_names, feature_importance)\n","plt.xlabel('Feature Importance')\n","plt.title('Feature Importance for GradientBoostingRegressor')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"Nyrcv6ptkFpL"},"source":["# Hyperparameter Tuning for Thin Film Energy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3klNubP2kOHU"},"outputs":[],"source":["from xgboost import XGBRegressor\n","from sklearn.metrics import mean_absolute_error\n","\n","# Define the objective function\n","def objective(trial):\n","    # Define the search space for hyperparameters\n","    params = {\n","        \"learning_rate\": trial.suggest_float(\"learning_rate\", 0.01, 1.0, log=True),\n","        \"n_estimators\": trial.suggest_int(\"n_estimators\", 50, 200),\n","        \"subsample\": trial.suggest_float(\"subsample\", 0.5, 1.0),\n","        \"max_depth\": trial.suggest_int(\"max_depth\", 3, 20),\n","        \"min_child_weight\": trial.suggest_int(\"min_child_weight\", 1, 10),\n","        \"gamma\": trial.suggest_float(\"gamma\", 0.0, 5.0),\n","        \"colsample_bytree\": trial.suggest_float(\"colsample_bytree\", 0.5, 1.0),\n","        \"reg_alpha\": trial.suggest_float(\"reg_alpha\", 0.0, 5.0),\n","        \"reg_lambda\": trial.suggest_float(\"reg_lambda\", 0.0, 5.0),\n","        \"random_state\": trial.suggest_int(\"random_state\", 0, 10),\n","    }\n","\n","    # Create the regressor with the suggested hyperparameters\n","    xgb_reg = XGBRegressor(**params, objective=\"reg:squarederror\")\n","\n","    # Train the model\n","    xgb_reg.fit(X_train_film, y_train_film)\n","\n","    # Predict on the validation set\n","    y_pred = xgb_reg.predict(X_test_film)\n","\n","    # Calculate and return the mean absolute error\n","    mae = mean_absolute_error(y_test_film, y_pred)\n","\n","    return mae"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"scGnQCE72Pha"},"outputs":[],"source":["sampler = optuna.samplers.TPESampler(seed=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"G4m_YwVLkv7u"},"outputs":[],"source":["study_1 = optuna.create_study(direction='minimize', sampler=sampler)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iO81F7PYk6kt"},"outputs":[],"source":["study_1.optimize(objective, n_trials = 500)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q4UKs2AYnbqY"},"outputs":[],"source":["# Access the best params\n","best_params = study_1.best_params\n","print(best_params)\n","\n","# Access the best score\n","best_score = study_1.best_value\n","print(\"Best score:\", best_score)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CYhxCgAanl9-"},"outputs":[],"source":["import xgboost as xgb\n","from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n","\n","# Initialize the XGBRegressor\n","xgb_reg = xgb.XGBRegressor(**best_params)\n","\n","# Train the model\n","xgb_reg.fit(X_train_film, y_train_film)\n","\n","# Predict on the test set\n","y_pred = xgb_reg.predict(X_test_film)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_film, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_film, y_pred)\n","mae = mean_absolute_error(y_test_film, y_pred)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"Root Mean Squared Error: {rmse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Mean Absolute Error: {mae}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HFyPwo_bpkuo"},"outputs":[],"source":["feature_importance = xgb_reg.feature_importances_\n","feature_names = X_train_film.columns\n","\n","# Plot feature importance\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_names, feature_importance)\n","plt.xlabel('Feature Importance')\n","plt.title('Feature Importance for GradientBoostingRegressor')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"PF5S6Ve1pTKO"},"source":["# Hyperparameter Tuning for Polycrystalline Energy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1CREj3CGpWe1"},"outputs":[],"source":["from xgboost import XGBRegressor\n","from sklearn.metrics import mean_absolute_error\n","\n","# Define the objective function\n","def objective(trial):\n","    # Define the search space for hyperparameters\n","    params = {\n","        \"learning_rate\": trial.suggest_float(\"learning_rate\", 0.01, 1.0, log=True),\n","        \"n_estimators\": trial.suggest_int(\"n_estimators\", 50, 200),\n","        \"subsample\": trial.suggest_float(\"subsample\", 0.5, 1.0),\n","        \"max_depth\": trial.suggest_int(\"max_depth\", 3, 20),\n","        \"min_child_weight\": trial.suggest_int(\"min_child_weight\", 1, 10),\n","        \"gamma\": trial.suggest_float(\"gamma\", 0.0, 5.0),\n","        \"colsample_bytree\": trial.suggest_float(\"colsample_bytree\", 0.5, 1.0),\n","        \"reg_alpha\": trial.suggest_float(\"reg_alpha\", 0.0, 5.0),\n","        \"reg_lambda\": trial.suggest_float(\"reg_lambda\", 0.0, 5.0),\n","        \"random_state\": trial.suggest_int(\"random_state\", 0, 10),\n","    }\n","\n","    # Create the regressor with the suggested hyperparameters\n","    xgb_reg = XGBRegressor(**params, objective=\"reg:squarederror\")\n","\n","    # Train the model\n","    xgb_reg.fit(X_train_crystal, y_train_crystal)\n","\n","    # Predict on the validation set\n","    y_pred = xgb_reg.predict(X_test_crystal)\n","\n","    # Calculate and return the mean absolute error\n","    mae = mean_absolute_error(y_test_crystal, y_pred)\n","\n","    return mae"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VWRnnz3IDmWV"},"outputs":[],"source":["sampler2 = optuna.samplers.TPESampler(seed=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gWuTIdxHpvFL"},"outputs":[],"source":["study_2 = optuna.create_study(direction='minimize',sampler=sampler2)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oze3vxYHpzfG"},"outputs":[],"source":["study_2.optimize(objective, n_trials = 500)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Auduh3fzp2rN"},"outputs":[],"source":["# Access the best params\n","best_params = study_2.best_params\n","print(best_params)\n","\n","# Access the best score\n","best_score = study_2.best_value\n","print(\"Best score:\", best_score)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gZFwAzcAp8AD"},"outputs":[],"source":["import xgboost as xgb\n","from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n","\n","# Initialize the XGBRegressor\n","xgb_reg = xgb.XGBRegressor(**best_params)\n","\n","# Train the model\n","xgb_reg.fit(X_train_crystal, y_train_crystal)\n","\n","# Predict on the test set\n","y_pred = xgb_reg.predict(X_test_crystal)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_crystal, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_crystal, y_pred)\n","mae = mean_absolute_error(y_test_crystal, y_pred)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"Root Mean Squared Error: {rmse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Mean Absolute Error: {mae}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ubkd88rlqnXE"},"outputs":[],"source":["feature_importance = xgb_reg.feature_importances_\n","feature_names = X_train_crystal.columns\n","\n","# Plot feature importance\n","plt.figure(figsize=(10, 6))\n","plt.barh(feature_names, feature_importance)\n","plt.xlabel('Feature Importance')\n","plt.title('Feature Importance for GradientBoostingRegressor')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1ZI8Hxx11kxC"},"outputs":[],"source":["X_test_film.to_csv('X_test_film.csv', index=False)\n","X_test_crystal.to_csv('X_test_crystal.csv', index=False)"]},{"cell_type":"markdown","metadata":{"id":"tG0yjs2RHGAQ"},"source":["#Forcasting"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BSV52zpDHL2Z"},"outputs":[],"source":["df.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OP-95VShHHjw"},"outputs":[],"source":["train = df.loc[df.month < 10]\n","test = df.loc[df.month >= 10]\n","\n","plt.figure(figsize=(15,4))\n","sns.scatterplot(x=train.index ,y=\"thin_film_energy\", data=train, s=2,label='Training Set').set_title('Thin Film Split')\n","sns.scatterplot(x=test.index,y=\"thin_film_energy\", data=test, s=2,label='Test Set')\n","plt.axvline(x=train.index[-1], color='r', linewidth=2, ls='--')\n","plt.legend(loc=\"upper right\", fontsize=15,markerscale=4)\n","print(\"training dataset is\", len(train)/(len(train)+len(test)))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QfBkA19OHgaR"},"outputs":[],"source":["# Separate features and targets for target1\n","X_train_filmfor = train.iloc[:, :-2]  # All columns except the last two\n","y_train_filmfor = train.iloc[:, -2]   # The second to last column\n","\n","X_test_filmfor = test.iloc[:, :-2]    # All columns except the last two\n","y_test_filmfor = test.iloc[:, -2]     # The second to last column\n","\n","# Separate features and targets for target2\n","X_train_crystalfor = train.iloc[:, :-2]  # All columns except the last two\n","y_train_crystalfor = train.iloc[:, -1]   # The last column\n","\n","X_test_crystalfor = test.iloc[:, :-2]    # All columns except the last two\n","y_test_crystalfor = test.iloc[:, -1]     # The last column"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"L6laf9-fI3GE"},"outputs":[],"source":["import xgboost as xgb\n","from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n","\n","# Initialize the XGBRegressor\n","xgb_reg = xgb.XGBRegressor(**best_params)\n","\n","# Train the model\n","xgb_reg.fit(X_train_film, y_train_film)\n","\n","# Predict on the test set\n","y_pred = xgb_reg.predict(X_test_film)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test_film, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test_film, y_pred)\n","mae = mean_absolute_error(y_test_film, y_pred)\n","\n","# Print scores\n","print(f\"Mean Squared Error: {mse}\")\n","print(f\"Root Mean Squared Error: {rmse}\")\n","print(f\"R² Score: {r2}\")\n","print(f\"Mean Absolute Error: {mae}\")"]}],"metadata":{"colab":{"provenance":[{"file_id":"1zNilQnjt5jAnfCtnI8HHZwmA1B8loKfv","timestamp":1721585537982}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}